%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: HD_Dollar_Sign_Illustration_4.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Macaro
%%CreationDate: 15/10/23
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.3%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.3 x585 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">HD_Catrina_Coloring_Page_1</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2023-10-15T09:51:55-05:00</xmp:CreateDate>
         <xmp:ModifyDate>2023-10-15T09:51:55-05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2023-10-15T09:51:55-05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBKwErAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABK/++AAEA&#xA;AQEr/74AAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9IZpGl2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxVesTt2p88kIlNFUFv4n7skIMuFcIIx2rkuAJ4QuEcY/ZGHhC0G+C+A+7DQT&#xA;TuCfyj7saC00Y4/5Rg4QigtMEZ9sHAF4QtNv4H78iYI4VNoZB2r8siYljRW5FDWKuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqqQMd22H45MQZCKssaL0G/jlgiAyAXYUuxV2KuxV2Ku&#xA;xV2KuxV2KuxVpkVuoriRa0pNb/yn6DlZgxMUg8x6xd2M9hptgiyarqU3GFZASkcEZDXE7gFTxRNh&#xA;vuxUd8jw97ApxkVdirsVdirsVdirsVdirsVdirsVdirsVdirsVXKrMaDCBaQERHEqe58ctEaZgL8&#xA;kl2KuxV2KuxV2KsC89fmzaeU9et9FbS7nULm5t1uk+rlfss7px47kkekTiwlOkj/AOV+/wDfqan/&#xA;AMD/AM242jxFC7/5yLs7RQbny3fQcq+n6xWMMR7lcV8RH3H56W1u3CfRZI3/AJWurcNv7VrlEdRE&#xA;8r+TWNQCo/8AK/tO/wCrQ/8A0lW/9cl4w8/knxwr23562M0qA6PMImkijkkS4gcqJpBGrcQanc4j&#xA;NEmu9IzgmmeeadV/RPlrVNTrRrO0mmT/AF0QlR9LUy1tJ2X6S81p5es31Sf99b2kbX1zMQDySIGV&#xA;3Ow6gk4qOSS+TbeXVLi783XqFZdUURaXC4oYdNQkwih6NMT6rfMDtiUAXuyV4O6fdlZh3KYqJBBo&#xA;euQYNYFdirsVdirsVdirsVdirsVdirsVdiq5ELmg+k5IC0gWilUKKDLgKbAG8VdirsVdirsVdirs&#xA;VeAfnh/5My1IJBXy/cspBIIKxXpBqPcYlpyc3lfmNJ9M1m4soLqdoouHFnkJb4kVjWnEdW8MQ1lK&#xA;Zbi4loJZXkp05MWp9+FD6I9CH/fa/cM0FONQd6EP++1+4Y0tB5zLM0mu6hViwjubONa9gt+RT6Mz&#xA;sIow+P3M4DcPf/zGT6zoNvpf/V2v7Kzan++2nV5f+SUbZsHPkt82FtZ1G08pxE+jcgXetsP2bGNq&#xA;CI+9zIOH+qHxU77JrrfmTRNBhj+uzBJJfgtLOJTJPK3ZIYUBdvoFBikmkHo915u1K+S9vLePSNIU&#xA;N6enSAS3k3IUVpnU+nDTrwXkfE4qLT941cb9fHAY2pFoZ0ZDv07HKiKYEUtyKHYq7FXYq7FXYq7F&#xA;XYq7FXYq2qliAOpwgWqLRAq0H0nLgKbQG8KuxV2KuxV2KuxV2KuJCgsxoBuSegGKvn385JkvfzHg&#xA;ksa3qJoc1s5tVa44zTJeRxo3pB6FmkUb+OJacnN5trGjebdT1Ka+k0O9jebjVFtpiBxUL3X/ACcQ&#xA;Q1pRPpWqW8fqXFnPDGOryRuo+8gY2r6FzROM7FXnF1am21jUZJaIrXNlICTtxe/Zqk/RmZhnZh8f&#xA;uZQO4fSs9ppmpXFlcM6zPp0xubcI4KiRonh5MB1+CVqZsXYofUtFuSLyfRZo9P1PUGi+t38kZnb0&#xA;4l4DgjMFBVfsj7NSTQknFBCzQvKOkaPK91GHu9UmFLjVLtvVuZPbmfsr/koAvtioFJ1il2KtEAih&#xA;6YkKh5Iihr1XxymUaayKU8ih2KuxV2KuxV2KuxV2KuxVEwJReR6n9WXQDOIVMkydirsVdirsVdiq&#xA;U+ZPNWgeW7E3us3iWsO4jU7ySEfsxoPiY/IYoJAeUat+cXnDXIJJvLNnDoeiKSja9qrKorvTgGqn&#xA;L/IUSHElrOQ9Hm+ua5ol5Ix1zzDq3mSeteMFLa2B8Ea49U0+UC4N2slLLG21LU7wp5UtbuwtiAJw&#xA;bkuvIE/E8oSFfsnpTITyRj9RYmVM40jyHqSAPqut3cr9TDBNIqfS7Gp+4Zhz1n80NZyJ5beUvLlu&#xA;eS2EUknX1JwZnr48pORzHlnmerAyKb5Uh2KrZI45UMcih0bZkYAgj3BxBVLpPLPl93En6PhjlHSS&#xA;JBE4/wBlHxOWDNMdU8RRVvFrNj/xy9c1C04/Yieb61EPb07oTCnypl0dXMc92YzSCcWfn/znYUF/&#xA;Z2uswDYyWxNpc08eDmSJz/skzIhrInns3R1HeyrQPzC8sa1OLSK4az1I/wDStvV9C4qf5Vb4ZP8A&#xA;nmzZlRkDuG+MweTJMLJ2KuIBFD0xVDSxlDt9k9MplGmsilPIodirsVdirsVdirsVXxpycDt3yURZ&#xA;SAisubHYq7FXYq7FXYqwr8zPzL0/yZpyqqrda3dKfqFjv409SSm4QH6WOw7kLGUqeEa9dXkNxJr/&#xA;AJwV9Z8wuyrHpsnIWlnzUvGt1woAxAJW3Wncv3GC7aCe9h2sa7q2s3QuNRuGndRwiTZY407JFGtE&#xA;RR/KophARbKPJn5eyakqX+qcorA7xQjZ5R41/ZX379vHMTPqeHaPNrlOnqVraWtpAlvaxLDAgoka&#xA;AKB92a4yJNlqVsCuxV2KuxV2KuxV2KuxViXnSSyEciXESTv6fOOOQEg8SASCOlOXjk8QPFsaYi+J&#xA;69+VV1c3PkTTpLmV55Ea5hEkjFnKQ3UsUYLHc0RAM3EDcQXZYjcQyzJM3Yq0wDCh6HEhUK6FGofo&#xA;OUkU1kLcih2KuxV2KuxV2Koi3WilvHLYBnEKuTZOxV2KuxV2Kpb5k1+x8v6Fe6xen/R7OMyMo2LN&#xA;0RFr3diFGKCafOWnTalqurv5s1aZI9a1MSXNlLIKxafYwfDJelD14U9O3U9W360wEtF3uwzzL5h/&#xA;Scwt7RXg0i2ZjawO3KR2c/HPO37c0vVmPyGwGEBiSmv5eeU11e9N7eJy0+1YVQ9JJOoX5Dq39uY2&#xA;pzcIocy1zlT18AAUGwHQZq2pvFXYq7FUNd6lp1mK3d1Fbj/i11T/AIkRkoxJ5BaQaeavLruFS/hY&#xA;noQfhP8AsumS8KXcmimayI32WB+RrlbG12KXYq7FWC+fifrsY7G1nJHyeHL8H6R+lY83s35Rf8oD&#xA;Yf8AGe+/6jp82eP6R7nPxfSGY5NsdirsVWyJzWnftgkLQRaF6ZS1tYFdirsVdirsVRiCigeAzIA2&#xA;bQ3irsVdirsVdirx789799S1Py/5NjmMMV5Ib3UnH7EEdQHPiFVZWI/yRiWrIejyvzZrbfoQNEvo&#xA;P5hf1xANvR0uzYwWVuPYtGzHx4qcADWWFRRvLKkaDk7kKqjqSTQDCSxe+6DpMWk6RbWEdP3KD1GH&#xA;7Tnd2+ls0uSfFIloJtMMgh2KrXdERndgqKCzMdgANyTirEdR125vIzP9YfT9KY8YfTBFzcV6EbFl&#xA;Dfsqo5H2y0CjQFy+wIJ6BLkgMNZoLK3slO5ur1ucze5FSf8AgpMTK9iTL3fj9DG7625tR3odfslY&#xA;VqFWMD/hpWODw/6Evx8F4fIomKbUpD/o1/Z3X+TwIP8AwSSN/wARyJERzBH49yNu5EJrGvWtPWtD&#xA;Ig6vbSCQf8BIIz91cHDE8pfNRXQpjp/m2xuZPRduM/eJwY5f+Rb0J+jGUJDcjZlZHNO4p4pVrGwY&#xA;d/EZG0g2wvz6B9ZU9xbTAH5tFl+Dn8R+lY83sn5Rf8oDYf8AGe+/6jp82mP6R7nYYvpDMcm2OxV2&#xA;KuxVQnSh5Dv1yuY6sJBRyti7FXYq7FW1FWA8ThChGZe2uxV2KuxV2KuxV84/mbqTS/mL5uua1/RW&#xA;kLbwHuBc+hbvSo8b18S0TO7z/wA7vTX2tB/d6fb21ki+H1eBEf75AzH3OIYFvyFZLd+a7BGFUjcz&#xA;H5xKXX/hgMp1MqgWEjs9wzUNLsVdiqUea2I0KdeiyvDFJ3/dyzIkn/CMcni5/P7lCTRaZe32s29v&#xA;AVjubyaOysJWAZYUdeUsvHuwAbbvxA75LBETIj8SxxR4iA9LuPyK8hXVui3Md1LdhOL3xuJPVc/z&#xA;EEmMfILT2zbxiAKDsRiiGI63/wA4y2bBn0PWZI2A+CC9jDgn3lj4U/4A5JBxPP8AVvyo81+W5JJN&#xA;Z0q4vrBR8N7pkgcRkb8yCjtxHgyr8xgYGBCCsLfXJV5+WdWbU6bnT3/d3ageFtIXV/8Aniz/AEZT&#xA;PDA8w1nGCjLzWr63hjHmPSkntHbil3DR05jqoYFlEi/tLyVh3AzHOkreBpqOEjkUfpepttJol79c&#xA;jUVNhcNSZR/kO3xfQ1R75jThX1jhPeOTWRXPZvXtRTVIJJwCslvBIk8Tjg6OzxcQy+4B3G2HFExO&#xA;/U/rTG7e4flF/wAoDYf8Z77/AKjp82eP6R7nYYvpDMcm2OxV2KuxVplDKQe+JFqUIQQaHqMoamsC&#xA;uxV2Kr4v7xfnko80jmisubHYq7FXYq7FXYq+ZPzERv8AHf5gQkUkksICinuFnsZj/wAIhOJcefMs&#xA;I86v6nmrUpQKLNL6qdD8MgDqdvFWGI5MSmf5X0/xUlf98yAfOgzG1f0MJ8nsWatpdirsVQ9/ZQ31&#xA;lPaTV9OdCjEdRUbEe46jDGVG1YnL9fheK0nmNnrFs6TWN6o+B5IjySWOuzf5SfPtvlkTwS447hiL&#xA;ibD07y9+b+nPElv5nhOk3wFHulVpLKQ/zLKORjr/ACyUp4nNnjzwnyLnwzxkzux1HT9QgFxYXUV3&#xA;bt9maCRZEPyZCRlrdaIxVhnm38pvJ3mQvcS2v1HUz8SajZ/upefUM4HwPv3YV8CMWJgC8417y75x&#xA;8riQ65F+ndHdQj65bxCWYIv2Vv7Z/wC/jHix5L1WQHbAYtZiQ8p1u3076xHd6HHcW/Mt6toVkPou&#xA;p2aKUgFo3rVeXxL0NftFq+bWQqxa1PMix6zBK6JRRexgpMq13ViRR1Pg2Y8sFbw+XRqOOuT6Y/J2&#xA;VJfy802VN0klvXQkUqrXsxH4ZfAVEBy8X0hmeSbHYq7FXYq7FUPcLRq+OVTG7CQUsgxdirsVXxf3&#xA;i/PJR5pHNFZc2OxV2KuxV2KuxV4H+cGkpp35nWV/MfT0/wAx2j2NzM32VkaM2rMfaNXif6MS05Bu&#xA;8r8z203Gwu5UKSmH6jdoafBc6fS3ZD7+kImP+tiGsqXlHUl03zHY3bnjEsnCU9gkgKMT8g1crzQ4&#xA;oEMZDZ7xmmaHYq7FXYqpXFtb3MRhuIlmibqjgMPuOEEjkqlJpto/7PH/AFTkOFjwhAHyrpQm9eJW&#xA;guO08DGGT/g4uDfjlscs48iyFjkUytZvNVkP9D8yXwp+zcmO7Uj39dXf/hsvjrJjnu2xzSCaW/nn&#xA;z3aEetFp+rRDqKSWUp/2QNxH/wAKMvjrR1DYNR3p1YfmvoZZYtatrjRJSQvq3Kh7Uk+FxEWQD/X4&#xA;5kQyxlyLdHLEsyt7iC4hSe3kSaCQBo5Y2DIynoVYVBGWNipirsVdirsVdirsVdiqydaxn23yMxsi&#xA;XJC5S1uxV2KrkNHU++Ec0hF5e2OxV2KuxV2KuxViP5o+SF83+VZ7CIAajbn6xpzk0HrKCOBPg6kr&#xA;9x7YsZRsPm/Wrie60W7ee3Y30UkUesQPVJLe8gPpC5KkV4zx1SQf79FSfsghoLEMkxew/l75rj1T&#xA;TlsLl/8AcjaqF36yRjYMPEjo33981epw8Jsci1TjTL8xWDsVdirsVdirsVdirsVaIBBBFQdiDiqF&#xA;sYdR0Sdrry5cCxkY8pbF6tZTH/LhB+An+eOh+eZOLVSjz3DZDKYvQ/J/nmw8wiS1eM2Os2wrd6dI&#xA;QWA6epEwoJI6/tDp3AzZQmJCw5kMglyZLkmbsVdirsVdirsVcRUEeOJVBZjtTsVdirsVRoNQD45k&#xA;BtdirsVdirsVdirsVec/mT+Vn6cnOu6A0dp5hRCkySAehexUoYph0qV2qRv0PYqsJQt8yatpGp6R&#xA;fy2Gp2slndxGjwygqR7jxU9iNjhaCFG1uri0uI7m2kMU8R5RyLsQRgIBFFD1Tyt+ZFhfqlrqpW0v&#xA;dgJTtFIfmfsH57fqzW5tKY7x3DVKDNQQRUbg9DmIwbxV2KuxV2KuxV2KuxV2Ksf8z/W7KWz1ixk+&#xA;rXNnICLtftxE7Bj2aM/ZkU9V+WXYJmMtliSDYev+SvNUPmXQ0veAhvImMGoWta+lcJTko8VNQynu&#xA;pGbaMhIWHYwmJC0+wsnYq7FXYq7FXYqhHFHYe+UHm1lbgQ7FXYqioGrGPbbLoHZsjyX5JLsVdirs&#xA;VdirsVdiqT+ZfKHlzzNafVdaso7pR/dyH4ZYz4pItGX76HviggF4x5p/5xsvoi8/lnUFuI+os7z4&#xA;JB7LKo4N9Kr88LUcXc8s17yT5s8vs36X0u4tUU09cpyhJ9pU5Rn6GxYGJDtG84+YNICpa3JaBelv&#xA;L8cdPAA7r/sSMpyYIy5sDEFmWm/m1buAuoWhjbu8R5L9IO4/HMOejkORtqMCyax86aBe0EVyvJui&#xA;EhW/4FuLfhmNLHKPMMDY5hNUvrRukgHz2/XldhHEFdWVhVSCPEb4WTeKuxV2KuxVQvoEuLOaF1DI&#xA;6EFT0O3TFBSz8ptYl0vzdFZSufR1EPp1xU7G4tVMttIf8p4ar9IzZaae5Hfv+v7XI089673u+Zbm&#xA;OxV2KuxV2KuxVCy/3jfPKZc2s81mRQ7FXYqq27Uanjk4HdlEojLWbsVdirsVdir5/u/z5/MT9JXc&#xA;FlpenyQQy3axM0U9Slkpllq3rqCUiHJqfdi0+IUr/wChlfPX/LDpf/Iq4/6r4UeKU28tf85B+cdQ&#xA;1IQ3Ol2E8CoZJIoPVgkKig+F5JJlrv3H0jK8mQQFlBz1zes+WfzC8s+YGEFtcG21EiraddART/7F&#xA;SSsg90LDJRkJCw2xyCXJkpAIIIqD1GFmxnWfyz8hawWa+0S2Mj7tNCvoSEnuXhKMfpxYmILB9Y/5&#xA;xs8qXPJtL1C60+RvsrJxuIl+Sn03+98LE4gwDzD/AM4/ec9JVrizMer2ibutrVbngPtEQv1PgFZj&#xA;iwOMsWu7O807TxqmianNPpySCC5iYGCe2mIJVJ4AzrRuJ4uCQaEbHbKpY4y5hrMAWrHz/rluw9Yp&#xA;cKOpYcW+hk4/qyieigeWzUcIZv5e88Q6mfTRilwBVreXckDqVbv/AJ7Zg5sEsfmGqUTFlttcpcR8&#xA;l2I2ZfA5UDaQbVsKXYq7FWDJKbLzMlwp+K3vNMvFp3/f+i+237C0OZWmO8fiP0pwncPpbNm7J2Ku&#xA;xV2KuxV2KoWX+8b55TLm1nmsyKHYq7FWwSDUdRhVFqwZQR3y8G20N4q7FXYq7FXyzB9h/wDmK82/&#xA;90mLAXGecZJiyr8uLY3HmB4wRX6vId+h+JdsxNaPR8WvKLDKtS0W0juBZqywSn447WZS0Le8VeJU&#xA;/wDGNhTwzBhkkNz8+v497SCRum+kfmB528u8Y3uGuLNdhDfc7uECv7FylJ49unqAgZlY9Vfn9hb4&#xA;ag+9nmi/nboF1Gp1S0n08Hrcw/6ba/8AIyAFx/soxmTHNE7cj5uRHPE+TNdJ8x6BrCc9K1G3vRSp&#xA;EEqOw/1lBqPpy1tBBTHpucUvmnznqdlN5+82X2hEPbC3gjaSKhSW+E0Hp+mADyb1krt14scBaJc3&#xA;n/m5LRPNOrpaKEtlvJxEi0KqBIdlp+yP2fbCOTAofQvrP6Zs/qwJlEyUA8K/FX2pWvtleauA33MJ&#xA;8nr3lO5lnEsjNzjeSb0m8Y1lITp28PbNPMUa8g4wFFkeBm7FWmIAJPQb4qwZ0Nx5gMaf3ksumWqe&#xA;7yXZP6mGZOmG8fefuXFzHvfS+bR2bsVdirsVdirsVQbGrE+JygtRawK7FXYq7FVaB6Hie/TLIHoy&#xA;iVfLGbsVdirsVfLMH2H/AOYrzb/3SYsBcZ5xkmLMvyq/5Sd/+YaT/iSZiaz6PiwnyesXVpa3cJhu&#xA;oknhbrHIoZfuOa0SI5NSUTeWpYqnTbxoR2t7gGeL6CSJF/4Ij2yXEDzHy2QQCkt5ot0khlutJLSd&#xA;7vTpPi+ZoYZfwOTHlL4H8ELR6FKbm30t5AJb70pgdl1GAK4I8HZYJP8AhsnEzHT/AEp/tC7jp8lW&#xA;ex1e9tnt1v2ubZxR4or+4VCP9ST6wvhk/wA0Rzv4j+xl4p80rHk+aEnjBdFeQekdxD9pa8W3EfxC&#xA;ppkvznmPkV8VqPyfGsnI6ddyd6PPbKv08S5wHVH+cPkVOXzTnTvLM/8AdJDFYwOKSxW5aWeRe6tM&#xA;wBVT345RPPffI/Z8mBn8Wb6Zp6WcAQKFoAqovRVHRRlHmViEbhZOxVDX8ojtXNd2+EfT/ZgLGR2S&#xA;P8uLBtY86WEoFYhPLqsp8IbZRBb/APBSMrffmw00PV/VFfHm36ePq9z6CzOc52KuxV2KuxVpzRSf&#xA;AYk7KUHmO1OxV2KuxV2Kt9MKoqN+a1798uibbAbXYUuxV2KvkHWtTu7K1L25AY6prkJqK/BdW9vB&#xA;L18Y2NMerjFiGFizL8qv+Unf/mGk/wCJJmJrPo+LCfJ69msanYq7FVrojqVdQynqrCoP34ql0/ln&#xA;y9Oay6bbFj+2IlVv+CUA5YMsh1KbKgfJ3l39m2ZN6j05pkp8uLjHxpLbY8oaECCI56jf/eq5P/Mz&#xA;HxT5fIItN0jjQURQo9hTKkUuwpdirRIAJJoB1OKsS8z6oLl/qEMnpqylriXp6VuP7yQ+Bb7K/f2y&#xA;eMfxfLzLDnu9O/KPyy2naPJq9zD6N3qoQwQsKNDZRClvHQ9C1S7D/Kp2za4cfDGursMMOEebPctb&#xA;nYq7FXYq7FVK4aihfHITLGRQ+VMHYq7FXYq7FXYquRyjVH0jJA0kFFKQwqOhy4FsbxV2KvkvzV5f&#xA;Swv7jTtdvn0uVby6uord7V3qLhlHNJUYq6ssS0p74uMQkf6I8r/9X/8A6dJv642UJp5XvvLuga9D&#xA;crqJvIZY5IpGEDxemSVKk8iag79OmY+phKUaDCY22erWuo2V1GskEyujiqkEUI9vHNUdtmi0Til2&#xA;KuxV2KuxV2KuxV2KqU1zDCKyNQ9l7n6MBKCaYxrHmV5WktrHizx/3rsaQxD+aZ/+NRv+vJxhe55f&#xA;aWPNPfy4/L19akTVdTRm0QSCYeuvF9QlX7Lsva3Tbiv7X+r12OHDXqPwHc5eHD1L2zMpy3Yq7FXY&#xA;q7FXYqhZH5OT27ZTI2WslZkUOxV2KuxV2KuxV2KqkUhQ7/ZPXJRlSQaRIIIqOmXNjsVQGtaDo2t2&#xA;bWWrWcV7bN/uuVQaHpVT1VvdTXFSLeR+af8AnGzTp2efy1qBs3NSLK7rJFU9llX94oHuGOFqOLue&#xA;Wa/+U/n/AERmN1pMs8A/4+LQfWI6DufT5Mo/1gMWBgQx/TtY1TS5T9WlaOh/eQtupI61U9/xyrJh&#xA;jPmGqUAebL9L/MziFS8ieI9DJCar/wAAx2+85hT0JH0lqOEjkWT2PnfTbkD072Fieiyfu2+5uOYs&#xA;sOSPMMCJBN49aDKG4BlPRlbb+OV8THjVRq8XdGH3Y8SeNH5Jm7FUo1jzBFpsscTRPLJLtGsas7Eg&#xA;VOwHYYYxJRaUXPmfVpEJisnhj7y3DxwIPnu7/hkhAdT8t2PxQ2naZ5h8yy+nZJNqSMaMLMGG0Hb9&#xA;7eOd/kpr7ZkY9OegrzP6myGInkHpnlT8nbG09G48wNFePEQ0Olwrxso28WB3nb3fb/JzNx4RHfme&#xA;9y8eADc7l6QAAAAKAdBlre7FXYq7FXYq7FVOd6LxHU/qyMyxkUNlLB2KuxV2KuxV2KuxV2KuxVUj&#xA;lKGnVfDJRlSQaRAIIqOmXAtjeKuxV2Kse1CHyHrupHS76Gw1PUVUs8DpHPLGB3Y0Yx+1SMUbFI73&#xA;8jfyzuizDSjbu1atBPMtK+Cl2Qf8Dix8MPNvzJ/KXyp5U/Q93Ym6uEv75bSa2nlXgFkVipVkRXFG&#xA;HjiWE4AMDu9U03S3jMPl62AmVnieW5vWLKkrxFj6U8NDzibImN82s0hbXzLfT39vHGv1ZHlQcYpr&#xA;pgBUVFJZpRv3rlc8MKOwYGI7nt+ahpdirCvPcjx3MUkbFJEgumR1NCCLdiCCMuwCyf8AN+9A5/J7&#xA;Lon5a+RrWG3uV0iGe4KI/q3Re6bkQDUeu0lN/DNsIgcnYxgB0ZYiIihEUKiiiqBQAewGFm3irsVd&#xA;irsVdirsVadwq1P0DATSkoRmLEk9TlJNtTWBXYq7FXYq7FXYq7FXYq7FXYquR2Q7dO4yQNJBpEpI&#xA;rjbr4ZaJWzBtLdduPMkaRRaFaW080vL1Li8laOGGlKEois8lanYU6dRhU2ki+R9R1E+p5p1y41FD&#xA;udOtK2NkB14skTerIB/lyH5Yo4e9CWUseqO+h+TYk0ry7bMY9Q1q0RYwzD4WhsqCjP8Azzbhe1Wx&#xA;X3J95W12XWo725ijA0qG4a2024LMz3CQDhLKa/smUMqmu9K4pBthP59f7weWv+2xB/xFsSwyPnzz&#xA;FdQTGxjibk9tDNFOKEcXN5cSAbjf4JFO2IaUDpZA1K1J6CVP+JDIz5FB5PoD63a/79X7xmjtxrDv&#xA;rdr/AL9X7xja2GE+e5Ve5TgQyG2vDUe1sf65kafmffH71jz+T6SsP94Lb/jEn/ERm2dor4q7FXYq&#xA;7FXYq7FWmYKKnEmlJQruXNT9Aykm2sm1uRQ7FXYq7FXYq7FXYq7FXYq7FXYq7FWwSDUdcKrzeRxR&#xA;tJOwSKMFnlYgKqgVJYnoBkxPvZCTDzc33n1mis3ksvJgJWe8UmOfUqbGOLYNHb9Qz/afoKCpyxPP&#xA;3IzzqzWHl+08t6EqWd3rEi6ZYLEoVYImUtPKqrSgihVjt3pisuVMj0vTbTTNOttOs09O1tIkhhTw&#xA;VBQV8T4nFkAwn84/K/mPX9J0pdBt0ubyxvkujHI6xrxRGpuzJX4iO+LCYJeLTfkX+Z8srytpkYaR&#xA;ixAuYKVJr/PhavDLdv8AkZ+ZsNxHKdLRgjBiBc29TQ+75GQsUpxlkt9+WX5iXsvKbSldFJMSSPYS&#xA;cA3YFyT2zDhpjEbfeWoaeQQv/KofPf8A1ZYfu03J+DLv+0p8GX4Lb/lL+YJiZBpQAEUyRRrLZRIG&#xA;nj4FiI2GIwm/l39F8GT6HtI2itYY2+0iKrfMADMpzFXFXYq7FXYq7FVkkqp7nwyJlSCUOzMxqcqJ&#xA;tgStwIdirsVdirsVdirsVdirsVdirsVdirsVdirG9a8t32v6l6Gqyovlq3KOmnxFud3IAGrdGgpG&#xA;jdI1ry6se2SBpFMkipEqrGAiqAFVRQADoAMAKQVrWtjLqFvqE8Ia8tUkit5iSeCzFTJRa0q3prvS&#xA;uTE2XEjldW6GuWA2ztvFXYq7FXYq7FXYq7FXYq7FXYqtaRF6nfwwGQCCVF52Oy7D8crM2JkpZBi7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq3iq5ZpB3r88kJFNlUFx4j7skJsuJcJ4z&#xA;7ZLjCeILhJH/ADDDxBbDfNP5h9+Gwm3c18R9+NhbaMkY/aGDiCLC0zxjvXBxheILTceA+/ImaOJT&#xA;aV270+WRMixsrMih2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:ed205556-4190-412f-b481-695f4207ab6d</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:ed205556-4190-412f-b481-695f4207ab6d</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:a730a801-3c2f-9947-aca6-a8cc81a69e8e</stRef:instanceID>
            <stRef:documentID>xmp.did:6cad1b35-4cca-44b0-b9aa-0c15b9e56b74</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ce2f0848-8446-4f46-b690-8d5962b09990</stEvt:instanceID>
                  <stEvt:when>2019-06-05T09:04:25-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:65b2f048-9232-42fd-a0a0-f7f1e89d8c83</stEvt:instanceID>
                  <stEvt:when>2019-06-19T07:49:01-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7da522f9-62bd-49cb-ad39-66a12d10cf0b</stEvt:instanceID>
                  <stEvt:when>2019-06-19T08:40:57-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b69b3fa2-6146-40cc-b518-12c1854dcd4b</stEvt:instanceID>
                  <stEvt:when>2020-04-01T10:25:36-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:be487533-0b81-4444-bb0c-7eeb94a2ccd5</stEvt:instanceID>
                  <stEvt:when>2020-04-01T11:22:51-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1c0ddd41-5efe-4e5d-9595-f164e6106170</stEvt:instanceID>
                  <stEvt:when>2020-04-01T11:27:18-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fcc39c0c-237b-419b-959a-654fd4c40a78</stEvt:instanceID>
                  <stEvt:when>2020-04-01T11:35:40-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:dcd10938-0730-4ae9-af25-9cdac98bb438</stEvt:instanceID>
                  <stEvt:when>2020-04-07T12:15:09-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e459a7d4-eeb0-435b-87be-92cbca19bbfa</stEvt:instanceID>
                  <stEvt:when>2020-04-07T15:47:07-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bde2cfa1-67a6-4341-845a-c254ac707eab</stEvt:instanceID>
                  <stEvt:when>2021-08-27T15:26:33-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:69cf599d-f702-44cb-bfc6-2b0a5e5fd448</stEvt:instanceID>
                  <stEvt:when>2021-08-27T17:11:50-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:90a774ae-79a3-4943-b837-7846df24a2fd</stEvt:instanceID>
                  <stEvt:when>2021-09-23T10:17:56-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07c8f633-1c1f-4377-a1bd-3a328597014e</stEvt:instanceID>
                  <stEvt:when>2021-09-23T13:02:29-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4fd86bf6-4def-424d-aa04-71134d1d3d01</stEvt:instanceID>
                  <stEvt:when>2021-09-27T20:02:06-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:383c6062-eb47-48f4-a0df-b4f1bf0c2173</stEvt:instanceID>
                  <stEvt:when>2021-09-28T12:23:29-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5bfbbab0-f147-4b8c-88d0-41a3f7bc4d10</stEvt:instanceID>
                  <stEvt:when>2021-10-08T14:58:58-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f50314ec-ccf8-4c21-bfa6-ea3ea96b8a88</stEvt:instanceID>
                  <stEvt:when>2021-10-08T15:21:44-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e4a8239a-8afc-4e0d-bdc2-7e53de25f638</stEvt:instanceID>
                  <stEvt:when>2023-08-25T18:44:47-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:71805625-bb5c-4f75-a8ff-2d88f5c934cd</stEvt:instanceID>
                  <stEvt:when>2023-08-28T09:48:53-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ed205556-4190-412f-b481-695f4207ab6d</stEvt:instanceID>
                  <stEvt:when>2023-10-15T09:51:55-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grupo de muestras por defecto</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grupo de colores 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=249 B=194</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>234</xmpG:red>
                           <xmpG:green>249</xmpG:green>
                           <xmpG:blue>194</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=203 B=102</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>203</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=65 G=83 B=45</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>65</xmpG:red>
                           <xmpG:green>83</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 500 mo
0 500 li
0 0 li
500 0 li
500 500 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.917647 .976471 .760784 rgb
f
282.356 451.442 mo
241.584 451.442 198.656 441.004 158.335 419.154 cv
46.8965 358.767 -2.40337 234.079 48.2216 140.657 cv
80.5297 81.0367 145.73 48.558 217.645 48.558 cv
258.416 48.558 301.344 58.9958 341.664 80.8452 cv
453.103 141.234 502.403 265.922 451.778 359.343 cv
419.47 418.963 354.27 451.442 282.356 451.442 cv
212.742 380.943 mo
212.734 381.121 212.756 381.422 212.848 381.904 cv
213.098 383.208 212.848 384.815 212.848 386.142 cv
212.848 390.067 212.848 393.993 212.848 397.918 cv
212.848 404.123 212.848 410.327 212.848 416.532 cv
212.848 417.105 213.43 417.441 213.931 417.441 cv
225.301 417.441 236.67 417.441 248.039 417.441 cv
248.58 417.441 248.909 416.925 248.945 416.445 cv
296.129 416.445 li
296.129 378.074 li
296.129 378.074 357.95 371.252 370.313 317.532 cv
370.319 317.51 370.324 317.484 370.33 317.462 cv
370.331 317.455 370.332 317.451 370.334 317.445 cv
370.338 317.425 370.343 317.402 370.348 317.382 cv
370.349 317.379 370.349 317.376 370.35 317.373 cv
370.355 317.35 370.361 317.324 370.366 317.301 cv
370.367 317.298 370.368 317.292 370.369 317.289 cv
370.374 317.268 370.379 317.245 370.384 317.225 cv
370.384 317.221 370.385 317.218 370.386 317.215 cv
370.392 317.19 370.397 317.166 370.403 317.141 cv
370.404 317.136 li
370.409 317.113 370.415 317.088 370.42 317.065 cv
370.421 317.058 li
370.433 317.009 370.444 316.959 370.455 316.909 cv
370.456 316.906 370.456 316.904 370.457 316.9 cv
370.468 316.849 370.479 316.801 370.491 316.749 cv
370.491 316.745 li
370.503 316.694 370.514 316.643 370.525 316.592 cv
370.526 316.589 li
371.492 312.207 372.125 307.983 372.448 303.921 cv
372.448 303.918 li
372.455 303.822 372.463 303.727 372.47 303.632 cv
372.471 303.626 li
372.472 303.603 372.474 303.584 372.475 303.561 cv
372.476 303.555 li
372.479 303.509 372.483 303.462 372.486 303.416 cv
372.487 303.41 li
372.488 303.387 372.49 303.363 372.492 303.34 cv
372.492 303.339 li
372.493 303.317 372.495 303.299 372.496 303.276 cv
372.497 303.27 372.497 303.265 372.498 303.259 cv
372.499 303.241 372.5 303.222 372.502 303.203 cv
372.502 303.2 372.502 303.197 372.502 303.194 cv
372.504 303.173 372.505 303.152 372.507 303.132 cv
372.507 303.126 372.508 303.118 372.508 303.112 cv
372.509 303.098 372.51 303.08 372.511 303.066 cv
372.512 303.057 372.512 303.055 372.513 303.046 cv
372.514 303.027 372.515 303.005 372.517 302.986 cv
372.517 302.98 372.518 302.972 372.518 302.966 cv
372.519 302.95 372.52 302.939 372.521 302.922 cv
372.522 302.913 372.522 302.908 372.523 302.899 cv
372.524 302.879 372.525 302.862 372.526 302.842 cv
372.527 302.833 372.527 302.828 372.528 302.819 cv
372.529 302.805 372.53 302.793 372.531 302.778 cv
372.531 302.769 372.532 302.762 372.532 302.753 cv
372.533 302.734 372.535 302.713 372.536 302.695 cv
372.536 302.692 372.537 302.681 372.537 302.678 cv
372.538 302.663 372.539 302.647 372.54 302.632 cv
372.54 302.626 372.541 302.614 372.542 302.608 cv
372.543 302.593 372.543 302.578 372.544 302.564 cv
372.545 302.552 372.546 302.537 372.547 302.525 cv
372.547 302.515 372.548 302.501 372.549 302.49 cv
372.55 302.478 372.55 302.47 372.551 302.458 cv
372.552 302.447 372.552 302.436 372.553 302.426 cv
372.554 302.411 372.555 302.399 372.556 302.384 cv
372.556 302.369 372.557 302.36 372.558 302.345 cv
372.559 302.333 372.559 302.323 372.56 302.311 cv
372.561 302.301 372.561 302.294 372.562 302.284 cv
372.563 302.263 372.564 302.247 372.565 302.226 cv
372.566 302.217 372.566 302.208 372.567 302.2 cv
372.567 302.188 372.568 302.173 372.569 302.162 cv
372.569 302.155 372.57 302.149 372.57 302.143 cv
372.572 302.098 372.575 302.055 372.577 302.01 cv
372.578 302.006 372.578 302.004 372.578 301.999 cv
372.581 301.952 372.583 301.905 372.586 301.858 cv
372.586 301.855 li
372.587 301.84 372.588 301.823 372.589 301.808 cv
372.589 301.806 372.589 301.805 372.589 301.803 cv
374.948 257.938 340.757 233.14 302.098 225.868 cv
300.095 225.491 298.15 225.121 296.262 224.758 cv
296.262 224.756 li
257.794 217.349 243.152 212.435 246.196 198.385 cv
246.196 198.384 246.196 198.383 246.196 198.383 cv
246.197 198.377 246.199 198.37 246.2 198.364 cv
246.2 198.364 246.2 198.362 246.201 198.361 cv
246.202 198.356 246.203 198.349 246.204 198.344 cv
246.205 198.343 246.205 198.34 246.205 198.339 cv
246.207 198.334 246.208 198.328 246.209 198.323 cv
246.209 198.321 246.21 198.321 246.21 198.319 cv
246.211 198.314 246.212 198.308 246.213 198.303 cv
246.214 198.301 246.215 198.298 246.215 198.296 cv
246.216 198.292 246.217 198.286 246.218 198.282 cv
246.219 198.279 246.219 198.277 246.22 198.275 cv
246.221 198.27 246.222 198.265 246.223 198.261 cv
246.223 198.258 246.224 198.256 246.225 198.253 cv
246.226 198.248 246.226 198.245 246.228 198.24 cv
246.228 198.237 246.228 198.236 246.229 198.233 cv
246.23 198.228 246.231 198.224 246.232 198.219 cv
246.233 198.216 246.234 198.212 246.234 198.21 cv
246.235 198.205 246.236 198.202 246.237 198.197 cv
246.238 198.195 246.239 198.19 246.239 198.187 cv
246.24 198.184 246.241 198.18 246.242 198.177 cv
246.243 198.169 246.245 198.163 246.247 198.155 cv
246.247 198.155 li
246.941 195.116 249.262 192.606 252.921 190.733 cv
253.079 191.059 253.412 191.309 253.877 191.309 cv
253.879 191.309 253.881 191.309 253.883 191.309 cv
253.947 191.309 254.012 191.309 254.076 191.309 cv
260.572 191.309 267.271 192.913 273.503 194.525 cv
292.233 199.37 309.872 207.891 326.399 217.819 cv
326.565 217.919 326.725 217.962 326.874 217.962 cv
326.968 217.962 327.057 217.945 327.14 217.913 cv
338.86 218.055 350.58 218.196 362.3 218.337 cv
362.303 218.337 362.307 218.337 362.31 218.337 cv
363.13 218.337 363.566 217.036 362.856 216.575 cv
362.642 216.435 362.428 216.297 362.213 216.158 cv
362.213 144.862 li
362.213 144.862 362.209 144.859 362.202 144.854 cv
362.153 144.822 li
362.119 144.8 li
360.441 143.713 336.348 128.523 294.424 124.823 cv
294.424 88.1577 li
249.801 88.1577 li
249.801 88.1283 249.801 88.0997 249.801 88.0703 cv
249.801 87.497 249.219 87.1611 248.717 87.1611 cv
235.785 87.1611 222.852 87.1611 209.92 87.1611 cv
209.346 87.1611 209.011 87.7437 209.011 88.2446 cv
209.011 100.136 209.011 112.029 209.011 123.92 cv
186.76 126.316 163.59 137.432 148.607 153.928 cv
134.663 169.282 127.863 190.282 128.514 210.897 cv
129.108 229.704 137.741 246.408 152.323 258.186 cv
166.948 269.999 185.087 276.465 202.994 281.421 cv
202.998 281.422 203.001 281.423 203.005 281.424 cv
203.005 281.424 li
203.009 281.425 203.012 281.426 203.016 281.427 cv
212.436 283.985 221.981 285.977 231.465 288.273 cv
238.168 289.896 246.539 291.419 251.796 296.265 cv
257.087 301.141 255.613 309.923 249.045 312.875 cv
246.614 313.967 243.747 314.449 240.979 314.449 cv
240.06 314.449 239.152 314.396 238.275 314.295 cv
238.228 314.289 238.182 314.287 238.137 314.287 cv
237.596 314.287 237.243 314.672 237.146 315.104 cv
217.667 311.441 193.808 303.528 166.503 289.07 cv
166.503 288.865 166.503 288.66 166.503 288.454 cv
166.503 287.88 165.921 287.545 165.42 287.545 cv
152.683 287.545 139.945 287.545 127.208 287.545 cv
126.635 287.545 126.299 288.127 126.299 288.628 cv
126.299 299.311 126.299 309.995 126.299 320.679 cv
126.299 328.073 126.299 335.467 126.299 342.86 cv
126.299 345.473 126.299 348.085 126.299 350.697 cv
126.299 351.728 125.937 353.539 126.299 354.537 cv
126.873 356.116 129.032 356.885 130.466 357.698 cv
135.533 360.569 140.834 363.035 146.211 365.26 cv
154.874 368.843 163.812 371.764 172.877 374.141 cv
178.835 375.703 184.856 377.023 190.917 378.119 cv
197.754 379.356 205.078 379.439 211.797 381.013 cv
211.995 381.059 212.156 381.078 212.287 381.078 cv
212.525 381.078 212.664 381.016 212.742 380.943 cv
.968627 .992157 .847059 rgb
f
165.507 354.198 mo
165.507 288.541 li
127.295 288.541 li
127.295 354.625 li
127.295 354.625 157.566 375.09 213.844 380.205 cv
213.844 416.445 li
247.952 416.445 li
247.952 378.5 li
195.085 376.795 165.507 354.198 165.507 354.198 cv
.254902 .32549 .176471 rgb
f
326.826 216.915 mo
362.213 217.341 li
316.977 187.644 271.53 182.171 253.796 190.313 cv
253.797 190.313 282.487 190.055 326.826 216.915 cv
f
203.185 280.44 mo
232.604 288.541 256.154 289.44 256.053 303.463 cv
255.952 317.47 238.135 315.284 238.094 315.279 cv
273.477 321.731 294.151 314.09 294.424 306.447 cv
294.85 294.51 283.765 290.673 264.153 285.557 cv
244.541 280.44 157.566 268.929 166.093 201.566 cv
174.62 134.203 248.805 125.249 248.805 125.249 cv
248.805 88.1577 li
210.007 88.1577 li
210.007 124.823 li
210.007 124.823 142.644 131.219 131.133 191.76 cv
119.621 252.302 170.536 271.449 203.185 280.44 cv
f
132.468 348.297 mo
132.493 330.521 133.191 312.637 132.509 294.873 cv
132.485 294.267 131.469 294.296 131.445 294.902 cv
130.763 312.655 131.465 330.531 131.49 348.296 cv
131.491 348.927 132.467 348.928 132.468 348.297 cv
cp
.917647 .976471 .760784 rgb
f
138.179 332.507 mo
138.244 319.564 138.828 306.482 138.194 293.556 cv
138.165 292.943 137.155 292.989 137.126 293.596 cv
136.498 306.543 137.089 319.645 137.147 332.607 cv
137.15 333.277 138.176 333.167 138.179 332.507 cv
cp
f
219.096 411.728 mo
219.208 402.403 219.255 393.075 219.01 383.753 cv
218.995 383.171 218.103 383.063 218.088 383.67 cv
217.861 392.998 217.883 402.33 218.002 411.66 cv
218.011 412.357 219.087 412.438 219.096 411.728 cv
cp
f
223.879 402.014 mo
223.89 396.807 224.234 391.499 223.864 386.306 cv
223.825 385.756 222.904 385.643 222.861 386.235 cv
222.481 391.492 222.827 396.866 222.837 402.136 cv
222.839 402.812 223.877 402.681 223.879 402.014 cv
cp
f
258.985 313.456 mo
265.869 304.229 261.422 290.487 249.596 288.508 cv
248.99 288.406 248.788 289.378 249.371 289.56 cv
259.8 292.79 264.551 303.504 258.193 312.876 cv
257.884 313.332 258.65 313.904 258.985 313.456 cv
cp
f
265.451 313.226 mo
268.285 308.417 268.735 301.979 265.202 297.357 cv
264.863 296.913 264.027 297.282 264.292 297.836 cv
266.615 302.694 267.261 307.774 264.498 312.64 cv
264.143 313.264 265.084 313.849 265.451 313.226 cv
cp
f
156.342 254.093 mo
135.177 234.854 130.382 200.269 143.602 175.212 cv
155.959 151.789 182.696 134.029 209.033 131.794 cv
209.93 131.718 209.692 130.406 208.827 130.432 cv
181.957 131.25 153.312 151.981 141.587 175.723 cv
128.828 201.562 134.21 235.384 155.769 254.705 cv
156.169 255.063 156.743 254.457 156.342 254.093 cv
cp
f
152.19 241.746 mo
135.206 213.091 141.489 177.849 165.802 155.665 cv
166.396 155.124 165.61 154.2 164.991 154.716 cv
139.298 176.144 134.175 213.959 151.48 242.133 cv
151.751 242.574 152.457 242.195 152.19 241.746 cv
cp
f
216.018 121.001 mo
216.042 116.372 216.065 111.743 216.08 107.114 cv
216.086 105.189 216.089 103.264 216.092 101.339 cv
216.093 100.798 215.787 93.7822 215.481 94.0127 cv
216.599 93.1704 221.386 94.0205 222.775 94.0225 cv
229.401 94.0313 236.028 93.9893 242.653 93.9893 cv
243.417 93.9893 243.3 92.8052 242.539 92.8052 cv
233.541 92.8052 224.541 92.7695 215.542 92.7817 cv
215.232 92.7822 214.873 92.9854 214.873 93.3428 cv
214.886 102.523 214.91 111.703 214.958 120.883 cv
214.961 121.559 216.015 121.691 216.018 121.001 cv
cp
f
221.312 116.111 mo
221.334 110.717 221.557 105.276 221.258 99.8892 cv
221.225 99.2969 220.244 99.2871 220.212 99.8872 cv
219.924 105.293 220.135 110.742 220.158 116.154 cv
220.161 116.898 221.309 116.854 221.312 116.111 cv
cp
f
290.589 193.882 mo
304.392 198.565 316.459 205.83 328.452 213.94 cv
328.979 214.296 329.638 213.608 329.123 213.172 cv
318.076 203.832 304.462 197.544 290.811 193.098 cv
290.311 192.935 290.094 193.714 290.589 193.882 cv
cp
f
313.268 199.523 mo
321.54 203.432 328.316 208.753 335.471 214.334 cv
335.971 214.724 336.609 214.078 336.155 213.61 cv
329.931 207.192 321.685 202.481 313.646 198.749 cv
313.144 198.516 312.765 199.285 313.268 199.523 cv
cp
f
248.373 124.364 mo
235.375 123.96 222.16 123.735 209.166 124.261 cv
208.421 124.291 208.463 125.379 209.197 125.409 cv
222.164 125.931 235.345 125.706 248.316 125.306 cv
248.914 125.287 248.99 124.383 248.373 124.364 cv
cp
f
165.731 352.962 mo
153.009 352.631 140.24 352.813 127.515 352.873 cv
126.743 352.877 126.586 354.08 127.375 354.084 cv
140.182 354.143 153.028 354.311 165.831 353.994 cv
166.511 353.978 166.381 352.979 165.731 352.962 cv
f
248.113 378.085 mo
236.708 379.287 225.128 379.256 213.742 380.754 cv
213.104 380.838 213.246 381.881 213.879 381.865 cv
221.546 381.675 229.253 380.758 236.897 380.16 cv
239.857 379.929 244.603 380.452 247.395 379.287 cv
247.619 379.193 249.935 377.893 248.113 378.085 cv
cp
f
166.503 354.111 mo
166.503 332.226 166.503 310.34 166.503 288.454 cv
166.503 287.88 165.921 287.545 165.42 287.545 cv
152.683 287.545 139.945 287.545 127.208 287.545 cv
126.635 287.545 126.299 288.127 126.299 288.628 cv
126.299 299.311 126.299 309.995 126.299 320.679 cv
126.299 328.073 126.299 335.467 126.299 342.86 cv
126.299 345.473 126.299 348.085 126.299 350.697 cv
126.299 351.728 125.937 353.539 126.299 354.537 cv
126.873 356.116 129.032 356.885 130.466 357.698 cv
135.533 360.569 140.834 363.035 146.211 365.26 cv
154.874 368.843 163.812 371.764 172.877 374.141 cv
178.835 375.703 184.856 377.023 190.917 378.119 cv
197.754 379.356 205.078 379.439 211.797 381.013 cv
212.426 381.16 212.688 381.029 212.782 380.897 cv
212.955 380.656 212.563 380.414 212.848 381.904 cv
213.098 383.208 212.848 384.815 212.848 386.142 cv
212.848 390.067 212.848 393.993 212.848 397.918 cv
212.848 404.123 212.848 410.327 212.848 416.532 cv
212.848 417.105 213.43 417.441 213.931 417.441 cv
225.301 417.441 236.67 417.441 248.039 417.441 cv
248.613 417.441 248.948 416.859 248.948 416.357 cv
248.948 403.71 248.948 391.061 248.948 378.413 cv
248.948 377.826 248.365 377.522 247.865 377.504 cv
226.984 376.732 206.144 372.762 186.852 364.604 cv
179.73 361.592 172.348 358.137 166.15 353.433 cv
165.126 352.656 163.836 354.185 164.864 354.965 cv
171.474 359.981 179.348 363.66 186.962 366.816 cv
206.335 374.846 227.134 378.724 248.039 379.496 cv
247.678 379.193 247.317 378.891 246.956 378.587 cv
246.956 391.235 246.956 403.884 246.956 416.532 cv
247.259 416.171 247.562 415.81 247.865 415.449 cv
236.496 415.449 225.126 415.449 213.757 415.449 cv
214.118 415.752 214.48 416.055 214.84 416.357 cv
214.84 404.278 214.84 392.198 214.84 380.118 cv
214.84 379.715 214.431 379.26 214.025 379.222 cv
185.491 376.528 155.633 369.983 130.569 355.46 cv
129.839 355.036 128.899 354.643 128.27 354.075 cv
127.921 353.761 127.962 353.969 128.074 354.177 cv
128.191 354.395 128.386 354.613 128.292 354.229 cv
127.699 351.812 128.292 348.471 128.292 346.004 cv
128.292 334.893 128.292 323.782 128.292 312.671 cv
128.292 304.599 128.292 296.526 128.292 288.454 cv
127.989 288.814 127.686 289.176 127.383 289.537 cv
140.12 289.537 152.857 289.537 165.594 289.537 cv
165.233 289.234 164.872 288.931 164.511 288.628 cv
164.511 310.514 164.511 332.399 164.511 354.285 cv
164.511 355.572 166.503 355.391 166.503 354.111 cv
.254902 .32549 .176471 rgb
f
326.914 217.911 mo
338.709 218.053 350.505 218.195 362.3 218.337 cv
363.126 218.347 363.569 217.038 362.856 216.575 cv
343.008 203.675 321.111 193.569 297.872 188.653 cv
283.962 185.711 266.936 183.422 253.447 189.376 cv
252.394 189.84 252.752 191.314 253.883 191.309 cv
260.439 191.277 267.21 192.898 273.503 194.525 cv
292.233 199.37 309.872 207.891 326.399 217.819 cv
327.503 218.482 328.348 216.667 327.254 216.01 cv
310.57 205.989 292.769 197.449 273.865 192.558 cv
267.384 190.88 260.458 189.284 253.709 189.316 cv
253.854 189.961 254 190.606 254.145 191.251 cv
267.334 185.429 283.913 187.75 297.511 190.621 cv
320.391 195.452 342.027 205.405 361.57 218.107 cv
361.755 217.52 361.941 216.932 362.126 216.345 cv
350.331 216.203 338.535 216.061 326.739 215.918 cv
325.453 215.903 325.636 217.895 326.914 217.911 cv
f
203.005 281.424 mo
212.428 283.983 221.978 285.977 231.465 288.273 cv
238.168 289.896 246.539 291.419 251.796 296.265 cv
257.087 301.141 255.613 309.923 249.045 312.875 cv
245.807 314.33 241.796 314.702 238.275 314.295 cv
237.007 314.148 236.634 316.037 237.913 316.263 cv
253.642 319.039 273.912 321.674 288.84 314.056 cv
291.716 312.588 294.761 310.434 295.373 307.045 cv
296.278 302.027 293.337 296.998 289.507 294.059 cv
280.375 287.05 267.126 285.109 256.075 282.684 cv
246.044 280.481 236.049 278.092 226.3 274.838 cv
202.673 266.952 177.235 253.312 169.12 228.02 cv
159.628 198.438 174.933 164.88 198.779 146.934 cv
212.956 136.266 231.151 128.422 248.892 126.246 cv
249.464 126.176 249.801 125.721 249.801 125.163 cv
249.801 112.798 249.801 100.435 249.801 88.0703 cv
249.801 87.497 249.219 87.1611 248.717 87.1611 cv
235.785 87.1611 222.852 87.1611 209.92 87.1611 cv
209.346 87.1611 209.011 87.7437 209.011 88.2446 cv
209.011 100.467 209.011 112.688 209.011 124.911 cv
209.314 124.549 209.617 124.188 209.92 123.827 cv
187.394 126.015 163.794 137.208 148.607 153.928 cv
134.663 169.282 127.863 190.282 128.514 210.897 cv
129.108 229.704 137.741 246.408 152.323 258.186 cv
166.95 270.001 185.095 276.468 203.005 281.424 cv
204.247 281.768 204.598 279.797 203.366 279.456 cv
171.587 270.662 135.927 254.358 131.061 217.633 cv
128.308 196.857 134.367 174.266 147.696 158.039 cv
157.557 146.033 171.021 137.519 185.454 132.057 cv
193.296 129.089 201.709 126.634 210.094 125.82 cv
210.667 125.764 211.003 125.283 211.003 124.736 cv
211.003 112.514 211.003 100.293 211.003 88.0703 cv
210.7 88.4316 210.397 88.7925 210.094 89.1538 cv
223.027 89.1538 235.96 89.1538 248.892 89.1538 cv
248.531 88.8506 248.169 88.5479 247.809 88.2446 cv
247.809 100.609 247.809 112.973 247.809 125.337 cv
248.111 124.976 248.415 124.615 248.717 124.253 cv
234.751 125.967 220.674 131.319 208.508 138.197 cv
183.918 152.097 167.243 175.949 164.791 204.389 cv
162.501 230.95 176.821 252.076 199.19 265.095 cv
217.682 275.856 238.56 280.81 259.234 285.425 cv
266.5 287.047 273.856 288.88 280.77 291.65 cv
286.592 293.982 296.703 300.166 292.944 308.094 cv
290.358 313.546 280.546 315.095 275.451 315.85 cv
263.118 317.676 250.478 316.449 238.275 314.295 cv
238.154 314.951 238.034 315.607 237.913 316.263 cv
247.863 317.412 261.382 311.032 256.148 298.863 cv
253.542 292.802 246.048 290.33 240.28 288.564 cv
228.17 284.858 215.587 282.775 203.366 279.456 cv
202.123 279.118 201.771 281.089 203.005 281.424 cv
f
362.213 217.341 mo
362.213 144.862 li
362.213 144.862 337.911 128.661 294.424 124.823 cv
294.424 88.1577 li
248.805 88.1577 li
248.805 125.25 li
248.805 125.25 174.62 134.203 166.093 201.566 cv
157.566 268.929 244.541 280.44 264.153 285.557 cv
283.765 290.673 294.85 294.51 294.424 306.447 cv
293.997 318.385 243.795 330.323 165.507 288.541 cv
165.507 354.198 li
165.507 354.198 195.085 376.795 247.952 378.5 cv
247.952 416.445 li
296.129 416.445 li
296.129 378.074 li
296.129 378.074 357.95 371.252 370.313 317.532 cv
382.678 263.812 345.159 233.968 302.098 225.868 cv
259.037 217.767 242.836 213.077 246.247 198.155 cv
250.183 180.933 306.362 180.675 362.213 217.341 cv
.65098 .796078 .4 rgb
f
203.946 371.694 mo
179.024 364.765 165.507 354.198 165.507 354.198 cv
165.507 354.198 li
165.507 354.198 178.962 364.478 203.946 371.694 cv
.207843 .290196 .121569 rgb
f
248.309 377.589 mo
230.974 377.589 216.102 375.074 203.946 371.694 cv
178.962 364.478 165.507 354.198 165.507 354.198 cv
165.507 351.71 li
179.042 358.409 217.525 368.082 249.552 369.115 cv
249.552 377.585 li
249.136 377.588 248.722 377.589 248.309 377.589 cv
.537255 .713725 .278431 rgb
f
296.129 416.445 mo
248.945 416.445 li
248.945 416.445 li
296.129 416.445 li
296.129 378.074 li
296.129 378.074 357.95 371.252 370.313 317.532 cv
370.319 317.509 370.324 317.485 370.33 317.462 cv
370.324 317.484 370.319 317.51 370.313 317.532 cv
357.95 371.252 296.129 378.074 296.129 378.074 cv
296.129 416.445 li
.8 .890196 .592157 rgb
f
248.945 416.445 mo
247.952 416.445 li
247.4 403.887 li
247.952 403.887 li
247.952 416.445 li
248.945 416.445 li
248.945 416.445 li
.207843 .290196 .121569 rgb
f
370.334 317.445 mo
370.338 317.425 370.343 317.402 370.348 317.382 cv
370.343 317.402 370.338 317.425 370.334 317.445 cv
370.35 317.373 mo
370.356 317.347 370.36 317.327 370.366 317.301 cv
370.361 317.324 370.355 317.35 370.35 317.373 cv
370.369 317.289 mo
370.374 317.269 370.379 317.244 370.384 317.225 cv
370.379 317.245 370.374 317.268 370.369 317.289 cv
370.386 317.215 mo
370.392 317.189 370.397 317.167 370.403 317.141 cv
370.397 317.166 370.392 317.19 370.386 317.215 cv
370.404 317.136 mo
370.41 317.109 370.414 317.091 370.42 317.065 cv
370.415 317.088 370.409 317.113 370.404 317.136 cv
370.421 317.058 mo
370.432 317.009 370.444 316.958 370.455 316.909 cv
370.444 316.959 370.433 317.009 370.421 317.058 cv
370.457 316.9 mo
370.469 316.848 370.479 316.801 370.491 316.749 cv
370.479 316.801 370.468 316.849 370.457 316.9 cv
370.491 316.745 mo
370.503 316.693 370.514 316.644 370.525 316.592 cv
370.514 316.643 370.503 316.694 370.491 316.745 cv
370.526 316.589 mo
371.492 312.205 372.124 307.985 372.448 303.921 cv
372.125 307.983 371.492 312.207 370.526 316.589 cv
372.448 303.918 mo
372.456 303.821 372.463 303.728 372.47 303.632 cv
372.463 303.727 372.455 303.822 372.448 303.918 cv
372.471 303.626 mo
372.472 303.602 372.474 303.585 372.475 303.561 cv
372.474 303.584 372.472 303.603 372.471 303.626 cv
372.476 303.555 mo
372.479 303.507 372.483 303.464 372.486 303.416 cv
372.483 303.462 372.479 303.509 372.476 303.555 cv
372.487 303.41 mo
372.488 303.386 372.49 303.364 372.492 303.34 cv
372.49 303.363 372.488 303.387 372.487 303.41 cv
372.492 303.339 mo
372.493 303.318 372.495 303.297 372.496 303.276 cv
372.495 303.299 372.493 303.317 372.492 303.339 cv
372.498 303.259 mo
372.499 303.241 372.5 303.221 372.502 303.203 cv
372.5 303.222 372.499 303.241 372.498 303.259 cv
372.502 303.194 mo
372.504 303.173 372.505 303.153 372.507 303.132 cv
372.505 303.152 372.504 303.173 372.502 303.194 cv
372.508 303.112 mo
372.509 303.097 372.51 303.081 372.511 303.066 cv
372.51 303.08 372.509 303.098 372.508 303.112 cv
372.513 303.046 mo
372.514 303.028 372.515 303.004 372.517 302.986 cv
372.515 303.005 372.514 303.027 372.513 303.046 cv
372.518 302.966 mo
372.519 302.951 372.52 302.937 372.521 302.922 cv
372.52 302.939 372.519 302.95 372.518 302.966 cv
372.523 302.899 mo
372.524 302.881 372.525 302.86 372.526 302.842 cv
372.525 302.862 372.524 302.879 372.523 302.899 cv
372.528 302.819 mo
372.529 302.807 372.53 302.79 372.531 302.778 cv
372.53 302.793 372.529 302.805 372.528 302.819 cv
372.532 302.753 mo
372.534 302.732 372.535 302.716 372.536 302.695 cv
372.535 302.713 372.533 302.734 372.532 302.753 cv
372.537 302.678 mo
372.538 302.66 372.539 302.65 372.54 302.632 cv
372.539 302.647 372.538 302.663 372.537 302.678 cv
372.542 302.608 mo
372.543 302.593 372.543 302.579 372.544 302.564 cv
372.543 302.578 372.543 302.593 372.542 302.608 cv
372.547 302.525 mo
372.548 302.513 372.548 302.502 372.549 302.49 cv
372.548 302.501 372.547 302.515 372.547 302.525 cv
372.551 302.458 mo
372.552 302.449 372.552 302.435 372.553 302.426 cv
372.552 302.436 372.552 302.447 372.551 302.458 cv
372.556 302.384 mo
372.556 302.372 372.557 302.357 372.558 302.345 cv
372.557 302.36 372.556 302.369 372.556 302.384 cv
372.56 302.311 mo
372.56 302.303 372.561 302.293 372.562 302.284 cv
372.561 302.294 372.561 302.301 372.56 302.311 cv
372.565 302.226 mo
372.566 302.217 372.566 302.209 372.567 302.2 cv
372.566 302.208 372.566 302.217 372.565 302.226 cv
372.569 302.162 mo
372.569 302.156 372.57 302.149 372.57 302.143 cv
372.57 302.149 372.569 302.155 372.569 302.162 cv
372.577 302.01 mo
372.578 302.008 372.578 302.002 372.578 301.999 cv
372.578 302.004 372.578 302.006 372.577 302.01 cv
372.586 301.858 mo
372.586 301.855 li
372.586 301.858 li
372.589 301.808 mo
372.589 301.805 372.589 301.806 372.589 301.803 cv
372.589 301.805 372.589 301.806 372.589 301.808 cv
.8 .890196 .592157 rgb
f
296.129 416.445 mo
248.945 416.445 li
247.952 416.445 li
247.952 403.887 li
285.96 403.887 li
286.512 367.712 li
286.512 367.712 346.637 362.599 357.776 315.037 cv
364.692 285.505 355.393 255.285 339.378 239.829 cv
360.079 252.641 374.129 273.156 372.589 301.803 cv
372.589 301.806 372.589 301.805 372.589 301.808 cv
372.588 301.824 372.587 301.838 372.586 301.855 cv
372.586 301.858 li
372.583 301.905 372.581 301.952 372.578 301.999 cv
372.578 302.002 372.578 302.008 372.577 302.01 cv
372.575 302.056 372.572 302.098 372.57 302.143 cv
372.57 302.149 372.569 302.156 372.569 302.162 cv
372.568 302.174 372.567 302.188 372.567 302.2 cv
372.566 302.209 372.566 302.217 372.565 302.226 cv
372.564 302.244 372.563 302.265 372.562 302.284 cv
372.561 302.293 372.56 302.303 372.56 302.311 cv
372.559 302.322 372.559 302.335 372.558 302.345 cv
372.557 302.357 372.556 302.372 372.556 302.384 cv
372.555 302.396 372.554 302.414 372.553 302.426 cv
372.552 302.435 372.552 302.449 372.551 302.458 cv
372.55 302.47 372.55 302.478 372.549 302.49 cv
372.548 302.502 372.548 302.513 372.547 302.525 cv
372.546 302.54 372.545 302.549 372.544 302.564 cv
372.543 302.579 372.543 302.593 372.542 302.608 cv
372.541 302.616 372.541 302.624 372.54 302.632 cv
372.539 302.65 372.538 302.66 372.537 302.678 cv
372.537 302.684 372.536 302.688 372.536 302.695 cv
372.535 302.716 372.534 302.732 372.532 302.753 cv
372.532 302.761 372.531 302.77 372.531 302.778 cv
372.53 302.79 372.529 302.807 372.528 302.819 cv
372.527 302.826 372.527 302.835 372.526 302.842 cv
372.525 302.86 372.524 302.881 372.523 302.899 cv
372.522 302.906 372.521 302.916 372.521 302.922 cv
372.52 302.937 372.519 302.951 372.518 302.966 cv
372.518 302.972 372.517 302.98 372.517 302.986 cv
372.515 303.004 372.514 303.028 372.513 303.046 cv
372.512 303.054 372.512 303.057 372.511 303.066 cv
372.51 303.081 372.509 303.097 372.508 303.112 cv
372.508 303.118 372.507 303.125 372.507 303.132 cv
372.505 303.153 372.504 303.173 372.502 303.194 cv
372.502 303.198 372.502 303.199 372.502 303.203 cv
372.5 303.221 372.499 303.241 372.498 303.259 cv
372.497 303.264 372.497 303.272 372.496 303.276 cv
372.495 303.297 372.493 303.318 372.492 303.339 cv
372.492 303.34 li
372.49 303.364 372.488 303.386 372.487 303.41 cv
372.487 303.412 372.486 303.414 372.486 303.416 cv
372.483 303.464 372.479 303.507 372.476 303.555 cv
372.476 303.557 372.476 303.559 372.475 303.561 cv
372.474 303.585 372.472 303.602 372.471 303.626 cv
372.47 303.632 li
372.463 303.728 372.456 303.821 372.448 303.918 cv
372.448 303.92 372.448 303.919 372.448 303.921 cv
372.124 307.985 371.492 312.205 370.526 316.589 cv
370.526 316.591 370.526 316.589 370.525 316.592 cv
370.514 316.644 370.503 316.693 370.491 316.745 cv
370.491 316.749 li
370.479 316.801 370.469 316.848 370.457 316.9 cv
370.456 316.903 370.455 316.907 370.455 316.909 cv
370.444 316.958 370.432 317.009 370.421 317.058 cv
370.421 317.06 370.42 317.063 370.42 317.065 cv
370.414 317.091 370.41 317.109 370.404 317.136 cv
370.403 317.138 370.403 317.139 370.403 317.141 cv
370.397 317.167 370.392 317.189 370.386 317.215 cv
370.385 317.22 370.385 317.22 370.384 317.225 cv
370.379 317.244 370.374 317.269 370.369 317.289 cv
370.368 317.293 370.367 317.297 370.366 317.301 cv
370.36 317.327 370.356 317.347 370.35 317.373 cv
370.349 317.377 370.349 317.377 370.348 317.382 cv
370.343 317.402 370.338 317.425 370.334 317.445 cv
370.332 317.452 370.331 317.455 370.33 317.462 cv
370.324 317.485 370.319 317.509 370.313 317.532 cv
357.95 371.252 296.129 378.074 296.129 378.074 cv
296.129 416.445 li
.537255 .713725 .278431 rgb
f
294.436 305.791 mo
294.436 294.367 283.401 290.578 264.153 285.557 cv
263.872 285.483 263.578 285.409 263.27 285.333 cv
263.578 285.409 263.872 285.483 264.153 285.557 cv
283.401 290.578 294.436 294.367 294.436 305.791 cv
263.261 285.33 mo
263.253 285.329 263.246 285.327 263.238 285.325 cv
263.246 285.327 263.253 285.328 263.261 285.33 cv
263.235 285.324 mo
263.228 285.322 263.221 285.321 263.214 285.319 cv
263.222 285.321 263.227 285.322 263.235 285.324 cv
.207843 .290196 .121569 rgb
f
267.619 331.798 mo
263.792 331.797 259.651 331.548 255.205 331.013 cv
209.144 325.469 177.609 309.966 165.507 303.723 cv
165.507 288.541 li
206.892 310.628 240.424 317.703 262.908 317.702 cv
282.957 317.702 294.223 312.074 294.424 306.447 cv
294.432 306.226 294.436 306.007 294.436 305.791 cv
294.436 294.367 283.401 290.578 264.153 285.557 cv
263.872 285.483 263.578 285.409 263.27 285.333 cv
263.267 285.332 263.264 285.331 263.261 285.33 cv
263.253 285.328 263.246 285.327 263.238 285.325 cv
263.237 285.325 263.235 285.324 263.235 285.324 cv
263.227 285.322 263.222 285.321 263.214 285.319 cv
253.271 282.871 229.601 278.907 208.048 268.623 cv
237.326 275.334 272.643 279.904 290.7 285.874 cv
315.778 294.165 314.651 331.803 267.619 331.798 cv
.537255 .713725 .278431 rgb
f
294.424 124.823 mo
282.893 124.823 li
282.893 95.0655 li
248.805 95.0655 li
248.805 88.1577 li
294.424 88.1577 li
294.424 124.823 li
294.424 124.823 li
f
296.262 224.758 mo
257.779 217.349 243.152 212.437 246.196 198.385 cv
243.152 212.435 257.794 217.349 296.262 224.756 cv
296.262 224.758 li
.8 .890196 .592157 rgb
f
246.196 198.383 mo
246.197 198.377 246.199 198.37 246.2 198.364 cv
246.199 198.37 246.197 198.377 246.196 198.383 cv
246.201 198.361 mo
246.202 198.355 246.203 198.35 246.204 198.344 cv
246.203 198.349 246.202 198.356 246.201 198.361 cv
246.205 198.339 mo
246.207 198.334 246.208 198.328 246.209 198.323 cv
246.208 198.328 246.207 198.334 246.205 198.339 cv
246.21 198.319 mo
246.211 198.313 246.212 198.308 246.213 198.303 cv
246.212 198.308 246.211 198.314 246.21 198.319 cv
246.215 198.296 mo
246.216 198.291 246.217 198.287 246.218 198.282 cv
246.217 198.286 246.216 198.292 246.215 198.296 cv
246.22 198.275 mo
246.221 198.27 246.222 198.266 246.223 198.261 cv
246.222 198.265 246.221 198.27 246.22 198.275 cv
246.225 198.253 mo
246.226 198.248 246.227 198.244 246.228 198.24 cv
246.226 198.245 246.226 198.248 246.225 198.253 cv
246.229 198.233 mo
246.23 198.228 246.231 198.223 246.232 198.219 cv
246.231 198.224 246.23 198.228 246.229 198.233 cv
246.234 198.21 mo
246.235 198.205 246.236 198.202 246.237 198.197 cv
246.236 198.202 246.235 198.205 246.234 198.21 cv
246.239 198.187 mo
246.24 198.184 246.241 198.18 246.242 198.177 cv
246.241 198.18 246.24 198.184 246.239 198.187 cv
362.202 144.854 mo
362.188 144.845 362.16 144.827 362.119 144.8 cv
362.153 144.822 li
362.202 144.854 li
f
283.442 225.146 mo
218.605 225.146 231.67 191.963 235.989 185.253 cv
241.851 176.146 256.618 170.428 275.674 170.428 cv
296.867 170.428 323.365 177.505 348.791 194.863 cv
348.791 137.997 li
349.006 138.09 li
349.481 138.296 349.95 138.5 350.4 138.701 cv
350.712 138.84 351.007 138.976 351.307 139.112 cv
351.541 139.219 351.779 139.326 352.005 139.431 cv
352.299 139.566 352.58 139.699 352.862 139.832 cv
353.073 139.932 353.286 140.032 353.491 140.129 cv
353.764 140.26 354.028 140.388 354.289 140.516 cv
354.483 140.611 354.677 140.705 354.865 140.798 cv
355.116 140.923 355.363 141.045 355.602 141.166 cv
355.777 141.254 355.946 141.34 356.114 141.426 cv
356.346 141.544 356.577 141.663 356.795 141.776 cv
356.951 141.857 357.097 141.934 357.245 142.012 cv
357.458 142.124 357.674 142.238 357.874 142.345 cv
357.989 142.407 358.094 142.464 358.206 142.525 cv
358.656 142.769 359.073 142.999 359.448 143.21 cv
359.605 143.297 li
359.769 143.39 359.913 143.474 360.062 143.559 cv
360.156 143.613 360.256 143.67 360.345 143.722 cv
360.474 143.797 360.591 143.866 360.707 143.935 cv
360.96 144.085 li
361.063 144.146 361.158 144.203 361.248 144.258 cv
361.459 144.387 li
361.67 144.517 li
361.842 144.625 li
361.967 144.703 li
362.103 144.79 li
362.119 144.8 li
362.16 144.827 362.188 144.845 362.202 144.854 cv
362.213 144.862 li
362.213 216.158 li
362.213 217.341 li
329.212 195.676 296.098 186.903 273.713 186.903 cv
264.898 186.903 257.746 188.263 252.921 190.733 cv
249.262 192.606 246.941 195.116 246.247 198.155 cv
246.247 198.155 li
246.245 198.162 246.243 198.17 246.242 198.177 cv
246.241 198.18 246.24 198.184 246.239 198.187 cv
246.239 198.191 246.238 198.194 246.237 198.197 cv
246.236 198.202 246.235 198.205 246.234 198.21 cv
246.234 198.212 246.233 198.216 246.232 198.219 cv
246.231 198.223 246.23 198.228 246.229 198.233 cv
246.229 198.235 246.228 198.238 246.228 198.24 cv
246.227 198.244 246.226 198.248 246.225 198.253 cv
246.224 198.256 246.223 198.258 246.223 198.261 cv
246.222 198.266 246.221 198.27 246.22 198.275 cv
246.219 198.277 246.219 198.28 246.218 198.282 cv
246.217 198.287 246.216 198.291 246.215 198.296 cv
246.214 198.298 246.214 198.3 246.213 198.303 cv
246.212 198.308 246.211 198.313 246.21 198.319 cv
246.21 198.321 246.209 198.321 246.209 198.323 cv
246.208 198.328 246.207 198.334 246.205 198.339 cv
246.205 198.341 246.205 198.342 246.204 198.344 cv
246.203 198.35 246.202 198.355 246.201 198.361 cv
246.2 198.363 246.2 198.363 246.2 198.364 cv
246.199 198.37 246.197 198.377 246.196 198.383 cv
246.196 198.385 li
243.152 212.437 257.779 217.349 296.262 224.758 cv
296.263 224.758 li
291.679 225.022 287.419 225.146 283.442 225.146 cv
.537255 .713725 .278431 rgb
f
363.209 217.254 mo
363.209 194.503 363.209 171.752 363.209 149.001 cv
363.209 147.199 363.665 145.217 362.507 143.871 cv
360.468 141.499 355.569 139.988 352.845 138.716 cv
345.202 135.147 337.212 132.319 329.094 130.047 cv
323.48 128.476 317.79 127.186 312.053 126.158 cv
309.254 125.657 306.445 125.218 303.628 124.841 cv
302.435 124.681 295.287 124.219 295.42 124.421 cv
294.604 123.183 295.42 118.67 295.42 117.233 cv
295.42 113.124 295.42 109.014 295.42 104.905 cv
295.42 99.2935 295.42 93.6816 295.42 88.0703 cv
295.42 87.4971 294.838 87.1611 294.337 87.1611 cv
279.13 87.1611 263.924 87.1611 248.717 87.1611 cv
248.144 87.1611 247.809 87.7437 247.809 88.2446 cv
247.809 100.609 247.809 112.973 247.809 125.337 cv
248.111 124.976 248.415 124.615 248.717 124.253 cv
230.172 126.529 211.137 134.781 196.477 146.176 cv
171.278 165.764 155.643 203.418 169.31 234.133 cv
181.044 260.504 210.713 272.918 236.814 280.094 cv
247.408 283.006 258.235 284.923 268.826 287.834 cv
276.877 290.047 290.296 292.727 292.973 302.148 cv
294.273 306.725 292.83 309.469 288.951 311.737 cv
276.637 318.939 258.615 317.263 245.232 315.413 cv
217.327 311.557 190.682 300.753 165.935 287.637 cv
165.211 287.253 164.511 287.918 164.511 288.628 cv
164.511 307.279 164.511 325.93 164.511 344.58 cv
164.511 348.056 163.077 353.467 166.027 355.794 cv
172.902 361.219 181.926 364.894 189.985 368.03 cv
208.512 375.241 228.211 378.764 248.039 379.496 cv
247.678 379.193 247.317 378.891 246.956 378.587 cv
246.956 391.235 246.956 403.884 246.956 416.532 cv
246.956 417.105 247.538 417.441 248.039 417.441 cv
264.098 417.441 280.157 417.441 296.216 417.441 cv
296.79 417.441 297.125 416.859 297.125 416.358 cv
297.125 403.567 297.125 390.777 297.125 377.986 cv
296.822 378.348 296.52 378.709 296.216 379.07 cv
311.74 377.321 327.616 370.946 340.435 362.195 cv
365.799 344.881 378.616 313.036 372.195 282.814 cv
365.815 252.786 339.124 234.219 310.885 226.816 cv
293.816 222.341 275.715 221.164 259.223 214.533 cv
251.768 211.536 241.626 203.538 249.089 194.824 cv
252.845 190.438 259.676 189.075 265.09 188.399 cv
273.74 187.32 282.589 188.026 291.159 189.429 cv
316.35 193.553 340.272 204.264 361.57 218.107 cv
362.637 218.8 363.935 217.276 362.856 216.575 cv
344.586 204.701 324.653 195.254 303.465 189.945 cv
289.436 186.43 273.558 183.943 259.25 187.424 cv
251.582 189.29 244.318 193.66 244.825 202.482 cv
245.354 211.674 255.598 215.585 263.024 218.012 cv
280.103 223.592 298.215 224.881 315.342 230.154 cv
331.053 234.991 346.244 243.335 356.929 256.054 cv
379.294 282.674 375.337 325.347 351.815 350 cv
337.719 364.774 316.381 374.786 296.042 377.078 cv
295.47 377.143 295.133 377.607 295.133 378.161 cv
295.133 390.951 295.133 403.742 295.133 416.532 cv
295.436 416.171 295.739 415.811 296.042 415.449 cv
279.983 415.449 263.924 415.449 247.865 415.449 cv
248.226 415.752 248.587 416.055 248.948 416.358 cv
248.948 403.71 248.948 391.062 248.948 378.413 cv
248.948 377.826 248.365 377.522 247.865 377.504 cv
220.546 376.494 191.205 370.206 168.11 354.801 cv
167.58 354.447 166.815 354.089 166.389 353.609 cv
165.959 353.127 166.61 354.773 166.503 353.417 cv
166.279 350.572 166.503 347.617 166.503 344.767 cv
166.503 333.827 166.503 322.888 166.503 311.948 cv
166.503 304.116 166.503 296.285 166.503 288.454 cv
166.028 288.784 165.554 289.114 165.079 289.445 cv
187.51 301.334 211.377 311.191 236.402 315.981 cv
250.836 318.743 266.563 320.311 281.023 316.804 cv
286.766 315.411 295.512 312.572 295.428 305.356 cv
295.249 289.795 271.992 286.263 260.576 283.676 cv
234.946 277.869 207.761 271.807 187.229 254.29 cv
174.888 243.76 167.197 229.394 166.553 213.056 cv
165.789 193.707 172.919 173.892 185.527 159.266 cv
200.935 141.392 225.428 129.125 248.892 126.246 cv
249.464 126.176 249.801 125.721 249.801 125.163 cv
249.801 112.798 249.801 100.435 249.801 88.0703 cv
249.498 88.4316 249.195 88.7925 248.892 89.1538 cv
264.098 89.1538 279.305 89.1538 294.511 89.1538 cv
294.15 88.8506 293.789 88.5479 293.428 88.2446 cv
293.428 100.467 293.428 112.688 293.428 124.911 cv
293.428 125.313 293.837 125.77 294.243 125.807 cv
311.474 127.407 328.574 130.972 344.686 137.379 cv
348.987 139.09 353.222 140.99 357.305 143.173 cv
358.373 143.744 359.467 144.589 360.591 145.023 cv
361.483 145.367 361.627 146.148 361.217 145.021 cv
361.764 146.524 361.217 149.218 361.217 150.788 cv
361.217 155.007 361.217 159.226 361.217 163.445 cv
361.217 174.374 361.217 185.303 361.217 196.231 cv
361.217 203.297 361.217 210.362 361.217 217.428 cv
361.217 218.715 363.209 218.533 363.209 217.254 cv
cp
.254902 .32549 .176471 rgb
f
255.222 92.9849 mo
261.042 93.0615 266.863 93.1255 272.685 93.166 cv
275.311 93.1841 277.938 93.1973 280.565 93.2139 cv
281.063 93.2173 287.938 93.0352 287.419 92.4297 cv
288.349 93.5151 287.4 99.5127 287.397 100.892 cv
287.377 108.77 287.475 116.659 287.475 124.53 cv
287.475 125.545 289.048 125.405 289.048 124.394 cv
289.048 113.875 289.134 103.076 289.104 92.4551 cv
289.103 92.0146 288.766 91.5776 288.294 91.5801 cv
277.258 91.6318 266.223 91.708 255.188 91.8599 cv
254.46 91.8701 254.5 92.9751 255.222 92.9849 cv
cp
f
284.289 96.2622 mo
284.166 104.305 284.071 112.365 284.296 120.406 cv
284.32 121.26 285.59 121.228 285.616 120.381 cv
285.861 112.334 285.748 104.26 285.624 96.2109 cv
285.61 95.3462 284.301 95.4067 284.289 96.2622 cv
cp
f
239.67 198.61 mo
240.112 189.164 250.754 183.564 258.631 181.252 cv
272.72 177.118 288.776 178.73 302.864 182.109 cv
322.423 186.798 341.943 196.099 357.242 209.292 cv
357.763 209.742 358.706 209.275 358.706 208.603 cv
358.709 188.203 358.716 167.803 358.716 147.404 cv
358.716 146.198 356.836 146.076 356.836 147.291 cv
356.836 167.678 356.843 188.065 356.846 208.452 cv
357.334 208.222 357.822 207.992 358.311 207.762 cv
340.472 192.384 316.814 181.942 293.624 178.463 cv
280.591 176.508 266.049 176.119 253.689 181.348 cv
246.636 184.332 238.824 190.102 238.643 198.52 cv
238.628 199.179 239.639 199.277 239.67 198.61 cv
cp
f
249.825 219.962 mo
239.176 215.392 230.662 206.448 232.551 194.072 cv
233.678 186.695 238.956 181.336 245.323 177.936 cv
255.62 172.437 268.669 170.506 280.259 171.279 cv
281.222 171.343 281.247 169.931 280.32 169.803 cv
267.423 168.033 250.719 171.362 240.225 179.143 cv
234.187 183.62 230.567 190.174 230.704 197.768 cv
230.918 209.603 239.097 216.762 249.408 220.964 cv
249.977 221.196 250.396 220.208 249.825 219.962 cv
cp
f
353.429 199.429 mo
353.643 183.777 353.76 168.102 353.595 152.449 cv
353.585 151.492 352.113 151.451 352.103 152.417 cv
351.944 168.112 352.078 183.826 352.269 199.521 cv
352.278 200.277 353.419 200.168 353.429 199.429 cv
cp
f
352.372 256.767 mo
370.218 281.985 370.297 317.659 350.538 341.983 cv
336.32 359.486 313.38 369.479 291.119 370.753 cv
290.608 370.782 290.145 371.146 290.145 371.695 cv
290.144 378.258 290.143 384.819 290.143 391.381 cv
290.142 398.077 289.388 405.27 290.141 411.932 cv
289.912 409.904 291.85 411.79 289.958 411.105 cv
288.8 410.686 286.681 411.104 285.456 411.104 cv
281.247 411.104 277.038 411.104 272.83 411.104 cv
266.081 411.104 259.332 411.114 252.583 411.114 cv
251.358 411.114 251.295 413.02 252.524 413.02 cv
265.381 413.02 278.238 413.03 291.095 413.029 cv
291.612 413.029 292.065 412.6 292.065 412.075 cv
292.064 402.92 292.063 393.765 292.063 384.609 cv
292.063 382.115 292.063 379.621 292.062 377.127 cv
292.062 375.927 291.558 373.328 292.062 372.225 cv
292.394 371.496 291.282 372.294 292.846 372.559 cv
293.951 372.745 295.362 372.334 296.476 372.201 cv
299.452 371.846 302.407 371.338 305.332 370.685 cv
333.232 364.454 358.002 345.322 365.049 316.757 cv
370.334 295.334 366.341 273.889 353.327 256.144 cv
352.895 255.555 351.945 256.164 352.372 256.767 cv
cp
f
257.977 407.766 mo
267.417 407.867 276.87 408.088 286.31 407.906 cv
287.09 407.891 287.131 406.544 286.339 406.527 cv
276.893 406.322 267.424 406.559 257.977 406.664 cv
257.267 406.672 257.268 407.758 257.977 407.766 cv
cp
f
171.124 297.27 mo
195.453 311.131 222.217 319.831 250.112 322.588 cv
262.088 323.772 276.41 325.499 287.955 321.319 cv
296.452 318.243 303.913 309.461 300.408 300.105 cv
300.118 299.33 298.827 299.767 299.035 300.565 cv
302.81 315.132 286.984 321.104 275.535 321.673 cv
263.961 322.247 252.217 321.336 240.77 319.631 cv
216.67 316.042 193.156 308.029 171.827 296.255 cv
171.142 295.877 170.429 296.874 171.124 297.27 cv
cp
f
177.021 309.978 mo
208.19 326.58 245.315 332.992 280.416 331.552 cv
281.329 331.514 281.303 329.923 280.375 329.933 cv
245.253 330.315 209.051 325.148 177.496 308.897 cv
176.819 308.549 176.354 309.623 177.021 309.978 cv
cp
f
308.017 114.153 mo
310.197 103.336 312.639 92.4922 314.288 81.5801 cv
314.465 80.4038 312.748 80.2065 312.485 81.3291 cv
309.989 91.9922 308.306 102.909 306.371 113.687 cv
306.179 114.755 307.797 115.241 308.017 114.153 cv
cp
f
318.078 113.227 mo
325.978 98.2817 334.534 83.7295 342.946 69.0728 cv
343.465 68.1685 342.179 67.2007 341.608 68.1099 cv
332.603 82.4448 324.512 97.355 316.63 112.33 cv
316.122 113.295 317.565 114.197 318.078 113.227 cv
cp
f
324.08 117.838 mo
334.452 111.934 344.825 106.032 355.151 100.047 cv
356.245 99.4126 355.194 97.7715 354.098 98.3926 cv
343.731 104.267 333.409 110.221 323.087 116.174 cv
322.007 116.797 322.994 118.457 324.08 117.838 cv
cp
f
182.164 387.592 mo
170.983 391.461 159.392 395.099 148.62 400.003 cv
147.711 400.417 148.148 401.783 149.133 401.487 cv
160.478 398.074 171.628 393.312 182.612 388.884 cv
183.425 388.556 183 387.303 182.164 387.592 cv
cp
f
187.206 392.974 mo
179.545 399.124 172.321 405.807 165.009 412.364 cv
158.21 418.461 151.193 424.39 144.778 430.893 cv
144.155 431.525 145.117 432.614 145.82 432.061 cv
153.012 426.392 159.668 420.009 166.478 413.892 cv
173.756 407.354 181.15 400.92 188.063 393.993 cv
188.588 393.467 187.803 392.494 187.206 392.974 cv
cp
f
192.872 397.261 mo
187.663 405.957 182.688 415.129 179.496 424.78 cv
179.146 425.836 180.645 426.25 181.093 425.301 cv
185.417 416.14 189.462 406.987 194.569 398.211 cv
195.202 397.125 193.514 396.188 192.872 397.261 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 23.0.3%%For: (Macaro) ()%%Title: (HD_Dollar_Sign_Illustration_4.eps)%%CreationDate: 15/10/23 9:51 a. m.%%Canvassize: 16383%AI9_DataStream%Gb"-6l]N=2E@(A_oa]k$RZZ=g;T:kO4'FF>'h[I<.FHerN7KgqD'6D\@Y@An)D*T9l.=7$pP?m?oS"L!_\jD@#,"/`bfIlL#S4Zi%5OkKjh7WXIm?b$5rq>L1s7=^_BB_B.T,%/Lb2;7E7mHj^=20(VqKn75Hh[*#2\0gkr:9fuQOdGQIJ`I*]D#\4oQ'ha(N1tAGk##6%c&9dFrUB[V]AHt5?GCa\Y?*r7p9X>/rN"N\p[?tRH1Bi+iq3=\LgSqboBQ"8J,dc_?U)4'l)""REVb8]rmTKIQ8FMl+`:Zbm#=P"%J,&M!qBd"H?[h[W2g[JOG[8KI]):GT4W8djQQQ7mDaLRm^\sXHUs%$?KHpIacMcY]G9aJ`)h,U&!N4m-Se=uA.='j9Oo:MHni3BA%ORSJ3+7rMmUD>k`itAoTiV`WK?[h\;gK.a3GlR3Hrl"6orO]8i]QjI[?[q,;j7iTKnE-e'00VMf'uY,tQcj%<hu:TTPp^@N.eUtt%or+3*5D7\^pZm5jr7e9-huE?>G7Q@@I!Diujk9MAT>15PjZ/*djmr=NJ+K^Z?9c+&Vmiin809?M6f6'?hL54h>)o6<hnOWVf>16b%s69Xbpu;6j+$RcEHM@9*&$Oj'rTU0U($*(.r5Ba!0R0<ui#f[ZGl*QjrY'YS=cVGRasC;:q0sB)7n8`73a8eSSE;-8qH$lj4(uU&%Db]*.04jeR_u!NMIJ*<3T+uX)o%%nfrU'J`?`mhfihbs*]Sl*ir>kl=].8+)iPWQ;HPeN.Dh##$cf=j<T?Cf<^]!`sh&F"WYN=Mu%%"u)FA7*+KXo<5;bhpM+hgD9p_!bY.rB!%9eQ]D+p%SAYs5KBK^QDn%mJD+bI.ahT^Nk%rj(D`5qt7kgkHE`+>kE4VrphG'+91^#%2_s`+]R9BZ@Vfs9?g:M``Kq)ges*grn`m0IHtVK3s6IRXQbWFsk4Q66`s)Ik_oiSZhTJano(!=+rbq?rg:2S$qW0fGq?f%YX[qSO%hqt*>SG3"Fj@k$qs1eU#]8,97a4KR!j3j9L\,Z0iotSW7I/"UeH+4ie-[^E]^O6">m>L`1$!OsUPZRe-q\L(Emm3Q.LKFNL@W*56%4ad%f+4.S-pTGWWrfa&F]a&Agq>hCYn_n\dhB1U'q=V=Wqes37)1I#e5F:O)\F4?8hY6>;^O?.AX5CU:H+A5#c.B_Br8YD5Y>:5D%jhpE-b83/)^VloGk*6Df^Y7NG)o286k\fIl^\rqsH<]9UA\$<[GOgD^(DRshBDt>,ELubb=*sK:_o)LFfD>CUDgqZQorG:RaSDHd%*fBahmPG,t.G&k<o(Bo`J,&lX_[i-0T>0IAq4>l]q+@O-qlc@So?5hOJ':(Rs*[0PI[B5)^(Pkj/ZRelO88_J01=4fr7/!cF'dm4%roVa80fL_WJ+Mq-'egDVbKG*J^A@!NlORVc2imrc2HmhV7<2`>5Pse/ejm!YhJU+-g\3A8HmPfhVjAM*e(_>bhT4^I>8)iNEW"n_%j'l0cbN7m0X+.\VO&sAAKHhT3(ru%64G8e_#q_*T';!5U`<_Dc5)VAi0&ELfE[n&bO`'9%Q\0Z`0"L*fT::4tT3mjN5&sW=T.Za5%DWUIp55-qU-eH5M]f,\5;fCc=f8^VMP`N3.C29sC1YT?Rce;*?hX:7aT?sDr4nU?XbLo!Ms6]bf^QHiZ^Z3)TqgH3qZV(4W0]GXo%Dj#"(/,?B-.R-sJ^<9%H4<$6M\X!25a.<-M2kJ4UStG2lNb:XAd6:,cffnN_=a='0,9;1ZSWKJ>NG&$-,G382Ds-;DTBH.-j)]9X%T7G7Q#U;QjT>UZSp*o],o;=W6D1;?ZPcL9.5P=0l[sn1uj$1"K50n-7DXO[sc_JhXn,1sjpZK\K\.,(mF*/F>T&7O`pUU-bNW#\3%GkHQr8k>fnT#mqD'?+pD3*!jPNmd+\TRo_>;FN^3o:O22C*KH!WhLi.WTi*$bSKE#kNTP@MaK<*r`!WlBCbdt2+PC,pS'_0)FZba%;')GV8e^mfN1ZT97]sZ7%/e$n(SNadU.q:VA5^TU1p+X0cg-"mVg_J`P?R,+g^6f-Y.506"(fA!bh7'lmeD&k2:!Fl8%"CmTL'Zp%>,Y1:e=f\7Z`?hq?j[2i8cQI;[7%u%[H*sq:ZNnnPIF?(k=S]Rh*-6DIeohcZSA=<o?Wm'\+=Zb-2PkNcaTNHlcmb^__g<LLaINI%M9q5`<069=r6A+7ma'GX*Uq*ucsW8Vq\+@[5%S5RW=A8FTu]'8#!:eRVkoJd%X*-F\)AspRl\W"0f0ci:^=3B%T*FmG!i+fn4Zlg%gT,EDb2<hR&?--HNJL>`!+g*slJT4P")1Q4M+j2]bbBVSJ3(3(cUfGL$=Tn:0$dcEDbVOf;LhAAL'L[ETiu,2XmK-p5H5]@mA%fi%eAG5s0MhVQ'EsF1;&*0^(/&!cNR=*LQqHCNWXf'a:%_qe/(Z'0c_adhqIT]Fq+9mn[4.Z-W1`s3r4SUWPC=plqT(>DGCCU6ZU^Xg%mlTHgrEO45h^A5@odLjW95W$U_@QSYlkAcMBO/DNOBF)T&6!4HdF`\51\_G,LZk*M"Of/0b^rH(1[(=`:7VKh'1GDj9OaE0Y'HUG%:$%S_D<\3P`"]`umA%7jDRp(A7s#:7:86<:'*K6:p1eYX,0UkP0Z,`*BGJoB;=k0:M<Y[HEi=t%ZRDItTH9aAW"O%P"sKkU:3"M:%5\DCj;o&][6iZ@:Xt-o_a1BdS$Kp_ZSK8)$D@3nIIlG''HiL&-_,$LAE?*.![*rZX5.=<-LF4.Ym=ETKrce3d[nW=+qf=WEXInWr%-3&qYrolUJT<b`:e-;lbmdKW5`.]-caNK"C&'s^:hoV?0Z:YlerkmRjh48eJcX`8AR:l%BgtprFM,X4DR]*N`-^iP@%$ism5iRc0%ah34l)fH3(U):6r15OmsA!i2)$-ul=_(Epgc=JBPd209!<_$9JcX^p9"pr4U^QM_9q]W<8\]i#s)9:':q)=_@Kl039r&qtZGY[u6%1]*TaE!.]\#GI&$ZTj<W35k/3pS&:.L"sfbJQ4J8au;@7plh[I,2F/7G]7]AZ@S=PV;lX7q2//fAjX*B^SFaRQ)oI'GDW&ON4$HJ%3mp/Unj(0M_WR4,S[,7#<-M0\>ff4CY>jo,%]+!6odAH@bg57?GeZFDFRo?N[s];nh4$p,O#[5MJR$1ajO:m8e%Y^#21M^"k&\NA%b,>,AIEKS/;B,Pm.cGQNKOcRkQ7AS*,t(T:pIceh;$gB[;\55`S1<KcW.[X*OCTMf_[;ZJ6^?"8kY!\.TG1?OgmD!l<'p@TV*L;b%;@:aa>q&#blq65k8mtOFZq!a)e:K-'Dc$mDcjSa7(/-GFs*hq+V4-@I'Z5-oL2Tp!=.=Y`riPJEWIfAp,"tR5I9]]ua61&L7_een%]&SQpY!/D"flbO=j:2)AQ12Of_Z*L?s!,kJ:YqbCKREUC(H:fd%f6BXrb19*>TMFu+IE7mSBQ_Rn,jeO]cNDmCtQ:+&3'Q[5LiE?%PQU/I2#$grO1tBgc/!bqV5UYF$0b@)[@B)O+s6W?++IRSr1\p]`'>q(?e8-Fl+E'!EB_-/X!Q=i"JB\?O.?7FLj=GbH5"?pUa;<O%Dsh3MgQU#L3'SEJStD%a:FFIa1WEU0AUl[4U-QTej7sj6KIe&6-Ina,>1#aQi\+=AkZTCIHl(k-&5]+4\\Fk(5.Aie[*S-qrpB62%l^"V8n55m=YlY+#<Rk<eZ2Eio$FXn>b*KCtW5P(dQ,W"`ZfeVjh*/H_dZcDK_tVpK`_s_srNIYR@X9>2!rp9.H1AZ8F,7Cl/<Od>%Nos*l=KVlZjZ3),r7aHIQ6W&&q'iUY@C_6h5sC(*l<)[,T&7[8_G0&1KWX!VU\[`l/IVkJ=+%-rmH(K8[nkJtl_EF[BL,&t.=*f_%+f7=ZIa9Dfr^8(h26MbV@^5-+%F%*8C52<*U%==U\bpMuY<DFANurKBa4EL^<1:M+p2;"#^*EOB4ZO@$p#k=1jbCH0pZZ0NHIAFd%m;@D]?e?%@d/WWnZRNs`9Uq?$'=Q^+);'2O\+8,=3=mBT`UYI6WBP75)]AYLS3aWS;42J6d"a50Do`@"ZQNb>fpQB:,"#=JgR9nD%D:j3d;CBZedrENSqC%]5h;(5,\'UtkE@e66fZ$Iq^R)u3;^W`BD=^&*##E5iP6]b88;fUe,`b"-_Jmg;+K>Z=5[I->4Xm!)]C!sE%]KF%M5&P;5Ce].!GGdp_b^T+DFhdY1le5?M1`Yh@@86,4FWeb@QZ7WWK35tb6*+-BUp8Pm@8ISIrAsNG+^W#U<n1!rTWC>tof-\3%9"i@8,F@V=e.Dt35NJ1%_Z@\;IW\&`YiT8.-`62FHUiFhF.]Bop?bf6kU1gsJ)ZofqT"n<O\3OE=)955'R+LX!<r5+3[o$J0K5[k%j)4sAF\@KNV!E;-SRr2\*LRL7-T`qS>M$e%dkXJ91o=c#R=n/U^'s.0mRQ3ok)O!\fcG7PDWuHVqHT<BQM=U4p;<fVKWQES0'nO$%ZSR=uQ,_a,0e5V]?Q'SsJFCGT*D@b<$^KbOS)PC]WXJ:>,CZMpF4IMLOVV-pK*E!cc#UFA3m\d[^RoE9%:>QXgoo5"VE7M-)D8Ft%j)]R.>-p3VRHIW7N'$5Ab--3=X5S$ZX`IV"EJUQ!^s#,W`8J0g]g:s80iXh1"?[o`#oFpQLnI=hP%`*e+pj$0Z,i13)nuOr&V5JL%+M]/g^Gu8+;Uc\^Afu"K#PfbO=\hW14!l*e"JX$EfH:`,)Zh3$+A.ub5PdFes3e)-#J9#k%(?cW%HS^bB%d$AWu"bi!+??>?f#*$%EV\BdQGF]/fg(a\(-@NZdLd$[i"'t9)H(B=M&?N9_-rB%;"^$LmS[0-T^KC6h)14nGsdIfnCpfW\SgQ*.CCPd?M'(D\_6lN8/3'.%`0?sp7.&UV#"q%qdDDl<V`q*^M_cUWN9HaX0j#XY2?;Gn,Ilm-$1Q1"pQ-HQZ#<KcUKZLG/TTTI9PYlDIErUNk.37r-"8440\(P<%b:YQlCO3[25rPV"(gjn_fNS<RWkCJC>>qp8Q)4@.7`]Hb'cRR6<JJ1""'c)+=Ef^!4_&.3Tq:hSH;aLO>VT^^8+oAunu)6BPOrBA%*bDDU=A#F2Y@1Is'IjNT;S-1cjbCIhO8UbLQI2nT0<*,+qNQuf:b+n&0C5PuRf;3`+2V_PFKM0/3J:Eto##:K`p4d3eEZ0DD3b(t%pVru@X`,j*ZMj%XX[hdC1Ftu];qtXGa&2>YX:AE(RPM!CR:dbadgmNXFT;!1^<=UrA'-B*?`GE3=tHrs`?s7H@[C?>\/nWiK@[5I%Xm$I>^-6)/?=KkbU'W>foC@k?rq#U?^MimWY_(2NrWBq7TCV#lPJ=jKDs-\LbJ3u,j79%<ngjO^YMi2^hMC[CKe>UIV;@i:Ds)UD%FuoN&r;Gqomm#U@HAVLL([qBCq'fg)IspqVh<W7FTDd"%q[5!Oq;UPUbC>f?a1C([I`4q"ru`]en+,(Jorn":s+,)-..N2:&<[l9%*/$SGWhT`-$q&JARH?lBW2oO90A)Q=P=m'(+%^oaA<%``k`_-UMbUQH):qkh\r2rEf2\tXRbY4t%<:1+`Q/_]X^'''e1WIp<\Mlc%E<AjEh6e5fY&g]CP)%6pGs_(dcuBYnCKV:ESMmX3QJs440,kjK]NFOPi\8O@kthmM]j6OW%XM1!f<T:#@YJQ[CK7p"fM\%M[7:cR%0mbQFmNK^Di)q64ZKPZV-&[O,#;qo%Eq`^S9\b%.,^GgK4@Kf[[i;C=]S@o1>d$f?7HM)$'2=f5Y2siR$TfOI;-\9B\/#l1b[/=n%`8b]'4^Y.B>+s`k-'[^D_ob`TfCECg"]rJmdA&6^p-kG9=VRR^K(9OVbT;i'Vo]D,R=,jR6OB;Phq*XN6'j,5;3iF=83a+&L&b4#%MLqbJ1Tu$HU"PE9ESUkG/MB4&Ia8Io`X<m^`Y+"imM.$C(Gm=*9c)FT)UD=2NkV]%`;NI)^/DJ,T4ONmH*BU&92=r21fL`n\0=)]%;;S88dOLU#X6"%Ni^0`5-C5;@N"7WI3F0oC?Ut;T,uZh"R4;\tZoOp+b4)7,&rq'*LYU1:pYN6hkAe>:kP1;CR:=Z)-G>Sq,S*2\%T<(A"K+So`Mf^tkaAY\dg,Pa0e5=98j9:HMhmiM*`fT]VH7bL98&;ui4NDEpDtpX8FjERuOdmP4G+jjDYu3*malkK7A43-_OnX=K%mlG9\7ml.^4@\I,hO<A(^Pi\<Lh+;]MBf2')-rtHijt!Tk3,37ekpl$Z^jUqjS,*0^D=L,cS!<rQ]^q&,g8<8Opo8QK,F`1Cmt]@%c;bas0$lO',:hi^*L6;tWuW#/eat[7`p4J8.qUk/QHugCbli?]pLt]1]q4UR\i7Cg^\T>RkF[4mRddYeAI8.siPgS-0>XKX9>SZ0%qo&qGJ8a=nonP3WrJ#*EQ""Wha12'B-^T>^c_k>B`cDZAk(tLMY!rG^*sUqtfEW\FOAXn+J!%]aB37s\&mmnEQQp&)1ea+7K6@Q0%GK=P11.&n`:)?c7@b?Ok&WOpXOF\(/S'NL=-Ab)[VOf,U:tmGQp_4,uJu?.5*5g'[=IG@D68aV`4'A.6$.$gl?)Q^njQ^_Tf8`R^%R([p>kX&,u*9d!S41*eQ4F&JA#%W,'P5pA+]^@Ohm!6-<X:8jA+PJK,fARVt?tk`<b._WJOXdL!&3RTNg1[oL"a6a<Laa#?1j!!E%RlPSFc:]0n`ieaRK=o+.R7F`/)Y5l@ZIkYWl=_+V>N0Ft$&[@q7U8G^R+@/$Y97.&.Y`R-b$leq;cK[M,KsA,85.dZ*3cN)U4a$P%V(BiWMU@+Mq2i!Qee<.+9HR8?LM10KBj;UMWIj@"/;F)DZB064ia`gc+=m*r[4eD0Sd(IPj?X4%%&3#?>f_NhA46&1bF`GK)2MBQ%`e_&)M6N8B98E:FQO%@2Sk[7W=s/pE]0&X3)+VhmRL$6E?Pcl-k\]6m<W!%PS+6i)g7nm.f+Q;a6Q27@Q:'ASEt[J=Z0KIpQHWck%&JIU@Tk;*T^\"GYA3HF&aDqbLCUN+&]98cI6@#tZkEjjq_c+g&?-<CtReCA7j;ji:4M%ZD0`*-l/AP(E!c8?Kk&l,J@?J#D03,)C%\HFd;Dbq(@5?b%#$</Yn2(-sPndI&8Qe@<*lsb:0$emPU]U.0/R)VSOqRW+%oJGm^4NRC^RsB*go@\PdfdZ++TT7MeYZ:M[i!&$j%="ul!4TnX;Z?WZVTcpFTLh^WZ!G/\LbQJpk1:Z8;Lmfn4emd?>7nb$Cn+<i:N/4(EIWYZ5!UP)0*8*V59rOmeEp[`GnOYWEDF1U.%.\;!;nOVK,m5-PHHG^@<Wn*G\J8`et=Q3:5Cn2ngee\O[F\/<dg[&QJW>N;S4E6>uGU61]#UEa'qFG!SEXC'Voi+WL^)\SLCaE^H%E-+r8M9L_eMOj!0C5aEJ%iu>[O1AHT*Q^AXl^Ib_GY-IjR;.SR='!6HF%5$RFimfpA/lYr2TT*V$HB@fg3Q*UOEVCaS2jlL=QP3:%H!J7/(Ajc`]OS$SP&EQ)n4f"D'8$eK3ll]2kMJ%b+'FMk9IXZ2IKZ-!ng.B%T6R8*m!\,r4@:"0QZ;6N*tQ`/-GqRrkR=sd1F$L'%@0Xkk<2cmqZ_'iNLgj+7PF'3X7dbL9laSA;?,P7C'\F/n`$ps!OMGP;RM'DBb'_kpBbERMG&89ZHU$82I$aI(#G4ZK:d.KNCE,"8%(Q;giMN]Op2BLp&07K.L6k$@BrCos7VGo48XY#qH!P_gi1l7flY%',-5>KeY$sgEtRZc,WVf_WL[Pds^pcdjSOQjSo,>Mu?\E(n+%-k@-NAUm(-Vju-LYl]OP!"%]3"g3OjY?sfMY-2uV1Bhs0QT!VuQt2#;EEVZs]:jL-'BmC.50]k8fA=g5Hi'1Ep'Dp7E!?h@Kso>?%'UtKd1NEW)^Ea\C*]aX2bUmh4:8&o"TOK[9)*1[95_b>TNaRsk!6_:e&_\-@Nk'k(TI"k@Nu\DD-:C;hYp8O*BKH_G"`a0c<1^oN%#blERNu`qA@Bam8*C6m+.(AZM,:Yjhm6,V\NJU2gKoWB8*4:eE3q<ARj9Vb@B.SJ^B<b#?:^Jpu'VZ$753aS;"C^Vjk<3iBQ[b&9%@>Z5YFc%/)jmnPYd#lNrUaKd8#dXjJ`#^n$\QA8Y4DlG9?UducY`X<-)'.S.7SjBT=CEFg,,L_kC*Y9u05;"9M+-62op@HY6m91t%^P@bY;2FG`*\e":8Z\!cT&.k)R3<fc]"D9n@=-'DaE9MD4Cf]Q,>oe8H<[+_3H"SQ;1P.i`f(aCkrcQ4PXg[a(sO&@Hc-35'Q%!6%(s-o36'`DL&Yg^PCT8s(KIqk)MAT']LO1]h3_#,uK0h]qN44<L<iUt7M]WQCN'nZ1gMjtMaB:h;pWR53+QSmCUIMROlQEqMDs$S,%m:og@TR;V8/YPU[TG!Gj#p'Qh3toX$3!G;79T`W<N]Qg,Wu2^i@@SXN@*`T._EmL&>L7&,Bcc>`T$9C/ZbP:_d@]jGbN+[(B&eFJ%>VP?jV)"#\er6"<OB#N)&[Zf0cmi!k.2EPN,E]r-K`W+s!poKV_k85]P/SOU%$q&a7sX1Q!rIf2PX@(cnbIXt,`G/3q[r*-BNuQY%\HY_!-q):KB^4G+A)MqnDuk1_9o/%Q<-2"R1=7uE(sim]`)V+eQUL;FMj"1<4cc'C&!JZT?/god"p*GOnOr(p0n(t3[%sE'jY^V/%dP;[OTe2`<RH;]D-./WFZiWqCF^.?$IqqWjqt3&g4k/OW`"9V`<o>=pQ-HA?7*kI2c/[CRG[!u3nBYV"ba:OegBtmW.5;$VKUUUN%@lQ$Ye5g;men?M_P?aCmPGMD/%8QQVR(2Xkn1n9]_]Pq8=S1^F*hu`%GQl?Q@?HYj266ou>Qlj7I%G#+%)/eoc#KT$T[MK!R3TTN%Zsm+.,f;Yh/)6F;'D"Iq]=<rD3l0XUJ68BUAam=MqJ.T[-7VbCc?\Tn+@q[?R%L^)hSMsQd7;(M^#dGqmW[!)=Mg#_B$#&9Qm#7j%jUoh'=eN$^:FS*rd;V3[apb_U/4+@"R:SJn>P)"F9U7?F-dS689#,4GGr(0j9(6pA'5+gr9pU%d%$(+=(uCiG_\5/<X#s1Ld@V;d%8'dc`[k.qV#4tT]M;f42a-ImpT1,V@H<:J1Sld-*$lYk;F7=DY%B]:M/^+nI,*6n=AeIhh1U5+SOu'FX0u=$W%a?h6KJEt[OBEV6%i;en_;^)[U+'OpcP6Pq\bN$<!SX*&lC%r/#e!m\Nb<h/0]r/(GXPeNN9\5N!12>Q`ba<6!flt'bQ;tiX(Ya#4Zl6SW`bXbfVW<tD%gQ%adT5?a*_^DuPH*_Pe:sR0?KNC.iAgT#4=\r=)q(<JRZ>8bSbF<>X9o30FP[D=D/MMfY;fFldgb*8l;hAj,21%M+H@1MJ':VXh%bq-Pn&G3<&N$XSB)h'AF+;W;@;HN??iNG#"9SmFF9&-,ip+#S#'b5fYnVkhPkQge0j\jfu9@PIaR\*g)+b<+H*K$Y#+YKXk6@l`@%1J@HuAJsJbjieqm3eJP'f)@&+3N`8`D[A_6Eid6(P6P;uciR\$Lp)hh=dG.-^_CdFqB'!KcZPbVRLU]_274^M;CkHjSYtk_g<-,o%@`[:]?1QG#+hP/moA7fjT%rGJ9US\DYXM0=YQ'il7>OuOXf#tITg(:6`LaCF@eUu^E),+B#g>(f*t+(%")LS-fnRt?Afjd>[uD^2%5d\2kPaq<QlSq\]7LoF)92]!SBh@hIbFY]P\oe^68`qJn,^C>;n;<KOcJHQs75re_^7D="B2tkfPep^]H$XWk[3Tq;;];!\-lqs5%(+`kuc2<_W3+[->_e/@M;igD<c]ZM+RM'bicYh[*\f3UrII7;K82+AU]7EcsLU\YZ%>;VEf&<!6+G'rZD!c]0%+;[.32:?Yi??:t%&7OAm5WEu.jt%_U"eFg_TRYji5aP1e&4'ttPbr6:$sl8PATn.eT5#6LS&`bYk:Y]A8%Bg3<ML-R(N;t%EF[(D@6Ji%n,kK#-PqjF%*Om-U\DSiU[P]AC;mo9BH!>-rK=A"o4+aMOlaV4AZ`V:Bq'\&s#m/nm(oRSrA>F/$S>B%<bfs]pqGhYO0VJtY.9#5'DT49;j.NE7%C0POLM-\U'L.MWe!t*c/[Uf1GeQ'(o]#6tsQ?o(Ac2Q%t*oH.Y:)$4Bbo5,(4"r[/S;Ul2g7^<o2F:(G9h34j`HWBPg9&38+RW\u%.RV2ZZV-+:a.URQXGb/4MeYZ>%:i`a]MF:;*2a@18AseonJ*5a6DIi7#s8qY<&tu^0!5Hm:aRFN/!A;S^:ZEVO_;+RY^gC%`bk6:%e'W"l_hCmrJh6NpktU<C3[MirkJB'$W(^VEjm56%ERJB+BZss6*!^tp`1RuYL!,?N?KqQJBG:+f!gG.2M)a)!"fs]^5Z8CRW%1WL%Ni$gBkR"eU5kooL++[".FkBuueY-\/7^WgXMZ]DAS=,Vs]1&#I'jZX-^.uU+KAI:UG>AI\o\UkjGXNq?f\EbUOdFSX!Z3a!U(d)g%>/Uf%qcW4tkQjb;UtH69#TrCb\\KhrkIE8a:3AE.F_tC8MefTQ\ht"f?(XhS^;W<t_&!L-qFn3(AaiDCP2c[fkFaj5m^!EWLOp_:%Z=F,.P.9E^3KD2$((^R7f'Mnti"fAIJRKF&YU^RmL!b\:1Bt0p#2j:DL;Pie%q+(:4m2lOa0jmi^7cA$:fQMmfPS=q8.,$f%Zq/g%[7mJdVTZ@>QF%sI-7oZRm9DH\-Y$GUK7,\5Rpel"`m`46n#ZG[QgBL`VFt/E[$+H6JQN[!$,d4k1"t42>U8MRFr#hDhWD%d!o/IC%P6:X36c243YK>1?clYch$h5HN7^B`9S[;4d8Y^co<;MHO4du0'#`Tj%b9,XIl>Vn5[3_4Ae+[B0.W^`o(,2X:O5lm'1!C3c;G#U>%RLR2*5ETB_3Nf+dd&/+:WY5e0^s?s=%#;MV94^!FN,aXSK%YjE,^,E,atiG0,ruLr#ra9UFe#O,AT,])V_.i/Z>pC,K$2^Pi]W*S%XfIjXc^VV:a3C4%[N=>b1]_0`1.-a=c?8Br=ZSAb$*4G3>DNZOL_3aailn8fJI4\/2qr=-7:S?c2'mE?5LZE&c.(8ZEh*J@Y%tU:%ch+rRj(A=(>EA5o4oopXUL8Kbc]1!%2^^'*@>#X]1GoYo[tptflbkGMJPYihg&#oZ/8,;qYGS280<&SZ.;U"/hn:TA+^g-$(%&Wu%#4Im#Zu3t>H#egakT>Tr"8i/cFg@h--C(Je\jGc%o$U>E/SKeu,Nld6<8A[)JU"XsM8kF\Y-p6F>uT(>dKhA+?adBSePBbkVFb)t%DlmsL\Cl@IlfiiC-]jFaN=&/g#K>,!;i8(&N,9uXUW,XA'Fck6FN&-u9CgN4OA]iLO!BOUDf&4*?dm7$P?LXh[3b[4og/24-I@R`%pWS\%\)[u]\]I'odlmfQ=<Nd.h^8[f(+AEZ=Vts+4LH=)iui.@*`Da:]#1a\fJA@?ES/'#QcAO"!O8C:!!L%29-=id<b3@a+gLRA%1caesC`Jq%-X@.<c#?1UH"!slgTZRZ_:VSaBflH,j5,SPRV6M*^*9r5e#0Mf+9O7V#J+%c5W8P*Ui)&6TXcl]&NXp[;tA?Y34/X-%S0>&EVHi,IFH=J<r>K(CeWa;f2B$O`8XHsK=*!"*S%%H14hes,556KnB/>/T*N?TF$F=\&1^9/&R^!FQ;kbEA"'0?\)>8Ba1^/%g%4`O)*"g:G-CeZdFn?,Em/J($k2@l:*T1qJ_a#SqeP0I+hA]Pq1JJ1s3p6(r$1-NEld!J1OJu&Q8]sAtF(IXac.!Qc!&:<hL;_IPi%\iQPsd5.H%<^R]tH0c>hM&LBjZ$G-kr+t]@9n)Bs_h8&#ndtW0,LpL[0bihJFj,r1W6>[N%VKAg,s#/!WB!ZKM,oCW1Ko_FY!+.H%eL4aP*Tg1?f[UbhG0($%B4Fj):RJj0ZVF_%*=i7S6Z#RSHD8uQmoF);dHGiE1`VjX,)"le:8o'b8*kYtecF!'Y'm%qVaRX.6`mQP%*/u#/i<>OcUC(llR5A.^b3P_naP9Li$a^C79q@htcoP&4)?t903`60]=VdD8.,9R=B/jQF\T39E->8t<77,YD@I%TTqABsT%cdU7%.Y_-I$P7a?(Mk*BLHI(c-B;;c_d3.o>K=n)/j(/ZbIBK-2r7k+dDMH[<8=QW2XEJCG&5NJ(\m2:gjC,RM"IgC.Bs9GM,P>J\b2g"%Fc&7_IS06+n(9[=G(-mmpa51k4/*\8X;nnNd*^uS3YCTnp<8#&P-U?b/1CWubc]:#?s(;e?e7,kSnVm0m5RJ/Df&4jl'bO3q_m2t%rI93eo*ICf)l'9AO%M()kUtdS-;Ih4<LLS*P9!C^-*EGf3a]of0R^@:,^.G!<uZ[\^'J3pX0';-CgGL83mD<pk&Ia-hU[nfr0Vp0%$"<0JUmL,o-dZW1fdG3`,2#a_Y6ed48?[k]T1H/RiAr-q-CT?,]dB7t6G4_;r<2e^JG+imRY^Zool<V#$0jB&m1\bB;=,%^2)Ahl%W0bEQ-dlc3gF(Eb*jPm]B"Dj9^dPY-T[sBdhgf#Hh`cTt$fLG<YDI5UJR0#K5*903E1]D!$$"jB?5)Ae0J<[A:R%3`geT%Ga15!1%QNQ%kaNL:F-]FC%h'^.a_<quqj_4B%^h^gC-c0ZYh'^'T!oA-Sf*&`^K\&W)YN3'#hG4D1#JEo`f0m;JJCfIfT)`12pHAUa'DO`l%?;G4o8o,D8qulNCU^##2B_)PcE_Q<9h_gP^lS&RQYGRUr6X4J+6Y=TO-@3igGli99So'8-hKr0smW-qV"H8s<?CTHK=cPUgo[\\n%mhi57@UDVCb^F8>8iFc@-8fJfC<Fn-l[g(qC\DKa2#BGjH$k)hID8[4#cWY]YaE_#,#lq=VCGku0g*1u"#"$pFmbsTA)!%Xc'2,^%S!ju%j9uEp<+\s;-tB\sX8I.cD;AQ)o>=Vt]r<B'kmu`O37EpjPN]r]XREf1T"d9YK9j@si$.khd<B^Yoe9pI:J9]0(A"0\EEEWb%g=r&/]B2`oc'^D&3U,+\X=NS'c>/k:c^]EQa3FV0[N=>hHDl>)Di&l!dF@&%D4!W#UkiTE<<>F*XO.$(e*8TA60VXK?C*H]bi;e-%=6eAfP1VWlUUq65!Q_dQ[K_HjF2WN%Qfp<?DsKCOs(^liI87bG]@e*)Gqa6pS>FYjA8&8GMK*rmgb#`o15mO,qZ+^6a8IulS\s=8%Ph7jA9q0R;M95@t&2rk/(%o21jo+a[[em=1*oGqSS<`('X;"Sa)_-cUTf6U5n4jCP7]<:U.#;n2,ackePK^R;_s+Z5FbFUMCJ*r^%*qbq!3hr`)6q#(E72<<NY`ANVgDsuiO)K#$cTg6YJ#)2UT-JO!.M(F,V#Zc,X\V^92p+d2d2)1EKA7d<^"Lgt&*j^ASP:\m?.'D#%->ePlKZe*;Ok*Y./"5Oqq7P:bH/.cbD!LOrr],`^671^FLdM.`9?SuV/F,o_9TQ\7o`EI6X!:%ZCu=p*`;FC[J'VV$=jc!TL^WQA%m]rlik&tA1gRDn\n%>gR[W:]e+VW-B>;M?/C.2C%qS`Oo.\9;'64Co7#uEZX!s:Dp;O+De$WPRbF_^):5Tt5l$FH?QYcI#&0#[O8%Ngf?C-G]nY=#5E*?aW]$..=RQoD%2AN"_>sn6p3*Q#Fk$:atbGC,I[W#pD8^7oXQikQm9^`"cKNN5!Ttn.<UrPRHi8Y1?S)'Y(h6%e?(EP?*GtkN3-U]\Cp]2f&N7tPd\T,#9&LiVeMA?CAR'<75+o`@X)fO$q8Ff#`fD/`$nOK'^;u0[\F=,S8A_G`%S&::+7<.9p8f8%']V<TDc_%;T'78"a3@hWD*>VT5GLXUF]se),rfRK$):oLOMV1n3,$j2.U@ci>bLLk_B)']57H!nN4l2>Yq*D\BMrA8!.J$eJSd79%m?/gC'5,YR@G^h5d\C%Eo8QO8C^tb`@Q1[^:uj&OH`c"6)@Zfq;!hGbRKb379VQ`d@)A'#islG7XgY+FY3BSf1odQXD2CY#n%;rT%-2oC$DsOpds4Pu`qu!7*0-EMOF)MBSe2Ja`GNOHk@7M+1A.8Z/LG+K&+k__Fk&FjpJMh+VCJ*rV*kbFM4?E&.XgUX7b+EfNQb9]N%C>[T^f)=.KURUm'pd\>-rHG<pl;$fU_j^Z8,>?5,c#Sk8$[mSq!Sl\?]OREm8hg*.2Bus]ON54gbmj,m@F>V:/E:*W:g:/9&2=6+%4&O6;>RQ3FDkQ5Z''$VYc%rJWMsHI:,VFmTgC_\d<$.-LK&r;T>YGOO>Q@6k,ItXYj_B\/G;O@us'pYK.t@d/Ir&6L#*`1-$d.7Z%9\kpKP*oo=FP@:97bH<(<sE1FMF@p]a@n8sJrD'"1B9<&0U=>'qd?PRmWKTAP8EZI[3J4:r7Ha5?:'QqK1*!;%@i@amdq@6glOH[%&BTW#qULS3P3jg:"t3eE_]>q(%%=i3[NV#>TDYY@CMW+T]mVFTo-ke(i`$Cq#'Te4PWF2;J9+/n4*hd$#_([HbK)"t]f:1<1q"rg%AO2[)*(*H0-/4PMTf_8TjYHI+'9J13Np!mhQ=Wr)<qj*XJJ2q=,,6.B&RIKbP%0'-O#&im=Kl=DL&k7o<-!Z<nd(Efs*N^eUNOIO%`o'HElYp/Q(Ib^C$lnIcjTS&tf#S=g2LGYB(ONA"Igjg-*pa2^N02fa=Qj6OchHDV@gk)X[dN)6enr,?p)&jF5p1q(P>\iR1\+Xi%9*ll82;g4Kb<3pea1[mKLE-WN\\g:Ff^Tl@%Qf,#6@C1G,A"NZ*Hf#J"r/K*ciu1A*nAsV`u(j6f]H%fgM<p'Q='dp0;7?X=$$U4%?<>kma0SDc>CEqlT%oak1.$#XPV^s:#ot+(U$mg\#(F<M_AS8Cb%d%B1DZ%bm]B1!$"WBh`s$fO'09qG3rt;B6S;S+[T9!TQeuak%:%/AZIBs;%%ub3<&;kSNE6?1R\0HnD57;m$#RV93dVQo,43DaR%1MUJ(g;/jC4d5HrqJ5>0"d1a\)m>l:*pVFm;V&21^#M(A([Km%^s8/b2,"CN=N02\.Vl1u[5.t*W-8OWqn(Q:Gjr;uL*BrPntTg#]q*4<2V2s4Z#g0]]?DG51,Y;/d8@^c>ELR[#7l_bduqt$PaF0q%fjMm"YQK0;d."cU*CBtUMf#]Wfcr`$n&!h(FB>@D*6IeCC?HUR\>5,r7*0/9)<Du-=c.Rlq2@1!r]8Q;KH1KDAEL=TVI7IC9qfH,%B02+rS6+HrL9"6*>oi[*T&/D?bKK[en4.k1&%!sg?N0e&%kg,TIgGcXq9Q7Yr9udb\6T%0B5^"^jM5-:J,$KS&&4G@^&Ij5*r;p]%^UHSh1F2`%hq="(H[,5<hgPAHnO)2^on>MqqtKR9IdaO+J,%9D++3S6X#G:YY9(FWir=?"K-$Sum2kfTMdK,Tq1=(pmc?L-*8c(3%\AU$BhS4G_qdCNFkZpC(NGtK(rR+I?+WKHHimY#L6q2BZ[@J^;9g_YT5(J*H;&t!S=+C)73.;HXEWVn/(ZPEP;`[#4o<!S)$;]jb%\bF,^U>?)`eP32@?R)EP,bB6&,O=Jmi_FXk*0D:)*0_fLFa*8=U34C^$-^[!%O#RF5i[j`"UN%=M%F'=0FE&g'KFYMDF/7F6EN6P%E/9Kt&',4\CoA<3UYfBld%3,0Z3&)L<Ha]3B=NN.!?j[1W`q#JXb]^64T>j&6KV1+@2g>ncpS#!1a<QR-=B_lPDa&o']oH=)/TU0%8q`e8TVj\IOQ*o/AU@4AV2*U>pb((*/uLNQOCsYdQM2[uoI,RO$%k/IZmU)?8=,e;HR4)Y7+"u+\`kQf2<]<7&![jCNWK]$ikH>+%>A"_Y.mcE;#T0&o@E#7ZR_",3=*n_U$?%),A#c9"f=2(4;p\%/q2F4R_fZ>$,o3:##5qJ#[SRqYN[,Dh$J/>,0QDnPo&>1'XW3eK%Z:G-S/DJ[sd)r$h+BVIO*tkr,C.E1c*;6+AYic,#K#NA,=HQKs>>8G$UDg@hDmlTe,rmQ9Na^NZZuo3\kA_)99f8n?`4S4;jlS_H%VX`r(%jGuU"ih%&]0C&V1?1h5<U9u_*7a>j&E[Hj%u/>FbQ&a<P.oSu]9Y\TN7W*chcJ<B@MK`)Ck@ir1Wa:[==k^T/!?W63>K/#%(J:_%'I^V9fPuU8p!D5G'3A&)Ze.^3'%&RCYD7oG6VPVVY:+!T*"q7#7UkA]%kGYHmCCp[,*N-F'@OiM_coI$/[CY0"E+RN@DIHf%Z?gfOTlYN&!_*aYTnT=n1NW"K#Vb`^Zl%D/.?^jCQ)JOEnO9OMf)LS8<qUh5HoD\\Q12iLn0F,H*7D6WXlLK]d0h+UA_=%.;$!7!%Xp&CU1*nVYG&hn2.1IVQh4>mG8)i)o*#K6KFoe;*N1I)&YspuT_^^`,j+=Ka7]8nRCke=s;"Oc%=me*ZXLG1Ya6?-Lr6MaP=kA>N%Epo-f4sn&$=ON?J35Po1*aK:CS>$tB/X-)IO4R8c'V`gR*BM4`89cor\r<fYB@)G/?N"j`<g!u%ZEqJ&(u&16k`mjVI;'4a9*K&V%n07C7/,W\k!aAO/6UT+@)lfn1eq.512'%qje;V2FO!9Z.%-N-M!+>iEaVuDAA?3KYP2+;_/.lihA:Mr9"P['LbA<&`JT<?F\2YgX%.j2d#8$cMt$#1qXVV:!fLbdpCUfga!<U1M14d%VOnP(Sb>@dud-YV?MM]B7#W*W;aJ86@!44P+"]'C<-1rISJG%Ml2)-6F'!1Pc?%Q/5[lj*0fV_82LD3"*oeXopLZ752_4%'i<!rmqKEKX,"i?tU2?dto"godCNI/AosYGeIBh9?2'71gS\;[^T\XpD$)7"&FPkPe%Db%)_lnhE!C\%IBBA3!@1<G_Sq.'SpZ/EkpoIt"NO\=]KR$.P2?]VAkf;0ge\jD7KTq5"^#ln2Nu.k.k-2Y=CU;,4,,%5)"'eo#bj'7%0\&AQmPuC0(F+bq-;RSG7o4^A,(2#)7IDdD/gPNbMQV*-_&'cc"H*f8HuKO1VAu1pKF8W[Q&A'f)`E@TAbM8`63>-K"[/#W&WH?c%Zn=_<47)(qL!l5c<tnO[:iN(t.@>)X!N/glD60Xl;X7Fq\ugNS@iRn<Tf>o9Fu(=BnC!8?>tk2Fd-btt'r/8>I@s\kLa6COgtGo`%\G/AtQU=,Q1j4tJW^[N7+!U-m$O,ghUCCaLAo&G`^tX&NgQa,i?Vb)4\#(b))QKlY7EGrLNG@i/6)cta0D/m_#tkZkL9Zd/:9c?(%]bS$F?/M.kVEMkL%2B4cXp\W<RIpM7-T)Z.$pr*o>LPb_4WMj-U44[<UQL-bF>&](aQ(3QL\&ui@d]?B6#N3iVi@bY67P^$L=_Wp%/qJ=adO/17Tf!=m)$ksF1If8^Y=-nTR)ZfkP>13^m%0rFYX'o:DGejiF164eAH'GAA'aK1>D]r"5u=YW^E@"o_(dP0V?73"]u=Z7%Opl+;p9Va\dhp)1l,p5PCN_`\EsYTb6q0U>7T,.UecKg>"BK(!Bg<rc;l)R;%&F7S-^:0A(Riijq?N"8^@Y5kUZ+8e:l_H@FE]rP%ns(FZE2btL?h(H.#f=/O&3QijR[/3nTr2<NBntQ6lER"7T5/r]A8,-gmg:U%F2N5hR"6Km*^_ZtaLX,rVM1I]Z'-U:WMG-*$r+NQ%a_^,!2NJKo+Cf\k#3sK-!1*T.-KIWY1,Q5a#,_`k!Z#ibBt<RjPn]V(lF-Fd6d@gK)^a5WB,6@VK*o]CN#FXBCOY!Q7*<4s$O!+e%iI_G/M:Y%'$pjW&KjZ6/3OGuGV4t:q'13Z'aJ&`q%$ecO.$e?HP82PjLUJd,L"j5da$gu0hE'6MW?%b!/47MS#_E9)&.#k2<m!B`%/`;`L9`ncsqCE[%.>['#5Vo^3:sf/$JuAZq%:^4B,[P>AgF&bbp<+)Af%?>>.I?3pYlpb@qZ`!s<.q4SVVcM)S#J6*0c.fWpEe`U%-sg+i6:<!\Fd(KXRa1EfYitjqb_?5K<sJB+9VJ<r`?W=0pX$2kGJInY=KCpRn2<E%:@D;<aW3#q)\=\DK2LGDPlmYKT*B$91^0qP%hbelS\"W^bn/c\XQDL`Lp&JS<RG+DSFuGQN>5]Y"FYNF.5acFn78mONkceJ1=b:$.3MmM.!=ZL5`A#V'7u)mnp%WX\9T8eW9Ea\#%L4f=5@O=-i^`HBMAJfufHt3\tnb&TeD9\Gu>Wo$M<P,#ioY(='e,"LrO\g^7QR.]ZXVQ;*lRZ_"#M[]17A!)g.Cf1M1/49u*"'ll%l>(')Pb;.b$:?HWP3j^MLQ=sqP%[%%NlRs!"2O2\#E,ni/!mILc^8@mfV1ZsPWOhb.sbG&j#iE/S4Z*_Yo3V8l_pC8,O#JKnsZlJ%1k_:$GY\e.6;Y]XRXg)?l8CSKAUHW(.Z-U:WW6&eRV&p?&<MjSRBhJGn"?X]j_*iCB3ZEeF2a4Ej!>ck<kjO>h:.&)dpSjm/u$W*%!%HD+aD\Xm?>2u#p&'4)e4BoU.:^JP@tp.N-eZ<Ap@%G&E,4fc$p4SoDe+.?[&ndI!Enqr6'i=G&AX(d>c`\o-9ST-B3H/U:b_C3%r&N8kcQ1PFKp?qZ"#&HB;mC*h%\hrjG-,cSUgK%[II:,9q\lUu8;!1G*CYoD1lH42&Glh$6!?oXB$?,;"\D:@k)^K8&WgO@5QJpb%)]E=!.*FTB8K)ui6I-tr8plbL>4;kD4$eU<02MjO?r9u^+I66<LcZCQhIc%fTjnP0c]OW(e>cip[6T_AO.iBQCl4R4/g7P`Dh/'8%:s)AAhf@)W&Af$%@:O+Mcbt/9em@;f$CF]!\2%Gc8aaul`4@Q=KCZNMZ/[N-IC6C00gsi4.LOFror2R*e3;+;BZ_Tb3^SEp`2k/8%P)HdI8h?/_1the8I;r-HaN-Lk^k[pt%3!ecf^)^[:K6rMQ5.dAR2*$i+[\T>(816HaVc#H^XKpV"_;0tV;>`W%D`=[NA;3TXof\t%:9?+03enNII/.S/2*Fn1S/)Jf+ABoH4hBm+&QKZ*\NlUTCj&H0Jst^j$7dItKh'%TZ$D,?nDLNCa+,=N[E,_a6Ii`h9+-QT2@KpE%JjAonN87nY=%Iqj^b@t:-g#lVPT_\$(Q7F!Rms'@1_P)iIQ/uq2,[3#pp%8O&5*2@qPn,/>];A3GeV2,RPCCSZU#3a+Y(Ns3/frM%*FnCfgSQYH*iMSB1Rg)'/hU8a)IYb2_q9[+DXbJgs2EN%`qQ^[c=-D[=7TBc_J@%S+228/0B,*``^>FnWobt!mLc;:_apgYMu_]]%DB>h@8/_rqMrZAN!FNdm(hT'1BAdP0f/iKuK8TcIJP`Y)oX4D+B5WYkHlaA?Z>#CXC1K0<\8V+I2#oo,4KHa^'+PJ6Naag]6.nS[%.2P\:18<o(a?Rg/"'tO"FOP5C?jK,fhX9<.LP*"4%,2=kjpDS)&-T$V$pcCH/(WomIMW0DPbRHX)355\LeT"O"]pfQfJ]P)B!$Po%%%MpR-5(+!aRX]Ac#J[N9?".UU<1n)!,Pbf"k+05m]<pW9$a)-jG$X`k'///s5e@Oac6fg,-bO0S$Sd;[HVmGX]VB[c2Unqm+YHi%X;9q0R_hu'?^f!IOKQ`0gHS0e&M"\=\as5Q?j/.`e7BWT;i;,J$Ych7J.MgS\@saSXg>0fSm?GtL<sN^[O>Sa['ZYZ@..R"&-rg7%PlnY/%u!7>.sm02a0\V,g%JbWr<!02[^<Co"`oNZ7_[e)b_&?UTjs$EQqZ.UB!AF/N/W5Q4!W2!j]MjtjJ9XXJg+DJ_(L:hV@(C7%Ij?DHK1m&1En_f?a_!O%Z^PO>(uc*u#h%2kgW355)[X9@,WNl-:O=+0nCV2c,X"E;T!$BDm'*:"K4Dsre'/:FOLT:f(QXYC#d>"R%"\B<14roVC.V=Nn!Pk6:NH!4-n90pOj\er<2L-:RfK`?Xcs;)\g@Rd8b=!$a>31QeBh?G=AZg5TMhrpf%$Y>K@+.QpEOs)=YEtOa%fpe(XW<E$s5K4f_Y?*:iNb"q6a3N^;)4FrE#Z;s?PH-G8kc,p#f/+hLZtrBf-AQnI]I*Fg+IUhLgk'sL>DB\Zh-;'(4XqD[kW5_8%L)&75.ltgmRrhnWA#[i!`U--"`5!+Hq<iPH=_qt<'U!KU@UP1J"E[eQ[CT49;Hh7)_V-HB0JWh]PmRV_0I(k58QoO43MIp4T%Ic*%Kr>;49"=++Cj9KmSm(g9hM9t5mcYS$"fVj6AcS$NZ31G(Q<DF>_sYQIO)*8Y:t<=Zj:SeSW1,:2TX07)cIlo:P9<CRc-m.>*tSW\%8d6%[1p.n^@4A4fS/"p@^gTKYVBjCkEYr5[=;$N8q1ds#ieGHbMHKeA5t`O6)5L8R<"&h+B=`We!'!t0?)gDG+p-)b*q[X;j^N`M%I-l[o/g5oI0?9m-a>-X19&j6o;<&#Ymb?C'W658+!uT3s;$1HS&G'UDH:O_D*<9\1=WE:C<!);Oo1DFrY"7AY*ODqaj!6KUr",%S%0Vgd4gh,I&eG3Tn;,D'<JFHfp`I4DEJdaep0D8\D>uCo:*<];2mN?Ys.np&QE[tW`EKt+ib8RblSYHem!p%$T.J&p09uugo+Y&cs%YK3"P?)Gil>ot]-!BRZq5c9JVCp\hnO0K<0[0naGTkCLkElVJj#f[8n?R-YFo8<Sr0f,r4[ui7460B?R,HU:c@ilDXO)SgFDUt/Z%C]Y[,I)?[)'+h`@l_kt7UprgF)`PB!#hn>@*1CW%Q8`VIZY<[&K(b=#jZ)Sq7unA@OdVE\I142Y;Rg9oA$FeO-B':qjBERT).N]t%P'XB#K1%.<4:;3/OE_lXE1eaY`ah*U6McN9"\gK^)6&3qXL#EE,N,\'08J]F8IMD&&][2<.q)Lf;%,k81n]LiFQWipRe,K*jbnkO%lDZ_XA[#,g0uT08q+38Uk^9$^k\:lK]U)()aRD)#R]1%"R:ZtslkL[#2!KVn4u_N)[Y09jO\Qhun,kHOA)>rhoF(>,QG<lu1mthi%AC!!.raDId6Z(4kXV4K-D:JV\I5lUG"ZktU;/Z5-.0"ku"]DGMQ&LP`;51)EG*g859Bmel]BFb6[:*P94(A.n>s8!G&rU$P)OYg]%"'T)%@tY?S/MqpNc0qY@&SBnL_>@*%2fM!!`f?qs)4%]hpe]Wt6m*Kmg<r6*lWTs^Of:rY4V#^`a.dJV*aSq)7s)ZQ=FZa]D&VAS%a+S.T%?9<sE=7^Z,.SW)Y-4s\V%W)&D2FQNE"lh]78EsY?9q,n09T9\nECug!7qI"FYnCU_M.'-JK#7f)S`W8R/>B4125#*+MKUK%oE&MB%qt_b($&q7q7SD/grKhWD)>m^kTd0lgdBn7:BV]edI^kb:k55!\]RSj7YsFmU=nfVq:19JD+FY'4%IURM7LWWn\gg*^%r!l%GN!ec*%c,5\/?+LhW%RR.][[o>dZB@@TD`7p6f(bOlSj8Lq18Z/qfAiGH;Ehj0]pj8jgIOb[IDK(V#gP%;16="F?/J&f,$*H(f<f%K,I!.O10!h,rIl$-7P8VR&J-$JY'A)=5YPa_kbq;-5W+:Q"8@bFe[?17Lug02=hkObSlcN].egeCca![k&J,UA1.inq?d3\=S$3q%&?J,\]Q.F'(=k@+93>1Zfi[C=REZ%B+[m?$O^jX!"NCOBnaLX+*UZ7q)>ju^MqaIRUK9^gZ#>KZB@2Nm(70T&c3XUZ>u;.C*l4Z&%9+)ac0ICg570\L(68_>F!F%c*;if/:i910Z_\tF52>7ZD8fRpkFG=f_?g\[<"`0+:E&*UsrY?C-K?jahRL3Y`Y)+#VU#h8+9\nBc%ftV3aT*I&lGA)kYSjbo4JK\/O;^c=CBoFk9ciCOuE=fC5B?BSZ<U/Al$"W][;WN>ZF.n-<Bn\o@Hq%3aUSqgUnjrmX&7At&LSdhV%P+hH6O*>:&$F!<bdT@658:!s?rF/rM2@-#:n,s%(!o+>?$TkFE2qPASF:e)HEka::Vbmb$he/+R.0c"</d=n>Z(K#%&`+tA^jn1L%&Pp5N/(e>98/u0SW`r@\%;S2Na]8-qg;U!I,Aa8\<"Dpt-js[#/QFFfblWWee6L4dfm$?^h2S-Eof3"bFf:58Uhqmc!Wdr:'R2MC%gV?=Z>_N1M6SVl@dhEo5;IonK%\6t>0CC<L\QdR85phPZ*pN',[HU@e"/$EW#?;%<AH8OG$m+tNaPmg;RIrC1EuY2Oc-IR:!5`X/%hQ3l`ajOT/5eRgZl1Se)$>Ct]&RpEP_/(:&2:q.V&IFu`H>?gF#k1UQ%61'l[J7Zt!S%:>"45j3T,!WlV$9:06SMK4:m[UbE`@Z0%Xa41!82?RV\Yg/CI:\pDUOlsm'B`J?\r2cnM5,eh5T8%C*Na$(V3o-220XRP/&#(hD&S#-LFs6bZ1Opp!&!]\6J.).VRqlWKZF,r%9]HEP31K/:L)GDmMQH*Gj#\jjM3!=_.;mgU!ZL"hc4AZPY&uVL(h,RKG:/+Ib0[)?>)ehDW"rRd?02c6+,EN7";d"!=hu&WXbpj,%-kb[fYkJd5%X!CI!s.H0&9u_!!14Dc"'I?;&CB]41]<[t8\A)p>L7pjh4S/7e9c]f&LM^S$"cM!*Oi2?Z-pVp[iSu5T#?06LEI>`%&WE_F<aH]qSrO[!H';(5/kdrI;upK:]lJ+N-#1T-)DD7$rIG]VG.7H)^\!LHILe2'k98mn'U-NE0jLr\#6i2af07(_Z_a[%.Cu8i%6:0I<<0M/-eRG.t$uCoS<u)uW87S"ngs3a/4-h-#kWgiIe8[=ti#P/*`aR<;s2@+p-[)+PdlpZ>p#F?u_%#tPIrbANcTf'lp%Gk]%+5bj9Hhm6%2ns\5i<>6)'j&dDa;3U-?iS-ARf3hQ)bnSE%t\5UBbKWY3QD3c0J8Z.heE?*.&h@ni_:j^XOr45XdSV+SU3n^*nL$s%jHHIcJrh&024(6B;&*<@%RU4B)B"?W8sXb&>3C!CVl><)8g.jTqF\R_>TMT+,Ug<c\[N:/`<q>G_UCTrn5=MLd6+KI$o*/on^+ZV%;M&L/@AQWg;M_"-)3@Z>\UULL8mQQ>3_p+eWCOg>loPd>:a'`+EcL>2+jih!&iG:E=L"46:]fo^grn6mU'HBAF(XBG#_K`gU0_eB%c=NTeA2fqQZCXPL1#."=&h.Mlc378;/868W0,g0$=YZWjblc0d:=,tBU*aR6Y_#5-?!7&ER&Q%0NQhA5i-Z4qH*i6*,<?=.Nb\aE%"8b^>qp5HO%e'X]r[B1;0pHn2KO-Mo&DL!DGq,t)\*gD"<'VO;d`&030.lI,QMs!;0:7jGo[BhAFr)o#@-H%4)%9$9iKmNEe7/l%%1Y.4Zn1\DZ6P%.;3/[0dW<ZF+[)q.E@Vl,]1iAC?^iJRp%gS*=!!-;@D:Z$Ii<qBMl?<d@-@uHs+*T5%0M0te*"XH^hHAH84."`r%MN.jLgf(p8Y,@!L<Dsl&!04XN_'4c4Ql$'sY([/pO@7=9Ef#2.i7s1]!l4P\9#b=5.6-LsBR<dAq/$-C&)Xel<.o)mDbeD"I9W19%G0)^&])m$`:j<7;F4#U?ci@mi!6?E]l_7b%]2>V9XXg=S<)<urOT2$g>HHI9;#R+/&@<Mp'4Q8^1a];8H5#Ke`[5MIKP.ds%-#l%%lQG<.EjCU7"U@EAfqkcrK`\%]?kuEi%>8uRE)h_kiDFh":6LEf!W.FP;Z5Rl7KE@VN1Y@M^oM10>>mEQ?*$;[ja**3/=;4i?sj(`%9B`N0_=H8feW9b?<MGe8kY\o+I:i-W+EC+/'X+7/RBRKecUVRMUiGPY1%9<6,4@45f2r+15nk%BB*C=k`7SMjZ#0r0Jj(0p#r9m4%.,"7IOCtVFj_'OI0jE5Y@[jbL*9CIuI,Q59gd&T/W,hqaD0T,\7q#^KI#\'':Sn\bSN,D;L\ZMs2Aj*@[5Y05k6HoUEK<VIHBM#<%.`.miCk!)EZ)MNiS$rBDou(<*[:`Vq,SL;nH)5VYs3l48jsomAM+/c,WNfSjUs7s\:[jI.b!iEX7N=1&6tOKoXoL-5bYqS0N9M,9%'eB(Ja9nPj3CZ(D4$"Lh`VoP8lO&6kYS'o.!QdTcMU#f6[P[*)1)2q(e.q&gN@:[_K>:>1DJ(@9QP-qC-D:P%[_U32C.->+)7J.t%VN[bVppuIt8pHDrC[?tBKosj^/?$dIDFR=h3R&?k.(XJ*$+c9]<5W6;2\V'7HjRu^d8@VB4K<Yi7VNOFc2EV]U4T75.*,*n;jE1Q%M<G7k<K^;'2h]g?Cif%,(\C+To`,=(AOjk"PVl0O#$M=#BhiHnCj&XU5<@`<C)hU9V5EAr%D!!V<UYOOYZD9/C$i;7B&H>PmWK;Q%^a8e6&9h)%;Z\=SoMr52dV?b"(jA9Pk;rU6R+e1\O=,dS2+*[fF?VSA;IS4`69Y)r#%hCcEu8BHZC54olb))3(^O$A>6"lHRTc4j%)dKCtpT6([@3.t-?kb'VPF=6]cD6&P?/Usr+O/@P[9BJr-fg8fJ@V(^!:jTPo;fo(GU*rL6Xs/u$QM!r1fD=T"-/muP%\;E#mZ,@%4(=iC"#EnXZ@!-8`<*T$rZ%+\OYN<CH*,VLbQK<)6s`hi4RX!6U,TA;ikq2t9I,A%YjG]Q/r&S3iUWYC'6$]I(V:k.K'aW%Z`nm)%14qA"!lVTT_J8..f"u:YK0gpXUor+t@FYDZ?sq7q<lRQ0kS^1S$qp@u(.&/M6=Ca@<;>)HCD[l4[Y#oP&n[D42@'IOqW`8*lV9e2%1hIm4a"Xj&ZgJl4(`Q/^7Vb6Jqb\*[R4\8W+N65(gCPSs]]ZW]g1]N>KRFE*9TW=UA)=2sI=@hkZ8N)gYnk^od(J!NW"m?RlW.WE%?68W'.3=&57H$*<A8VUM;,TVQ7snI-@bUIjeIZ4kd&0m!q2BRgAN&_BL`4GC<hDc@1[`>_nP]l;Af^1ll<>UN"#g_.T>n8LS\Hms%iO'.p-(Q#KJHLC`B_AF<a"0BELV5#76H5XledYJAHTgZ6Uhkf8&rhfbJ1[gUN)7,MFZ1J!'cRo=ehCrgCG/EBC:O58ooFWa,R]/Y%PmoYt`T?2:EK1b:6@t8d?;Je:1bI-04e8>(nVdJM&=9-JcRe'N*eA/tk(!mPed)R#Q3B\rCVONTD:6.4r?IMfN10@`Z<8Nrq,%\B%Kl<M=3_>nRBPM?YGT;Y>K?lZ*=a;k40UY#B,EPY#.^I<9!eW+jBioe'[;l]^Lg*,q0#G=6\Db_(2B:8#of)0,dB6$+h.*-;Ad):O%iQ1=XZ]lWrHr-7IcEq$qlTb_bi"`<8e2^eL2ZW,F#$c1Kn42`#Flm9Y13SQjGktQ2@md2+2jJ1]7<;l7MUepJ'82t,ZsKLE5+#>0%`)/M!9K'V=AGdMFb+_oNB!")P6!0Hj8`d*d(3hEJMmO^uJqOSZ7$X&h[1<:rR34aq"Tja46(%<fXn,8!8sct=7^WC0]NDj.2JKjL%p._N]iLs\:64nmHasn9o!mcH)AgM*tapEgs:GZ*d3/;$Q,!V&;WRo6h5ZCeU3mY_e)SWD5fj;qFK7XNJU2I,;9FtlL%cOQ-9Jp(<%7bX!"7h#^I5@'Y?=0,G3r.,URi!E+9KWU@pALTU'4ib*A_^OH)%Vi$=BabBBr%;2f"M4`Q4R73'glp:"WSJ2/%)T2E_m1-'-Q5'C%e8d$7HFZI64qq&UFKJ'/Nb0;+2Z2l,[/.5H!&:53%EnW6^i5D&L7j-qATV,kUPASVahk8V\:\d+*<m::(;0,ue(mTMp,2V?g<j=Y%XLc]W))9jq,c`u1;3FR)%6UdgpVO".=J*fBBW+ZJrif@.[i?KuG#h#Z[I1$^,X>iqP7ZF6g;QFsY2.a,L8&0+@,b1aSY&?d!,@X0%%RZ=LSSPFqZ17ca/UOF)`JQIWX2Jj1ZnRBID._='-'tB-S=JjuG\L"^!`ecGh>ngE/D`\N%n:TaRTCb5!u<PQ4LN-q`Rt<dd5`nb%MmeNOQoutCZU*@<m>t=3N(0&B!V4#2V:'"^%2aHtR4tI>Q/dhtb7+fP0WWe7+Z*s01^Z(]G0H2R*]9BL&ZlUM>JgRQbB[i_`jNkU%E=g,DU2ida"9+mVbWAN4?l3:X>G32RI*boC'Eui3BZ:VlaHj[:B]^FXK0VQYAgq!Uo&;TFB1Zg.[`gi>V^!c]i#RQV$[U[U1*KfL%0tt7Oh1.V,];JubJoZEGD-a'l4DGjn/43,@bFYWi=NIQmm*=%;===AZpVJPEf>+9IEQc1AF6^Bb9Mb_IWS<Hg'Yo=d-]9h7ej'FB%d_0-HO4&o'>ci]+d*nFm:*9]-NR_<:i41R`<=C!;_UOYeM]a&b%@#>[$q'BD\shBX7AY!;@j,#(`8&6lU.uWlQ8KUUpeL"4/GD=g%LS<fQ1e8hZ&)YJn33:U;btP8cZU']4iGMkm&>SE?BGd)K@C)4R'?B$>1hm@>ff1Jb@fcjEQV.D>L5<cibA$56Jnhf5b;iAA(,a,a%5sY%F>@k16`b,]'VCi7rckj(,U;NqKL/-Fad25o-JtYh1#IE-9=B\:\^aH0+$A0&Vbo&;SV!?\CpT,J<'LE2b=:AFN!*]9=*C-Xd%UJOD"QPPSIM3;;pN%qYG2FP)7353ah@BHN\ib9o;PJR+<4^/8X@Fa>4&5`Z+imJ,cd+\pDqp8ehcG-,fNMTf4h<>JVU0=7Y)_mC@%dNmN&1RSfIDX\oZM>H;a)B+_]"U2U&jpNO%B!E+0K;O`7@fiU@_9YE+U"JP2[9bC`V#f)I*0A37>Rd^D6FHPQQWVr;U6S7GpTTnl%\0rhhI5CF8Uf)Ik"=;O1B503B#s9Bt!`Og`$Ai\[Q@_e%:?R/+B'TiA6OuXRQ:&4(NJfN,#*i^Ze,YGTqBjRcl$Jop?*JAu+f#^L%n.7'.TI%bQ+qI'"+/T,@gZINd3@C0QDBnC*G0G?\A3;2%*&i#ooI+Sk5akHfrS,8ROL%G[/@q-86UCn50V=:D"3DBAM!rb*&L'3O%p>AfN6?!d'"U`)O"b\=G2lX@,J7^$*P8B.L%"mk.2MQ*6TqV-\hnm_;7lU(tT4rW+pZ>7`bC.%@>Lbd>SN@X/'L6K4cAbh^`1/h(%&RP&$D8`u!BI_DTF0RkWgGR\i=Je?7Cok0dTmQ'g1`)`3b2f'K(QK1,Q(9ZHaBULc).P;5UT7.WMsmTOg'MhGN\9l2BVF8Em'ob5%^uJ+S$iD.j^!;n$cmk4N8sNT\b/,E09Y%r*LR]\g0$57H`EWu4OU^`#ilU#1Uk-M9R_T5*QJA!hUie',btd3_,e7;uVhs@P\_/ao%-^%`seWdM,JJpLdkb3%X(0`tHNa)Q2Q0$"6Egc"6@8Z)09V\qCA&q*G![Xq3+I?='oXss=R<Xek9TP)o41R8>*OdHejQ+>BpNgGk%V/2)ZN/L_G08gXU(ddRWMi6D182anX\:?Iak3S$A(Cll(,Aa0cNqf-7\CJZp-REZ\R]mGK/kl4C(*,%$:HrTdCq*SnO)X6ujT8`-%U;CJ1<X?kZDDi)%>e&$-/sH\ZeR*0X`InU"8gR5#\?K^*dqLqSf^^>B]P)7gf#Z4`JdV\V:ekRZer(@`BhT"AACZeHh^NMA,2%&s%!60?Gq`o:m'B%ksBIEX\SAMjKA\U[7^u$+,/IX#V)=6.f]kZ]WWGaMF;*X?i\*,fK`(k[f(`%#=H#HjMMRh`Z[p8+3Tt^-TlJe^g%_\fQ[,5?.OhHNF,)%j#M%1k'+N"!2[:(Pu<I:a\mSaaS3;c-NuL,eQPSi^%]SG!_f#pH(VZ/4K#P;8+1/?.*#NcEKOY0/4Gfh$*^%f^gAdL#;qZUJ@tn6^?EOHHX.13,`N7!/A%T;aZNlb$4WA-oH1f>7`P$qIB"m!:p4Rg%fLjMO,^D/\N2[$(^C*FG!/%<4@rt/ihDJ%Y[th2DUAj!Z16Tn^Q,<8UUe@R5I=GQS:QJ@<-=>YNhfUk3Gpir0Q369(+U]4gn!C>UndFQSD^ga-%pDmgLBLh425VeI%U#bJr'Jo%Fa@7'&HJW8ZeH6'G<*2cl?7.f-b%(h6Wkld2'2<$.!9`K>JeH[T?OaJ(1="X`3s35$@VL!<m:h0X"E>d81X&.[]G^qd7J0U5!fFX%A%&^D47&3?q9YQsVmHVC=];goTap.iX8PG"Mi`?fC0[b_eF?Ug]?D,OHW,CS)0'Y&4=@IH=p&_3jg*-6.;X2XgLT$cR;<Ia#5lGr%Cgf^HbdAH&JQ5XRDVU'!(*.%mI;GBu(_Z.TO7gG"MeWK)GEfoZoFHY`2A=H?fT;*.Q=LLWf@++eF)ag:`lF'[UAfTW_\RlR3dE<[%6O%dFV(L(SXu>QK<^;V_Dp*`;npi0//[Ego(cL5Se;gFb->b=AZ1[ps^ehKK.jrVGOE"_\)+AE$B!'fHU>^:0>-JTKnSu-DI(-+A%qYL!4MT_!\()_8A2E4biV^@9`Pc8PLh3_qS!f(@.M/("*,1VqLe7'65UrAO]VA?.I/GdXi$O5C$gJK9I&?K<t3GN!=^g_DC>%eKp%.u^/;^W0R2$#5B]&3)g)11RQ#SXm3"AVSm[Bd)MA1.?lba<EW%/JL]=n^>;(,0d%5dK4TIH/Pd2TLf/i`_K-a$mQLgEmb#>#e6X.%dUq7'?tZ8]C>m6tO;8Z7,Gh488_c0WSEOWPN!N5$fk>*mUT6jR$VF"9i/NX1+L@<mjJ!rOA1<_"(>lZWD+q<V.*IP_d7+T?3=RQ8%8``?,Mu<o9RZ2q8l!]rm:-k?Xs1'r4,"EE6[@>(BCAIa;QE=V%@q3W?I^U.*ObjPLS70teq<YrlT>m:H<lQX]0U-pmlJajmBAn!q%HmYFJPj<2Wc<<*dUn'Y*?$TnM2<(u73fAcW(Zk!L27F7Edb(OAo$%6oQuo)h/N2YgoI%(MON(`qQt3No7-(qhAr"e;SZ$-0$LLNn%W-6:HAi:ReDI6&!Zc'ItQ<>8miZadZW*-=83+eX0UId1EQ'lSHbkh()@+Jo700@[A2sOMlGgbq]m'>#t'L0J$Icm#fh`#:QQT;B'%b';:u,aPiH[e%WO-A_8hPsnP4N"]ih4m;h/>b1)sM'?t@fn3maNg!K:+>>A>'<<ZrV_T>5XmB]1W7%:VYO'(DfT8k@Z7,#a=N"ob%@8NdY=_/Hi0',JN$_ft<dZ%1+"q+GhUm._ISBd)!f[K6oP>LrqgcEJI-jpL#i5\S@b>$Ku25SYK&34NhSQld4_\6ZH=_5S[Mb`t"%8iUII7<g-O':CDG`8ELs/m4iVi//A:/G'ESV041g/1>K8S4FDp!A"WLOr+=Y;EE4H7baES=CbR8bS#:tXQ)CDc^dE=c(rc7Ke/D.%8df2)bb@CoNBe6`)#1M/5Sh[Jn]_uj#,2[fQ^p=kA^2?d\1qohm'1p\UsiG=E8ZR,<h)5eR=FEcViJab8Ue3Ia!Q^m3HK#Bb%rGc%77s-/UK(Gd;J.6uN&DIEmURh*el\$]dXKqA@psLFf/RCo1`M;kS.E'Dji=nNB.PY-Zt.B0Dk+*3IHQQ[1?4<F=<-n!Pd-9$<juTO%&2oiVNA4IX[qK2J`Wi/UN3\sK'<h_:=i.s7@fnDX7-Q[D/.NobRrcSYCFh*7-dGgdK/%m,_A6^1j:?CYfYD7:'$m)QJ3+/aLp[oT%<jf1\@k$Z9T.+9t>V%.L29K%_r\T3Zc%uue&aPi?Q9=-*O%C4I',0DA:)Q\Se/$K#16ti+l/\)6pn>1.(h<A/c1T9tX$j3A/]LoL%>jl/W`q!3IIPk9-,0ESX?Au/53,rIg@k?LG=jM92=QG1#Ut-AmnX'gSM<g,*qW@*'1WD0d(@*0',uH+9(7[(EPk'I[`/QGdmJ"JG%if#Q,rAhqIkCg*V'4_e)_UoEjZd&keM/J3Z+0jsdLj'd-9Gkr/=]42MMS'!\]G&:O'"Yu!S1p76X)-)V@M,NfOKT>;1?_f_R4jjT%0qCj)(sD-';AU9\m#_7X$d)3]$RUR,-=&/^%:a(0/J]:#Z'ROT/;-\i3EIbmWb#&HU7Fe:Z,8J6Qo)&V887mQ0u`-)\>Gd`@`P]U%i'agp-p->IM+(<-$S"''=MtFT_br4Uh2,H@,dI+c@l\VKG'Jq'+L[aW2#1RJZY8Am%u[1J;Sut!A^F+\JC+J`#g9]%Ar#IWa!3-]%=M?[g^ptOhdU;.]%Qh&Kd(!KrULM1!\7+nJ4>%R1/4:m,EFr<05hj;7@EGC'kjHFu)jk,"lK!ZLn@5;1F@Wp>52M,5QKkO)%Xbit%&F7noS]%a[:f,n.0e<FkM"s"b/-UuhRQEn<4PQDD<\lD>9k%4!N]7Pc[e'n$96XiIFI='M3&)tbC/>r8`3?b4Y#(Y1$d3AoU/mdu%+r5kAQtAerb=BEq\;_Al6<F`;%*N0@U<_$m$NY;R4#8F@c6li(<kBeFWADFi_"drL$qkhT.s3VbEaK>NI&D^Qk(&)+U4u[`,7"O5%4Hr@@d*\e#6aU+;c4(.)*=(b^<EQ%<ePm>pIu^'<(,B&*:(9hs,'Qck9*)]pSJr@0=t+BL)cg,;Pm`mg-.o.8l=T46Kof<=c4(^`%!1M?sL8=l"Fsi&F@3:[QQL1oXd)]W=+>*Ic%a2Noi+b;5XB%c_-<nT#\V4Zq/DVS,e\/4[T&d-.Fb\)IPJ[U1/h3^`,_m]<H*f9Y%@7)rI?=ScPG7Nks*L=P^-TS70W2#+<Q&.Ub+8ekDX,-#5klu_p\:)]MRQltQ.N80I-ZW<mF=!rI;`#k(okDB)4Y6*n,SE2d_a59)%Ohm2%((siD%c>\tYO(8ELCJ;T!b7!s;kA)10*rW+baIkbYdd7^Yac`".ktlCB8;1L_ns9]*L=2^/el%#"hYQ*ACS\/nK8`qr-*0`%^t"G7f#V8SYY%W$Oi)o_:==t=QBa0]m[P8_>A@k=f#V96LF\Mb,)6W!kFUb=PV`K#P8*5[!C';*BN*.3SK([5&42fGYY_O/Uc0ZV%eX,1ZM&_gJ$sY087GB%9>:dm)+lL5EPJ].?hNdk'l!+^n,'S'0("@UTLW.e7f';>#S/"P_gosm%N`L@==JjYAX-4Hf)9EF:nLJ]Y%f?!/dLP8p<S0DNP]"t-qDV,:RF/0I,/7aNu\9:#gaV?+V"X"U>j2MJMc/gdjb?,^H:=)(G#eiV]m%gknc.G4Z!h0e6)W*&'I:\:E%;8SK*[1=&S'ZaS*lpUlf0u?\J0uA*<H(F79*2r@"G='q_1iPR<0j8%aKD"[P)se7V)6EJD!?GW[Yl2qn+r:u12s&ssYl.B-k=i,T%NlS[D_;ZI2e4'Sq%6NQ3Yl2qb]@4PRgWIN=@%/<MSHK_(!Jo1m*3`rXc"U(ko",P"1!YFX1bo%m!A%aukg'3cmhdKKs,&3^q-c5U%=%'$_EWn2:end\d-\#]t3ee=B.oL*F[o:%N`h<UjWF).`!O+;nJe"e1DkdMOiTT>`H!b>dSG5SN8s*$311?,?a>7M*Y9<Hd\lG.c%(;Y-YC71<iaCHLXXGj@@\H;<I:A@G'+NdWBmhL+Nh5a<8?CSKZ452:[-=ocJP.an;FI_Y3]`9#J:A)c$J47YK?E8@!:@q/u00k@P%SlaKb@6>IQ.gs)lpbA)de]&eYSJt<Ba/e[qI*ARk'X-Gf5X5AZYK]YSNOfjDF/[]]h\A[7H7FBfT\nhkY%4e(U2/e4<>*"(e?8RM%=_=_aY2''c40pGJ6]#'iljB7EU?PG>$C4jDc^iZ&[0$[&6torcG&laMWri"`)l`-;)5euE>UgUj-:"(ba3Nm0Mu^j(?/_"32PPpW%+K#7Ro8V*36D^1'^_MtPV,'EZ3ZMDU2aUS$+)qro2_GSqWYhE[O!*EY7d,`+N:C+"FG4iTPp2:nK5c;0c?D<N3)))FS^*K@3qOOH%oS(iBNIl9g%DZp2HLkCEBJer0&ItW=9"q,8SZA1gYtmD^#cQ=EcBSH/hf!V>1qVC[UN7_q!\@cXF+%MHgg9q^l!,)u6W(Wok=Qm2%G=Lbqn[7!rHRm!G/9'D.>T"SK2k80Yg^\.*l!-a0dBKsfieH]u4.GR.$b\A1!AH9Nltii9S"X"<A94RIIEjXS=#Jj%pV<A?;`L8I%#1o(g2X3JcQ0Ma)F(L.6_pQS2)%V8Hj^bNQAmh=ba]ta'BOn7cItefeEd/M2aB3:iY.HCAed.4g4..Ue*2'!K109(PZVlN-^BBsH%6^qVh8lZJDM9M5=5p?EJJjD0qk[^i@L%KY610;t;^nZ!0=-OD]&m5TF\XUs&aVDUeW\]^u1JC_be/iuU7()]3*`kfpC6+S"FlH,d%aHZhp<jYl?:e';"7J*jQ@_Ah'5Gdf(M-Lq#/#4u.=s5k\#_a.[/#,f^S>][)P$pqT0tDn0Bop)!Yo'R2cqO8rECIE7?7`5g=cjIH%M_"#CHTH/V6Bk#rU=aW)<TQCn>arukS\Z&f1o(/2^_L3BEUWh-J9PH#h<A.5mEaeYXUY*K==/;Di[kFFm+e_f!h`<E>%&p&@8aR8%MnAB#XWSN+NJ90s<X\(NE@[H6g538'Rt:W2U9(J^TbjVCXd7bs)-a.]fm*$:G,@NL`X,ksn"b:f:VKkI.#_,ndC$9o3qUPFRLLXP%PI31+52,(4`TDXU%QRN>-n.eO;mjJr`-ca*f$+*Oa!>E=pX\)UVq(MiGFDQ?S<01ZQ<%s_jqC06WZDaeG)"S"R`S.I$?-A8jIMhV%1;q_5S/%,&"BV+('p'<nA=Eb_-#6,iR9>I9&@n>U^$[7O<g8+J\8<3#eUhp=b)/e(,+1Ab<Y.p^1/>qpD!+i3A46e5]\&d:'f*uO%-Y+g;W]2(NqN6^@cBGY$J0WuaCok]+2Bujg'`n_mUg'Zh<YjI?SRLPfKm/0Cl;Xi5&dA<acGVbq`<n/V2f.Xtk@"OaQW.iA%kD2;%X\QdV&t4q1$S/I'Lr4'TXFr9o1-&Hl7C/P:(#SsF:;P*Jr*ch-VSRI^SW/18FZnYdg'LkYR?uAH?ld8<kPVBuijq5M.T-@02E\2`%P`=J7W_2(]j,&5M_QGtV/#NT^1;fLOX,Lf29\oMG\R.4'JBkoe'qG@ck?k%c+h3M]FZ!14?4Eo19NrlP-$gYAM4K/3p59Ff9i]%)%#!0R,=D)Mp-X`dq`SGUh.WXR,is`"b9Jm>`I>VL-@B$(:!@n5TL[fj[jWX'W<=AG.L1,4"jK!gZ+1@r0Q?s(uXN@DBE>gV]47aq[%&<e$X,[MKdTB_*0N0Z3<^%8CA;*^/rES,mM,C:',Y11b:]LpqJl$?uKV2rO*2BuO>"Ku"Ff]5h>(p>h"c<Gh%-\]LbL`I)5:X7uu%2gJK4'W/po,[R=#)lrDFX#tr%0Li^tS&Qpe`2iM,:;"`2/oo]A]W/r\D+rqhVQa0&YS"&o!6u&2R\SFD"a2rs.a;83R[n\g"r!)G%::uGi4Ni^(I!Z\7E@5((QVs9bX/mp>aME.'M;!^hh0E'NjFfGJ<=5["N-CPE$q17[mja;Zo\4Xm+c)MBcFXDa;<Bt1.QtnL,R2au%J2P.<F66IPL9=+Aah16l&l6c?=#$q9fQZIXbqI(V@U:@5"?';$k#G,pLG5]/&YQ$cfr8&phiSZIU5BM(HAJO[or?%)<EW&]<MC>g%69=ch"\G[oFcYOV]WW:G.WT8"Y`3pn*-A9p1Zh[W_'cTGY6+1.mDPQ@Po2LbIYZCs$k6;)goDRE@Zl$Y"k*KfSTCtYqnXG]F0@ot%a];"$<NuMM*cU[MA8)l"g<!Df2$R.2a]BXY[H?PN'EA<JPHU.5-Ypej/"Vpr9^5WL`%%+5H8QBmd@>LtAZ^&%S9e1ZiSKDmRCW`?%ck?)n%VN0OFC-#(is."0::pq-?HS(*".<lOR)H$>+BYo_Y<nWHSt1+k8+G`$Ga/^C,nllgX2k<>WB'Ju?7XE:cFc1A48%kO)YY^"%B,&3c<<M4!0qGgUOZ'&T233XW\2a6J&o?@(;s<#;JZN+\G`6ul%`Y&fPmPgBaB)LoN"i[`Y;2FZ[D6KndgdPV0rJAi-4:<?e#tMK%Km<&]^WM*;(R4Qm/4)hSa66V#>I]\Ts!miG?j]!q.^O0,2l?K+#i/n>/cJaJ!$4Gb),9:KmNq8uX.2nM7,E*JaKuJ:Ihc<@dWj'P%$:2#.cRcS[OE#Ro@&:[4(F<i2"c'OMf5-;4/2[K0-<Z`NFok_&eQ<9),%/B:<[=4LYd/Ackn]m:?mU=29C>Qj9"Y./=_D,r'rS$0%B4/^"j-EFf#$+::"[!Z).D\*6%'5[)dC(j8Z9<)3mL61MbcrGD)-A%j]P:qaV1$H2W%kN>[]1(K@n7F<F;][&)[#Dj9a4Y$8&KKj%eMi:s`BE7)#$+9;9Gmp_"SD:5""OmZ%*-B'8h",01U&@l=#3TPV-cKLkAhbS-&@R!GUHl&$A?Q219cq8+PNF>PC]!=>*^Ks""S5q%Z#Qgbbk%tr#$/;da-$nTr(m=B.G3ldQdEfrYVV"%Dp#oj`6A4F2Z1CC,SEd%nl77i&!M>T(-DIFVd?L*<DLc=<Po90GdT$6HLe4^%?1(LqX!2=OZDqGu?#+a6l"]s@"ZO`W:);[QPf=Ud-X8O=kD=/c>8G']=0Z[uP)n6:6.*R=)r2ttf1;MPh(""_#X1;7Bf)X8:::KI%$p*QT7<n7aPA(c9H7Zrqd44)-RKZT\<IEC,ORfL44"@7RRT389@[Ao]=U"R?j(3DYG)+pG<ga&@@B=!'J60&[ghOGd6oR*!(<%cm%2]takFde%7GNW%%Q+L:>jJoF-OD]&U<Gn^XUe.Zq)S8]2L5f=n)>mkTWr`ZhM!?OJJ,jS>'<`m==H/hO2&VJRUfC,\nOt<2eMN(,%-)W5UTEoB20L;G$gE:<kWd,F>`<]H]!#oYCWPV`7B=lQj+u58sR4>42FPTqR8i<-h:8J:8Ysua/MK=Rc2Bl-1G)R)qC,(s:e#4&:%:<m!AMm"mo6ku@.L<kiH'lXE]WglBjefj28cCg%+.+;?hTSh7t=S/Skp4T3QZ_o#E*V8>e`E."I3-?]G_8tB1;h9%I[Rh@;&[A0A%D,-T./65_ndE.l8qa2N]e#).(3H$H,M;Vghh;kGkMQ!!W,;N<G1j/5M1::;:rm$m7NORdO;nY$?q,47.rpOs.gsmP/ad+t\5)h*N%=\80ZQ3tuF<+8:M(194qP+=';&Ql!_SLKg4&n+J.e7-#n3DXBEUuG.5$5imRcB8N$$.rQZP)AQ.,>E:g3ubcf.8jS@_,>9-<"qRY%1I!AJ#!aXT4Xq:00Q2mj'b::sC*uN*N*Bj12_*Gq&N=oKe79GXSJp$-<1Fg@h\!"GAlO.H9OK5;`P[5Vl+Eso)XP8L7$8;Hn#WId%q-hg?(0)W4gH$]3.Z,qOG"P^L!$Gb-I,b`[fprZh\]NQ#FK!S&IA]HOGJkDj%2Ic_iSDUP@ofdMEhR(a2+iR+W+sUOW(:c-m?B>J%#9m-<#F3A\?;<>U"WL&SH.I.I@>$f-,cCtZ+]bh2TFR9FLW+h52'b(/:n.%UT,:C_7^sfHC9[BZpeSMRLj/\oL!POrIbHf2(\qbm%RDYHi'FY:Y6oXD[Y./m)54&]g3RaQLDJ$2G2T*-Dl"RMNTG-R(<A'6PH"s#"8U3pEmj#hNL*#n04Op9<d[_Sc)=!XX'QN<@Z(5@&%Ee=?:4!e>_S[hLZ=tWQm)Jrc'VGe9'Q@'l;"f.m$8TP6rJ]r>`Ea#ltillEmcT^M`E`s=C$dNal?;$;+Nme)(3S];C3)1&P[,$o\%0QODE<NXA7Elp4b;5(8*LI55&NKiU_Oo$RZBP>Y&^8[<d!XXB3iuFslRH,'[86l+Cm/?7A)on)\$1A>m*oN;pdj),#kCY2)l2sUV%-:OB!%PtCaUX@U;,W*jPd#t=<HS9^HqdG!C\+f4Df[fX^6rp%C"cDXNRPg],YS20%Wm&Q*3;eCPOriQr]5T/l"uo&g1UL'?S#2Wh%kMo8[Kh;ZLeD,OW:CV3!^N95(D&cIHC`D(BDF%C]NGM4/8<tfW9iFbi1da"M8.^(O/-Y<+SPtP`>(k2oaYmt"q$JB]&P*gV`I4O2%g2_b.EYZCITm2].63Rc1)+6[8'W,[tHc@j1*XkbIH48S@E%C`@e"RE(hIrcsGo!sNPQD_T<P`=9_Rp'V_qMC__E\QAC4H++;en1N%Bs,X[&P<Y/M*7Yq0h$U=XWQ7tKOS(ALoL:+A!gGh+\[_u/P8Me7FcZO'_hZ,"ILM;2.aQD:hHs')SVGL1FYZ@BS3;FCDjcAf*E0[%Q""^QEfMsQ!W\+f1F&7']Z1X\$8+c'>:+Km*4cj8[9*il1dpj%.!+<E)A7[EJQiHp(abJU9+*>QA(]3rlT"dk;OT2$d\*FYE=1rp%lQ'9(@Hf"0%GG=1d\>+20*WsZF94)a8jT>nG;ibU=K(`^)6FU&7q+)oYYqo`Z"'&n`d=@h;Jc2kV?/X!-^BulAM>HTOT:k^`[PK)%8!ko:9#1ai`3!fHCQ]WNOO?I>E=7`R66K$`:g2S5`;laY^=&`)/j>X"=XIr7SeM^RN'O/%,5WWcXJqtY_D'((.cQq\qugMn2OEp[%UkSUWPtYA[UW#3g2SXYm.:O@;6m,a_,*[<7E2.]Q$o4GI$MF^uG1HqC9A(FZ)*XRWMaUI90PHG%+=Yt\RTE/W5TVa2W#"-W#>Gi2%T[a+KZTB"<h&r\b5)V6rH`pqAAqB&=C>u@2n7\UlS)?gnKsWff-8pe;)Z)3d#-@;Bh$bFB`'A4i/J?<\>(D_ZhHZ4rPsrh4Fg^Aj%V.'gA'qLlX&.Y9cek>PeKn8t4Xc]RFHN?L&C;bXtOM\8V<*4d71?sYo>n97/2^5[_`ZXB?8.S%E-jb^pbI'kJU^"flH03a+Oi/q6%!\&:5@PRHSU^=K^@FVr)1e:r[i^XXkjn%`3-uLD.XY)R(q&"MO\<=/r()<JP52$3)b0!BL[R$cW-TSD3HM%TRbJ^G.&_1PD`B+lm%WDb%>`2R90`^66R,j`Y_$4T8A8r^rIgEJ><C8TW+Ya=r\lAgsq'Y<rGqnGZ>iJaLHHuu`b7Tp9Q[[;_GO[O"7'GHM_@<8/P^r8ha%47#WlO_[Vl'EGgMr2c7/mGeWUed7>g&oq['ab#VQ81QpRh'9O'XXXkcC8DP>E5B]BP0KDp\HR\&Rl^7;CEurOONaLu>/ZO);[+c/%THt);1DtrcC3BUrZt'=uW!HL$V,e`jd=j=NTu=:!,sqg>O$P==.CEn.V28!+J-VC#2(q)U529)R+2mesAi!!r>.#JbP2_E-EgFMZ%o&4PNTWiB/!LYAP%)mun)eIP?DDhOfYmlm2k<T5aUhN%])DbJ1=FsHNAsb#G7GV[0/]%FJUeb5$0i;WC*eu[b0g2mSEDub*<^O/K%=,>b&Q'VQS'#i['Pj=1g'skO`(?fB#5m5+5G9rH7<4#2h/Zdf_P,1uk5cW2j'2e@Po04CX-..=.Kk?>'%IulEP9JPXd<MimPU]0,%9\<l95>CZW95'@nXcJ_\c1uo+Z2*>KA,r8K.cceI"qSLcjd$hB>OR)1_BA!&?r;$]e@@''JmT0D;Q,":$4UKG=i)el%$rN8XJMRD%?'q6RP7s[:a;tg*kJrlNQfDcT70@AS&T]C+Ohj9u*jeg<Lb+sd/MR/m9W_#FD6]=DUoV</N`M!r,L2N$,ap6D%^FZ^`TGN^_%7Sa%n$N?0CF^#(;5OCX`GgpsW8)a-Ch7&\6EMtG3,BH"Kmbamo7?m+hDpT&e/#l8f8Liu`>HSS"R(n.5ROfN(*96sb*hC9/^/$%bor=4%"+rQ?,Y3:rTE,T4d`kmOos*c`@af:j**4NpNh;SZ@'H+T;\3/A*t#RA$+9=\h7ADhOM;+r^n7=6SY-\.<(P$3SgGnlFrKq@C$j:U%&+k3&7u:.Ohq+-D^k3g:3+PW@*%46)(4PLVW&MX1QQ.A<,0E_T]$X3kDiE(pD0BA@3OH(S>oq*_LFlct&1iS2"[3^*Pt)JRA7mYl%OKEVp+Sq>]&\5KYd8EMHJ4R1#Eb6T`0,AnC=YX`@8EgAaQ3FgdYKrM2r08J7,"[I.+;95FPO/^73<j^o`eu?*brg9,<k=C6m)G[g%"B\2#83t`C6ab8RgU`?n7A.Ak'k96;fJ"ts>o/ih;V!+r,po"9rXPn[6T;8JEid019,;84_H8*!P*-&A"_=N=6d+.MMJabJ>kSj;%S`LE=,bJA.o3=dbTc@D?-`&k^\D/EcK[)Fq92p^FE%\]TER>mP[:k,XLfN<!23_kZK'==S!J'&H@/stL&HUYe>BmRfR"/$M\VteC%]aqrrj]4/d2'rO[l;SjtA\pc;\$VKX`g<BoFtLNQE1gme..oq3Aepj(4>8orLfoQ_.r=/lA=Sq8r`mf8bm[3M!dQ^Jlf;Y]Ji,?f%,$Gl3OVriZ(-9)p1l0_?piK:h&VLNq#q8+IF2.dWT^mdPWk#A7h=OB6i8fnYPfcWcJZ8CnUi*NaPLMV?(=AjSXjZ0gK)nuH(,Vi.%'eU395]3$"WmS/o\I,^@KiFdUJZhU;;DCHK-1!E\kX,=q#A'u-A3:g+ZPQe3:3iFFCH"hE\Qk383nBuk4:k\`!QJUdC5hMI4Lb*b%9JPA]jYISU4m*VWQ/Uu8'S;#pNL8]"S2jhVJ59_.G[f3oObCUB7A+K3(*JoG2%nEoArIP4CKP4,<h^BD'CbQ*!V+g!Z8'?'2([iW%L4u9h&/_Jb?H>Xq=tAD[1b=Am1`4&388JDZQATL91bpdeT;n)L12RD=*4(>\k.K&]gPGWiP#P'EZ88<bKSB_P#K^OfTpJ+2F%X7r%[%pIgc`KT/B%"d$TXj%U+TeU+Aa3g[eieWcBK3jAW@fBR)UqWX5\,.7h68T"5gBM<P^1FXG"tIC8Nk4$9p[%%CQU/:j<9A]:`):Z%UCorqIja&M9sCHT>$6$GFCAob4/Gbp\?o(Y#@_6&R>e8".GN+3,W(3?'@4N`@I><1^Td6$,(4$*7#<K.1"JBb\OK'3CedAfdLCp*%.P9/M/`M:Q`:)A!LY?rW"EPN8JL`PAl)H?Q/5/]001]'%@!!^b6&[<*8;g2W\=4\dH#Q`=aFZoS-DFWt6aKu7IDsL-.9k.NZ&mk=%GU<WXe;l"ogR<r005$aEa(U]&F$J&Vn.$;oa5AphAh,Zi0:"=tYo!cQ`96/R9Q=s/]g?0^W?4)k$`bOkM:PYRH4i[T[=S60K(8DA%>!q@cr$n1&%Z@-:l1)EN+Ghp39$YX[3&2UA6L#gkQ]^Q\#1jJ\1:3S8=uA[-<`b_@5j,%J*W_J!&Sd5_Fjo$4j)fK6[>FCiVF=re%j@!cW($/+E*cHSNcL%bRZ!`h^OcXLL91XricBYs^V!:L(DChYO`o6NCV(VFHF5-K<1:=TkdT/+u#Xb4-Y\6TJ1e&+EGd1.>+\AM@%Hm'EodDER%^8-s:5^lS`Ae9;4M#pijXAgAlbZ:73M<:%>lPP^//4>`Ega][g8^+jM'.#V<J@0O.(!OcJ<"P69QV)C@ZUN2N<&`,s%X<&nc-C!.S/kM7C+a!daOGnh0R5?B*39'($-olDOXJ,m0d/>2R0ZGb9\Q2r>Wl;Ce$nE+#<G%+tW"J"plXsTYLtmh*PF)A(nh-+'%4pX?;rdeU1#c8:()UWCQ=%5f5MeS58^nM6>/P!n`81H"4Zl3e':tqD$3rl[K[<Q1%5?%l%er/'bLDG7qOm9f8Q`@]T`.0Z%J<M*#%M7QO,%2B$[5-C0h!_/>.#YaDRC+kOo4W!UEXWoUFcl-RdFkS92`_&S[TLH3X\M^`-AUhRmB`^"U*SDu,:dga5_14bR_@MEHR*1hn%Rg)HtOs>L:K^Kq8E"GZB(L*N"^l9aO!K;O;)efF3XfGj@7![6hRkh%KVFO3T?-3#<19CukjXW.9.'54$T+m2_`8Vo&0mH%.2uPt`%'HRr3/e;Gh8n5^#"Cmqh!@($h79C?/;k[,#LN%CuG!/]o>81ia8;(\G6NNB:?koY2$G@T[>W@oo)T<*c%0`pD/bD95L!bcKCl7=:%IQfiU60J\(P(CX=L\`q:qSqfc\+?QS7#X9^)$*)CmkfoDH\kKo'Z)oR-%p[L&.>6g_KI/9O-CY!`K$RR9*-9/+jg9]ZqA+CHN7PF%XGS''MF^o1]%Q(XHQd]m[Q.TRf?NA\7o['-HUJ8&0tWigPR)3LneQ3plN*$@<Zr!3?Sm!9h5/4a:=RKGHu[^?M3%c@M]r'c^.j:)%1-l;4_MdQE"AuL$TfutN-p[m=K#j=>kf""mnX\'oK1dm$V>),,ENlX-8??D^!suA)99H/;+0F=hYSEI@Zq-_ue5nqh&fNaV.5o>q%S]D6a>%nH,V%C+d(+Q/n,pMoU70Bb<QK:A&C_DWKRPsf6e8[rKG:kE_]P8A.c.Y[/'[h;9]FYGkm%OW;dk2@KO,/P'1qp[*B$aWk%huM=t`jji(po8-20F9=6PdhAE!JO!Hnp"9T\XP&g4j\]k[TF,l.*rUe&`Ha#fSEI$&1K(Al>jfrS80r'%*k8$'hB0QARX:M5uD+"%$YikAOW4J8MV*8CW?HmPk!>ZmD+'S8WQR.CJMNO,.3sr$:1RBo7'2qj;H:BVU@'@fPXA++b!6P&Jr^,2591DJgS2VYW(\d*1p\n\%'>s/_qOYidF:.Rp7f&:H#I/Yk&;sPS[LHjpjR<G>67kW3`T`SK\ItiB$8&6Hb@o.7W@oMcQBr4?GJPSUI^#W0'-eGV/GO`m&Ypmn%(`fM\-HI#6%J#?BV'*%$On-`[BB!#`$m3/:5q2j8r$59i!)b7?d\1nk8=QYhBHrhP!ujCb/KPk:6jqIuMN)(\&^+V"*5SJ/>`PSU%3FWT5,1;dUR8sHUnMNaDWG[thb4a7PM/b(CRin!oBDI^jF!FbFZN2[03o5cm,s9Xf,FUO$lA5X7,mBA7cU]FfJ;t!HU#]`QRQcdP%'e-rHP(N(i^(<$a2j33'G_F*K2NN`Tc2`pXEGgq3/$"9sQVqQ%(UCQ(;U>W3Rf$jpQDJJQ_(UNm&31XflY#ClC-b;,*M*'S<f3mo%Y.;=J*N/S8'*Jf>7FJZl@c=b/Q-!-!9MEAam8u"&mRRcp!Ge)Tc%sp4?AX5h(nQR2[R<fGa.%gGLb]jr/P3&%Jo^A6as*4P,2Xj@%^aG81;FI+1a0SWRE@_\i]TgX&R#f<MRW'mK4!p[r_]d"T4e>XX>G)O"W'F7S!?cnhD/p3sD\;/KW_!^h&+WnX.Sm$0G-FUo,7[lb%<`gdsZOdRVg<bUBIi8e/='I-9I<Qm!3ZuGqQS^RL7O_2T&WL\)>`40UEi'%BU/gMLAYLeTBMmipc=^SB3d!DK,E,#_aq=j[#rNr`%&pQ.*b^`?[&fc/:9Im'H<Q_R9JqiAJ90?1NHXjF-+o%2pRcsjm0]ob[[1)N3eAfj;+1A\+VM]ePZV]5D`3]uSPS15><MgBEC96WP%b%/>g+Qt(!/D-.S/94++=k7c_$&ng&=VNM7PJF5,lO6+B<V1?&1sAk/7!.u1<,H9`Ch+smLiuoLTfc"QBWOH,jdDYg"j`:/_bl^K%#*JI?alShHRf^')J@JD1QF\-\gb(;&.1l@g/&e2NU9udUq;?%daW\tU*DiPT-kU7%%WY\X'c!9T_%sCs:#dCB?Fgf&8=fQM\_sb9%Nm>l4@"GlUZ=_^@1UYq5/1VK"V8FZR:]j)#YU1WaSg'&OQN%TX3h<<#4a'`I*E>3>fPW:j0G$#jDIts_:[Ho%1/$k)PK_-6kj@LG%j<&'#+?X1C0fgsdJ/h`<[2pJVVCA0<)!RH#+,C:U:7C5,aC7>S(<Di,1K09r6gQfb;M<#hnQi5)KlScH5nkb:7Q-$e&5s5"_6e=9%!+\f;r&**)4B="L>htfJ:08er#uTP9aD6dc52R?WW?:nIOs9'mBJ;Aa5gu1cEgLN-]!A3;+H"i//K2+&\2PXH/2d&bE&!`d+W&'`%hg8OQ-D<cLjhdmbl!Y4Y"N1hec@lI?8rK+_$c#hX-W8LrIGV>n+:U#t[pDpiYWQt76jj,;+B#2YX>+P=LLh)6?2.Za=e4?f>U`EW%IPkSTi3oE^*.^.Q)8]W5_'*me%/@ru]lKK">64>gc]L>n=IrN5J8hL+\4NVE8J;`,;q*#T4&*\u7[nF,;k'"=m36#deKu'R%0J&J%7$e"hQaqQh^76CQfb(1-#3bB'cJLl!Mmb[?78.H0M7k^1Frs@?*7BZ]h1]h/:i+>!8OJF!gs!,P9bOMWMa`nFcE]EFQ8O\UBZ,>*%FAq!/B[u-bpVmt<2rh01SBXADL<AJ]WR4<8BWu,J=J1@Ngf`;QBi7#I1DW0%+-]Q7M:EOh"4k4dfXt@h4NZU5;(dJd>[LGa6;Mo0%"+*UH;_!K$UmMLZhL)ZJGqsJ0WQMA4j@>s;;quAh_,s7Zau)57Td=5<V+tD)2ZtjV,'dY"S.dCjU,3C=Xm1(=X9_n$%$[c.')bEQ%,%C2T`:+TW=X[X=Uq(r9>a<_kZsl1I6_l".C^7/GV1s3"k")HU@60[((h%([1K64L%I7+GDYmD5^N+CaKi3[tJm^-gRT@lkDdnkX%$dH>>"r>r&X^3M]9!V949[Z<p8Nl1V1a]RP$&3%qg2KB:7Yh$te+4dDW8rpf:3%W)jeQB@qMQX5e<XTmA1Srfqi(Hj:6=q4Q="B.%Tb^VCl\`)F2d>N[AqE'\JYB"hC_>uFW5&C:e4gs<I`S1M=9]HYR%=<T3MXc"Yq=LFJ0_O,#$Qa0$*:A#3TFME`:iSOL:)HiSK`Jr%K+r*B->N+&[5(W&b;><>QH:8u.%OJ"OK=XR/[e(o",Z!6<0]gF)koDX:M##&UBJf-8.-_BVi+Oaikj;`PefaHCS_">;Vqg$CQ]4A%KOPEd2!-uE#1>nl4jjK9BqfUGW>,TT*>gbn$sZ7u`YK#9Q7Q_9S?f4N2)uAI2^FS(H0f5h4#mV]_euZ"rA<Wgb3$hHNFWSVZm0$t%Be%spDB*KjPidDWZG[NYKEtuuK5I98^DPH5kO)#@m#:GOQs>s2Lc&t,/YPW;d$?djo17*J@W7Kd5qJ;Z>g,m)+)!07L+J:W(69'4%:qX<C\A9JmXd"W[E@V0kicFW-S/iFIGiFC6F?>$o0kCX^j9%+EV$on&=AdY:SH;C_.:c)Nn?UDDIrPb5(n')H@j2Sa?(`pVYX9;9%8$(RW+_<]<En`?)BND8h$jE$JR#m4A85QsQ8Du\VOr"B^$]SWV62D>>]qIVH@t5E[a[as/2I%Ym;+QFFClB<tNt93"/K,#'!^`ls%iiJ065j@Bq14G-$cWFDMs"[N5:;D[Y'g#31FKq9@(fZeT;T,MfN`1Wh-$AF:7,@78(7&SA,f;2I2:jY8P@8S>*R\=ASB!BE8Z5Q$%J[_WRm3IQO=#25$$Nm5Af-Am>Uk0I@9:A`*,-,7W2FK/5O_JHAjXSB(kIT'(YgXjP7E0_`BQ5*1>UUQ`'JeYL@5K7]-^hR%OmgAQ%P!kM_fL\KC769DHR"c%]UUsDupual?cXNr@RehS9VEF$BN=F0%"psC[XFq?<`>K%Md8#p^Mqgq<@<3RQ3$\)91AK=ALFs&URgmL5%Nci</n/ld!,2^e[4L%-_V85\]$cuf=hMOB3.mM>cIp$/'8`IPKCA'i)77&/$,u>U6V7&o#&fufoI0f\1CtrSo<Ffm68q7i?dML2n%!k>nSMf$]Q'[Eeh;Jr>)16KT/jI-Mq>*4\Zh8@;s&_kA04p9k#(*o4\FKpMGHGDL\@pG]bcS\*11#T!k_r)hqLrU.%UmEPnf6sOl%>mu:JWYLqVE4E.)9ThVbERR4`>7cF?<E;G*SF#H<Z)(hmauhlX/Xta(RKZ2uXq9e0?i_;rIB5!Y(JE\tWKLq)1hN_0Gj'tA,8^Ii%/a=fX,SS2CABl]/\OWISSp/+mF?jdOOV>9r26e]8&@ki0EitQZ;rB_>cWOeD7HH,d$k0:*"tY\:7BVLk,(7C;X-Ma+]%,sSV,L#:%4.ee]Ar\3O*8E?iOQ9UEE1gMQR='9gV/9]k%*q^"C1o0W)*#QD1XRV5_RYhDBgk^<"@sPA1*/2F<A:1@F#c#rZZ'P,F&4FT!0qP*%SWshm-!l6ue1e=/9;di`&8Mi0<?bJ*%5h81jZ#MPPX+5%mf3eQOeD/B.c_RN7*Y#l2DP]?N3MY(n/&=[*,'+2#sG,aCq4A=fodYM%N$3>6b9hgu7`.VO0WFAsQH[RsWMXYhp6eKMWCr%E1^^uRI1j2*+O1t@3uU9H+12k];_k<th&N:=F/F6)DU)L6RFEqFf(6u8P,'su%7M<PME;,,6K(dlJ3@\4(dFi.7p-"c+FZrqLQJ)t.o#Cb&@qQ#2_[JDIM(P]/`&4kJe?#9=apZr.;KLi<oiC!P/6pupdAp\-bRN(#%=I^f'%sYt$@gP#7M/L^=5@lJ#6:s2G:W_EL;l(<M&SNm\[\Wb>R;U>,M_&s_P)%"W#+[G"RTV)4Fiu@H9p4LV/Y.h(T1:J/3ba,X%_T_S4@?eTi*u66Ad'lgi)87Xc*u-Sg3d7Al+r[2W3AJW4oc]WP?>:W^Zr$c5ZqqqbCf082RVPHgE\.u')Qi;q#`p*:s&;h:[V`4e%=:qL`2:>AhY`G^n,1Te6d%?H"?tW(I4A$TMdmPD'6Se*J?_l71)X<hk+P$TLCo-&X!'T^dH!k&6M2%)Q8meoATOas.;8dQA".*k,%$X(t@<_be]E];3P/Z=O#,C?+Tb=j\f=PQKE"LKr-2Gdp4i]dS681>X<6r`2S.9RQ$.n2@FMpEf\p"k^\",A>8[:URWF6GQVWod&4%M?p\O,`Ri88mI:>Z&u$'PrVj-7*#]9ek'CJ8GIm5?*MVamBfIeBOU^6XIur7g6ofY7fkhT:UEq[8+Ai6qqt/f.&&"9m%/pNd)$rV%\!**rH]-<n:mKsRQ)*M('.4IN.m9917"7j4."^+X(Q((l$eoLcH([XfB":09K%r,DFC'WnbEH)K/R%A%Tt4Zj>@N=t,h_49o.[n;%6u;k82T'*!FWeh`WTGQnOO55.&48"4+D\b7Aq(VSFI1IXd;h@Sje4F=W"-I<;%d&g6.ht\+Z)dMDqo=t1362+MRi4[OE,.V?.W70%S2t*_6CLJ=8^Q&99'9?IRa4"A&/1_b)&ih!K^<slboq`b:>_=jHd]`%F#WX)R.@?N&kZ&4+D49U1&eTa,gHS:CS`=;b1'eEO2H2]%ZqrG&St&.`#56ABmqhQK@3J:=(`f:'aAT5(rb_W1@a1Q%1R)QEbqTZM?4d`UC4(TG)sh6+nA^o18->7a0Si&d.7[KM_FiEQ@_'S>%/`c$7,)bZ<;Ii*BTb'97XcqaEB;d]EKfLcQe/IT,O9.bQn(KsZnUpaA0_dF>$mD2N$q,7a0,e'-4Go@j)\G)3C=T.c,sZ9e&VPLk%%G7J^68Yd^BiqX+'gladK=0'E`1VW_JjUjL,qPPP/7+D26g/J%OBH8(!H^:/S>;R6a&lnlWjD>cF-WMHV_u9:E@0-h^et$L\VRn8%eZ#B&eE@di#K7Up-6G%P=bj;$(;h4K-5YPl;I:)Ak_P9V0oBU!5V#GF7KQfiW=XOaac9.^@2[b*KAikAYbmaCaB23BGUmV:5A-*\%+q*(E6lH>_i)a`CD/!UKEF"F$X`ZAdmU-JNeX=foZ%f'[`>S?#dVEDR9Z5Nq$[eU]5r"SA%'<6>VJ4NcXU-;X6,qmjjo0+7*LKgB%%3JJI0WpfgaV$G0A>BKQ!Q7(NahX4&DFB.g1BITtKXSp['"+WVMb)X1&d71ndPRCdq&5s0%,?Gu!*fkB8eP5DYg*B*8Auen0+$l%%5/@?H(Db\>cEt_KFpD_Y5F.^eGtU2M6=o.#^+;o&KdW3<"n=-rWsE"!I=rh5ZR!J)J8hj=$MM<c$WADtp7rV5AZ-oD?d,F/,b'He%X/+6N/C#e<;7"-bEb9(C\k!;%i7(t>k=c6r`3e-iLUfj7ig)FLLTGfUUZ`5(*jj9r'27K&Z2FdTK+UXAmh,us&r'unR7X81(;Ri"%A146=cib@=PS>^#"Sun&<>K>B!>6BL]ZEYTO'$'%%*0=.eDVmI'c9XKH*1rp3R_GDcq=6H`dF-j6ERQ16TE.!iY=AnHP0WtR&Yl+%8(tcNhaFMfd@om]Z=)2#JRmPl6PkSQip5+A`JWJc/hbp-@H*j*8JI"m+VFt`Ar3<FU(.jmf#HtrW3K39j,obu:tX$MR4q6j/UZ8C%ZO,tl6&K/:@d\NHa%*+K8d_D7,02RIfT%Mj0:Wu,,uOsud`iV9aXE<MBkNf+@N%s_5%$S9$7[H;^Olb`D#8cYGD+C+P9H)J_a6,!%(kmL=&-?rU=AQe%,j.Dco0gsjMQrM:)bO"'B_Ye<.Mim$%74MY9V`.)rBc[?m+(CJXOktmH;p8Mlc56[-;5T!)FP5,PGkaQOT`%(%-W.2r(TT!uTF.T_+:!$Md1\%X(bG(dM64[`2[^8b,K]Fg!!SD#Pq1gH/^=%seIW2JDko*-RPeuJ#SNsZ`9KQp0,(Gj6'8s]*0e#W%63:m"TdGDMbX\[Nia[+5nO:h3R8r'6FJm2I9"MJ>GpmlGDHm7k,]J12!`LS^#&32Cb@QU4plT?_+L'G66pk#]r^bO;aqHas''2X+%\$Q4;b[l_:Bd=?J1GT',69-kY,f_noP%it]&sF0GS7EP<_c.pC`79j4BtX[3;:6i>.]HX?:e<G8+L49?'BEU]OV;fTRin@VZ?/Nm%N7<AOM%N:?["N:HHqR."Ao)4r&s(5c;3>N-1+.=4HX6q:0^7=Y/'S4%`Dti!);rGYc&fPBHj=h,U5)<tH>Jj@:pEQ/aD<"tShde1%`QCLi+!ZTK3(>)6;W;k-!2HnoPUaO+@=46&a'8_&6HpJ.HR!k\[#gJ>%:F?+CEBtg9o2/.V+$T0@juGQJCiqL\KW[<$]X+;K6*^=%It9(3JIQ^UjGKrOX3Z?nQ<8,Vd)A5+/[7?Hg'E,QAdW!A%@Z\3RV7rqSI_FjoKn66ED[*K-SqgZ'FJ!-f-48r#s`TdLK<%edJQU6%PsUK/6I&Hrers'B=G41!BsO=U$r%lZTFfSa9$,.$I?ee"X>*d+J-<J3[r>ajB!L:H]OY962>*?V=D<oqatWLOC8Eg-[j5"(-IaM#%6Bqp0l:X&NejiTk:i(`dT%Gk0-B^BB5U,3qciaIPC8=1`'5JHY>*RMB=V=\Fb1%j9cJ9,V/>?7^+Q=k>`"pGpaF0_%9"SuD3iUTT%@+R!;r3YNrd&rj/QFbQX7nXuXkEu_JEa]n\IL@Fu>+FH3U!lbQ$Jt'6K/&d_O-!"4-@N!9?ALl,1Do?dr\k"s"Vu`\#^/S$MkCA>%QCN5^,H.uUlr>V)/Qib7id_U`O\cQTX&2T#ERuO@#R;s@G>+IM([`CX'X1j$M;T:`E%L9=1I)5k-=YA!s3RKjkaTh]2-?doN$rXd%Z$MKt@?/FUZl@YT`ETK8JT*+m7h_5'W%-?-`k@):2(>EG^f"r?*TEpHlU6Y]-d^j0%9/i+2=Oh+kO=R2bh6uPTbtYs/S]rWJ.WU/%Tg`$Sp-uE>&5NZa(0L?V+Te5Kmk@dd`_\oGL"PXl"_P%%`6=CnX<LW;l@HHORDtKV^>2s\CFmCucl>Q&IO]6#2"CSURclfab0G$5%6QC<q-];!&.q/t6.3m0F?!,W(Zm)H./TemsOdJbn6C:$KTG]96Pm6YMNt^GTW<GA.cTLi'jNLj`*,*<g(o`:Ifo./P;i4kNIKU/2%;KF[.%45bFW8g^G<34F``=u@kT\Ja+HS71tZtO2'om-%NXOKn">sX+4aJ<LtiEhBnPOF[>F_E3MBN=&H$B<dQ)i?(+ARRcQ>iC"&%d@s7(fb*N]=?$d!pDbQZggKB(Uc:.2.HJh]2<q#;T:jsq<4058D1Q=Hl:2+)\Wl<LV5?E1M;jqYF+IIHJO6bi>b_%F+]D-<V`8Hs%WtEN!TE;.S\g@K]JanP8&-8)_(=9"M?Nso7bgjs\o2Y&kOD/\`b<:MVg(,M]MjTi$K+!be>=o2Z+T?tJ`I*Jt1!bt^?a:?U`1rT[%ctjll&N,kZ#,tn.YSS7Ek'Bc(7I$PQI&P0.UAC;UE%TM]ON&7e@e2:t;S6*Y(/dj./"T)\>"!i#MFMa/@=c7l'@o7N=!bLDP<;'r%aMfud,`rn4o0f_E_#-G,5@KWbZN6Otqa0Qb1S$SX0F*mp@11U9ZC0-CO0Mt*(dIk'ko/Vp*nKAMa^iN4;:jm&=Bh`3n8\\>0i*dO%Kb:)O7[DGe(,#05YSasD8R=a_R1MJjc#t8IM)O(lCdP/3RA*iM:_RZh"JD1h,sYj#(g0_a\=CZqda-rk+:Qjm\O&D(@`j-NiM*b'%F,clo\^97U;TJ#;k>GUl2]X5MQY-m[gltK,NTH>^>"U!Mi,p9dl#X[&ga6X!1ecF_AW^8\,S;9Q#[>lHS-R&TK/k.^]iUg1,#rmj%M2ft6#`M)(.EB,m5/%="<3'plac[fe`tYTA\#?ZV2!d+WCeGjPJ76>N`kZq2@DdmA3V#%#k_YkJ-Xk&lH<C]1%E?"b><1>4EsZRQ%1"]%./7R#K5f'mL;@\;<4W7gTI0MT-O+_8I#jb*_(cqdW)CSs?!]Eg^,mf:&3*\Ri[-L&9SX&oX;;D\fD")5mK4kZNp,+>8(9oD&%%Xi35AfUV-;+H9a?RHb.[K+$Z)O5Z?BGjL!]`rJ<fGC0+%8ILW.n@9J@Ok]Z2O6b+";[rfoIh\GR*l$TIRuP#k]LY+X9ZF.OK6`r%eZR0lJ40<P[(J0d5EU16bHt'ik@heLUd3C=DSU%B/O[Q%n!YQRd\=Q`UL%+<)sj#CAIGGP2O.i@]#H%j,&KTsWQ+'PE3@[.#V(_B%L=Jkqj=040S%`.$"HN=NpMU[&OR#T&n;_LZ8^?8ri>NGI@RZAg6-WEYEHl9#b^m!qSP$l_4&q^NWs+fXqeC6=>URMmgc@B5Mm9CH%=I>Gd0Z*]QJoE.a%u4L]\sU!T'l7`WAB2+''1JGd=DQE=$'^TJ1J#3E@4%:m>+;h4^pM*65r:Jg>*iD!d"p8L5b/[8er6/V'ig6C%i6l2<Hsnum9.^^f!4+:5PqC"]#5TKA%@&@->b_ZC8Ch>q\S)I`c'0t9_ZmDYGmI<>I#t`MNCZH/''smO7T9ImUP1+\"d!k?]!DKA%UP38dN+:*:M&.ak;O`Si=,o03bqq?r`u;Q1k19;ECS^I=8d6't.FQdlQr0qfh*MaG4c6YS1,W<FdqB>7<j#!(^_/[kN&=d[%q<e@%*t4<T-Y87Up)2F(E0KBp#j]q79I(#`M&;35nH%3C/3J6$WG9(u=-nW[Vg7WD1g6K'($Uhqb/i+X(gb5f=//qT\')dn/hQV1,*9uQ%WTcUS\hm`q6*#pnp(5BJ7QrH6h`e=aLgY,KN*)X:VID!Zg*KAg_!4lD0GR\!bQ`!']P:h4Uh577X%pn\B=-r'Z*00gN<Z.&3p\-)%0TmQZXD4fqBrGdd1c!e0,?<2=&SbW"/>noI8e"].K0*?e5,K5^+H@>7<$U<OaPnNb+%G3gF7C9G)BL-#Y8X/s;*0n-<%!5b=t^Ge%iKHf!M_2-O)*eq)IX;D(1unj02_u#K`Inbu;q(!#ag>N%0/I!LX_?A:fZqS=;)C0.LQW"?A85dn6sKOrl6pGrK;=<X/nGMcI6nZ*%'.OcE#)i@TC*^M-iX=k/TUmj!hiQ>igF4=p+uKZSTpVfN"/2JFdNgPJ,;jD3O/']9LNlpr;<)QLhAKjm7JVOWO[T_W#KM]Z1)Ho(%LESrn<YT]X6k(N%3,k-MSVZ:c.+Ib"0eC7u:kNf5+_S`-4He$dL8(.c=P<eS;h]EUr\PNE;jH3F1e;5l8"W8,6E6,["ui3U>U>=l%h)'B?C!1I;jQY1\Ns;1N;i0I9i(g1NG07&<i*'b#O!^M;qJW5Kop1!L6k7'^PrXikT=ASL3DG<J.<")UVt!;leF9>$MdYh\iMP'l%I8iCI)N?KU'fM&+:lu/CGXD>LWpE"""H5`@T4U"pKu+d@)F,Hs+F',b3+PHq.qC[q^oT8fPL+:1*b%18\/-A`_t+UYZ7A@HD!S.J%Q\N\Slrh5!-Q9efkgH`p`dP@=ClotIQUX,8a[fC>1^f7WP^u1p8#6um1U;*J<VIJ7)J@$0'pftr&M>T@6D\,Vad>8g9^12=Gs.r[%P2IS&qD5,,j\-R@3g8:?$U![t0ONNLE,QU#MLf2N!QTsr0PG.JgmFoI9KKNP4@)ODlC_?(8SbnO"-U*_>fVs:eB>ISO]H.(6]hkW%^buU8BN3q76(2Oi-Jt6*gOqFb-,Ns9)&)PkqY99+L1a'd&peXBS>ui8?)f,\JK8S^n:ltcetq=pj%i-$p^;>BOkpQec(gM=+pNKq%JlM]BJOZ\kc7u(M8IBBtdB:;57_;+l7[IkS0Ffq!K43Unn/4r)E_!*$lsS486c4e)D2*q.>W/LBU2;=TT]hQqp7u>kB^Cm!8nOIS%J4<'56G!e->X:]Y";<BVJL"tad/anqj'iT6*K[kR:_2YUhh%1hiPc.]#%^Gn=<A4dXWu;H$PMlm=`$XG,8tm^VaP$I:%s<,U.Zu9%&o!"j6RtFW>=:k(dj?aiFGNF:[DoFZC69&[4;"1s%<Y2]G".8taDn]aKpWU.F)eJ^JEW@_98S*2Ob-XLC2BVT(.`9;!Za="`di\/%UV&_`;9"?FfTHLa%h4L(&TU=!$lqk'HT!Q7(u,`Bl#ECA.kkU<kX^X-3[us)X?NNQ^Yr?%h_ul=SFW'O&2=#?<=>*gKSE5M_32r5%@FfWGI:[jL&[#9a>MqfZ7a$3G"9]Bl%0t-ZUmdZD%j8M1c5RUBXI2S="cXb:6h"7*Z!%&7"c^S*Aj@:A)GdQa-n]_+=SF"U37)ZE%P/8p"/ssnY5U62cU<4V*aGsXXN8^<n#\$k`#W+IVZ.G?\,/EE;Y/,lY2iS/q:.r!Z)[#qi:2S-37$-O[GmJ(4ZBL%Q".EY</G<ol%BZ:-0o&#3fA#@Z_i#pB+::Q5eJ]?m8HL4(mfuR!:@l_a-NY2SJ%[gRj7Z.gk%'`]ec[&opLgjdXoC#"k_a217=4a-U5U5VM11[!/%EZ'BA8SWie5SN9&a:)WF1P/M4+j,<^XG<2_4p.7UUsp4`RNEs()?_ml<Tn,h&^Uq_Z'5JSH4cWuXuHP@&)dZa&^Y3&AR^FFAn5Y<%PR[_R\/W6qq?Ub(Z-1Rk#j@AShRmY9ckr"1/E7tJ)9/b'%'E2Tm1#'U/]8k[?T2Qr>SaISTFl)VORZueBZ:2h5N<EMd449Y,="''%N4)_45YK<=Za2aq1f%XWM%QCJLK$)31g4Qp>9H2+;n640^]Z@"dbJ[BBLX+!f@^6kZUh7D,MCegC*bQS,s]?hOXB#g!?*;k3,SH:%-2'l<hG@i^/rrfmd@X(nBfYs0W=e9QrJ\o>"$`-+I8o;le'LRZYG%T9$*H5qk\&uTR!"tar$]]/B^J6f=rgg*9uDC6-'UZ>j$"81%5i6Y4k9;h:YQoSG_/6G1'/EdjroAUU3/M.qk<6^^7p!F`SnSOBI]hY$=f\"t*Zt.#r^MI/.@qr8ZpN5R\b7/H202p?$=5/k:&NF2%blZS`ll`dA<'Je5lPY[U*AZ,#/gGOI+[+jlP!mcLSjS5V"HnnD[:G50C8>KF7FXui8C,.qZ\kJ.>=O32+kI?1#XAY0lTXPNXch7J%Uh@+Ir2$3%2FJJGj[d^6AI=T_Sp>t,ELjAKdZ%8H]`lh?bfl6/Br#Ag0h<M%m<Fc$XMIU@oZXZK-Ft&Y)7^#nD^.F:rCA93LO'F^%Ze_=H=YlO:G=+MLMa=*24k)9O8/rmYQN(4Mr=/GD('=>[e2*jp)2_h#B3#5r0$[SF=Ig_6d:YU8*%E2@PkE8\,^6]$Wo30^=b&Y6%U#EGu@*]IhWlHEj#(@oACj)mm1lAl<XCjG%)S>,!87_)hm$Um6M7QX<ZW-*9,TK9e4KpLS$EeTWBC:\RPbdjDaR>+RK?k7u<6L[_%d%7)AY\_NcNmfOZTfo/:;!C12R70l<")kPZdJoL3/A'im8mqG$B.;t5S;>UbBt'7$VmL+)<=I4?B[7+/(2/TbSf+sgZU/ZXCm"8V%iL\_kW1R'`GI_7s45)K/an.fip+.rfTk'"[Bs8-jX.qgNFF0Z<1l_3&KohdNj#uFfV1P^DhQn%S1tf2A'7r(d<k>WCKG.YKN;"mC%NE":F`d82$BbJBJ42Zll4k#cb?_`[/7Q3b%1Yae:5H5K:Z\l/URAiC<)&n-[:M/-qYksP^:XYg@=l]#AC!U8Z/[L3*N+#3JN2&Ok%Bkl^pLA&hb.2%V72.<%?Y-^ZFVA:h-,s9n&ke[I]p<4:5@ZC)/;ZCr&"3=ipC7k2.kFW,b&n_6t(6TJEl5]kS/84G"T%V7q<_@_Y%%2eWsB[:AN_R;^V7Ot/eNqU[4E<n&]=^(%Vnn?@Z,oMf)p'dQ=URqtg$pU?5V=Rg8F?u(RColetSQLp4$q\M3!$Cs*a6&<17c9ft%eL9cE9.W<J@m-SA:^\#i(Gl]K@AN';Bd13\DP*o?`GqJ*P<sFlVT>S;b&aF[X<$@>TX6s9hR$^b68hm`TCGTME`"`S7;b(:76J0d%+7\,C.cS!pX?r/GRfR5d.]XWL3D\0\mZ(0n\`5c`"s<<h1^`&![t8ZjG6U3^Q;N_19ZD5AZ(5<MQ4,H94/5)B$BOP4e$u1mft">k%*<SA>JIZpsl^V1Y/AjLNe06aMQ0Jc7#mHJ&FXGEn&MkB`*udQ2$5\^b<(`lTF@I3PM?\/lK9]oD-447d+eKe#3=hR'3Vk%CX`<E8%c=gU)Se#lHBoQ8G`c?eCPR)&73Ti;=)jE-TBplh:Bna^2i2qR#62tI"JBr4IUQVhFON2&:pf*,lh&lnU+6&fYT!&Q8(hKO5Q]_n"%^tL.q1Q%Abg_AZTDmsQ?Q/A+t7WeahbTb>Dg!H3E9COf`1EM>)2Ena@cNO&Wk[qJ;c@-usUOda&#AuFDS`;UaG;.,XCpSU/7r<F'%G7E8rRkMkpbt]2PbiW/_^)XF=f.mDf`/G*,MK0fk>\"`hmuAm.flON4`:>XA_Lj]R]Wu?Uc"Q#:C96R7@RtlG1E%]f%+U:F#Po*m%e-m2%Uk3lbAn7'$OZ-#kp<</Y.Akesm8KIC7YN[Oi0%dX4_ALFAf:.Oc)!.WN6mN3V:Jt]U9okoO30mX1Kn?KA&^IIhkXl.A9(VG%KKkOEN(+t@)PJ$#N#-JeAfei?1k]JBUggA_6?B-E,6qo%(.ZMeH[OteK9H4BHtGPWhllR<RE&YO:YB<@5_imZNR,g:I^8:!ccco&%BJjAABBIfV[^#Ck3@ZF,NR,faZ!hs+B%DC;*f/3*-oB=<q914/U?rogPg<&#+:VL<T:)h@n5MTXQjpHB]<#VK#>.mra(M:&MIAik%B?$:g4"-^=\4$l>+4#n;CJM1pR@DI'iL+7XCR'Rm4r[Yh?c+\+Ko_iej(0PaeHJ'VB_3$pB1@d^&/_",RA5HUionVMV*q7"SJf=?%+AG=<L5r0Gb9!4b;.a,#!f!VlC^AZ:[-Sj+cKqqgSXC4<kl`\$1Kl%rbbm7\o"Y^Jd@!?WZU7:jPqq;(Whk79l-(!L)OI.>B#`t)%/Qno+j800pc)3?B1Q;Mj__WN595s*`>Ktl8]`g5K6Hm@aUh"(NdhEf,B#Z52IG=o\e(@$5D.I5sH_aKGapPRrYN^V+V3+&-8nR4^%;WBH(b%me^`$[@iABAj,L1\HgVFAk*RENJ"faXDgR5C4^8rlSQ?j@o41UADB"LA1dUWQ6h@@7]g8ZRVTR8M"u&.aE"%H`roB2E2P%kp<VIV=Vp]bk@.Bf\QlN7I;<.$IN--,Ha;Rj1=^NQufAUj`&GSk%Zmp1RMQ,febBpP_5Z;2AS*d.fqSU5`O";&@m=##+CH>1da!1%Yo+OG`(ZPbG_[;pR2(Ytj.dH'>fL8-BBC0+&^6Z;Sm4T>A,Xna97%u]+T<l%^s'+OYtSjMUYr<84>QhT@Sq&-I@5bp;I]E7D?`1Q%db!-p8Zp&"IJ,FJV^1;&/_LDTB.C6MQP59;nA39Rq]S8D\B>.X/+b!aa8la?/2EQSG:Rb>74tK)[5$Mnp-m1Kol8/gPdDg_,=h)5%/SKl47Wahj8j([FWlZ(f[@D!N>jj4Q*>^]YY0N&9Q8>pX3m'3E9=QtYOC`Na2`&HoC:15SZ&GJ.WGU].Q;b[N(h#G47EY\SGb/#'%N6Vfk`IsNc_^f3tb*BG0/LT)=ZN[oq1j@XQX(;O^`^+HXAV<&ukh&6Q,Crsu-#2?h;_+fE@-'.BkHP7m7N7=Q``4XnjKr?\%F2IK%<A$/a_EjG[FU:%)1)fLkNi>^%8"d,&1iA^W_BG0Vk@GDT7oV*]/!HVojjH,W##m5"+R\caiGXj@P<$g6W"f^lR[JLE.W[dLRB8;E%(f*.;lo$DANi,SF!-MorW/Obsm2/Zf7&WpPJHSEG^.G"Ao.GBo\XjG!d39&I,:\JBAX!!ZA_HdA8OHISa-iBV&X<N,THs#]4V%uu%b(D-?R@[_6%q\h6:?[^Mg3XcQC=")*Wm2tAQ]f\]GfiR?QdVRb;_Br-C4W6eWb?Q0AMa[Z:0G`9o)0>#b"RJJZ\G8\)@tL,ag<GD%iTPoY$#^sZfGt4:,:daP8_N^+Gpm7l#GdH7U6N2!bHlr!9IjbQfntfF9N*<kSrKPi7uQC3UeCqR0&r-CMM'8@b%qYDAT"IfOf"Xn%,\?+X8>;B4PhGGo#]h:@],%$7N"Zq!THn*m7N,bW8K#ZM,2"Fe8K"Y8'YhjDmSF@]Nhf@NS);:7.8r5O)UV*u^bSH4Rt-`K"M^@#%;Wa1^E<B)K"3h!k+D'\c:uZdDAN%\9=-,1A19H;HKY/EA;r7XIR<iG?!W'';,;`cJJX"P+km9OFRJYiCfc21BQiS!p>d$6m`!.Hl%I$?C1_NC[1M^9QJfjH4>EU;[4+/MY`8Z7^TfdC0;6m5tiAYRO"E.!s,d5;PXX=RqWd%o6FZBW<iP"=r7@js4&KKgt[R16EaP;=Y6%Q7C566RfoiW?8na$_aD!)G1mfa;a_Jb2asS,m/-]^qD2Zo$VJNV-75RQnnJ?%(gW%V++iLQnnAn14FV<1@<8:PuX2,oLmRgN2@#Q%JQT^8R^/TFMQ!3t1\smZTe4o1@G%bZ;jLP./8f.DK!f>qauiH4X?;e(%HI`C-M]P/FdHShASrU/S)Qu]&j0=:%7utK:61HuP[V"`%1^K_LN)mW#U>)9h'#0[,bSK.gGU-k-.S)otaui@(KT_RFD37R78X[1/P!P&&N"7P'KSiZF)LRjVf;^N9gd"O`#"b\Oa?mZ]VFk[)%SNAGZ8T$4nYJl,C2m!9_k$Cefp'O`Aj)kC#9Fl70d?L'icI`/m.FWndC!rO[Qt.^;M"-_o6KAsrShf,P1a)QUAVjF5bD)q=1^TV1%N2Om0\CpP+aqBl-B+7\J.6V6-AQl$i,$b=$'@SDL$l#X6*tSJP##saW1XEd:WCEuJ%]G<j^,uX"VFc[l&:C-+D*k=qAOL+<aAO?Q%AN!)lJO`]%qj12]V=EPCX%KH]A_6u.M:3h%'5*SDANe.cJOc"DiC6e$\<CXh'9sHm_,qsM.RRjuJe3f=VS.ZL&Ke!2<c5Ae;OK-7%8qp;WMq$/GONP3WK6%I#9V[I*<gVB5c0\Y!.T;t9A(m$eUqs;ES0=0^6]d1]*`BO_25DuD3L4kFUb^gFnbbRK)6I(_76NkKOanlJ%.e=KH6MX/`[dmW?;H^5MH.Xg9)+^,H&sX=Qa^f-2.O0CtK#Jmul'I76CkkA-doak*HUB8=;7H0pa\XC+.;S)iPtQgC\40Oo`u(>L%_<37+NCog0aW%9,c%1++Z%&7T#2-$^BlAR"*:q^84U4p*pEdu(Z'7$Z3t!Iu9J%NMUn"EPfR]7p<?W,;b(Z8e*=Q)We/O9c@3a'Q%-l7KkpWaBUXs5>2RU<?c:bKsfUBG.gO>J_C11Ebl2rX:j%;bA*ab\lL6o-<4Ueu(p4W/)<FB!K?r'!EoTTeV*.cWs<Eg3!\9Ynha%.(,_IaM:KRoF'GbZDb$h&Ss5F?80%84^_tC?]UY7bQ[9M##.!$P(P+%<k[1!-6mmF[UCC-1H[XR)dkFW8`^"*3DN;*<*40WKm&H@%9Xdnr/>A;;M\e*G1,8oE7lF7cXIKbBP`.N#S&S$[/_\N1am_^'g9Qc27Oh(L23;AD(IYsgnUm>F<`\`&a[rHWDBgFUUfYPF+??bV%:7mRUY>%nQFC`=^OQU4pj@mJS(>-]rCA&-sN72GN2_m.k9=p])7S\%%MJ>=NXbN]]O],PY(9#;&>\EI-g4U$PP39h[Kjie^^ciAK%gFVk&$5(s7E6:PnQ%lSp6cQi9Xlr`C\.;9O6;O^"B5qJY/7dC:>j;ETAJ:'d1D2Hplsr!G5fi/*VDUBuR:LD3.X#nPW>L"KYEO`-%eq>a_6"[?O\p!<)bS40aJ3_D]oS4$??.umkO>DOJq>=`'8Vq!h_(B5^WiTuFCg$Krr>=L^>ji)M$mIA'MoIqUQ$hVeO%EH)8P[CJ%WA1@\I%4BYWm<gt,?)_oHOT6Jc#Q9:`k=]o6&s`R&L3>kO.i;1&n/jk3ipN]!q7&@$QA)bG79oLVjZM(@k4DDduIp>N_a*(8C%if%VQu4lo*tMs@g=/4e1hkPh,AM;)JIdm8]S(Zj:-2>QlN$<EK2'ngW(9YUJ.s&2'F?u(i=sH8"%Y'T5biRm%#;[,E#2K_D*m)/77HW%8#fiS^+gO>;\crbAE>Fl\oGF'bHB:0N>!71au3!DX,`m5;p%IgCs7io9Hn#X4(=:@TolP@)G?4U(*lUP+f$HQ\OJH2EJ[Y#T5%WZ%"WI(Se2Yj-=,q!bCW3"OUiEECIRc4)F\OceYst07n;JY<6Q<:D8I/YVF#;p/i0.Y)@t6sL9u0rOKl5n/A8EU`7?4VW5WOdCDH."-%@N8OZf`K,P;j`Mr(i)sB@i3\oIiMlj.uNF6@Og]DjS6\2'qscl3IW]g_2))Fh@%?0mQkBL;"VkQ`kdRC<LJeO*17"=k[J/&/$IXI%`Q35G,hJ2o')"+$Oq(]dBj&JFCp?HP)mqZ%N?E&1`Nl10U.&`M9l$QY)mgFde<GW6K,-8-1U%XQG%*.X*ClS*>,3F8;2\4"heuH$%L[`Q*'<TdD7"&e[>&9-Qa"0t1Mkfs,`@r>=oMLIaJ6b]#?j.=DQLX52MF"nJEalOfYUm`IWO-+kjEcL6gS>T`TWDVt=W&)gW+(!"%X[8!TLe01h<c.#U'rB8V!\qh)Rodoi`C4HHASEA'2MiAD0l#K"N6l2OUQI=](r^/"AudtX^i!^=[8/2'Q.P!q`CS#^o:6qV+)%,5%n\g.D.lodIJ\4G.@#)Rqi$.4!M0%c;\Ah3`/KL>52>CioCNO+H>aKC7*(C2e2nqPC(pUPZ`mMdMe7)<B-#W_STZ#FFR)HN=f,0Z1%2i=M/,Xs2&@[LW+6@!><?0)Zn_(+b.>,`5W0cG%L0hFhZb>WOkqCH)@Ve?Q<'JU5Z,bnU9`0`NPf%tI!iZ_BFg/,_(LpDb'9^?h_%/qSn1io/rs%WRUJXB@O$X9kJqM\onW(r\S='Ol`*)SHtggHmnD$OgLbb;'4*_^udX\Br@/!$FbN;Q+^c/VB(O<t7HRL.JH0N]p^:%)91UPTK*11)NK%[d/e[fE9W]R`/Gr"3Qi?10`3Np0_jF3n@9_p%Vf.4\Kku>Fh#fCk5ob8&?M<f%[Xc7El;B5$`<FqE0u;m(.2$W%0V4(,XG.ZH@gUam^^ZWf%rnu8dW/e*2XFekZ%`X-bSk6+:^<9G$C`SK!"C1&Q/rD`1^nCAag/nscE5lpNu:Ce!'uk##e+s@0npQf%SsP@k@5sB_G#Z=4raqU\!f$<^18d:L0RQfb4Y8M/5bV.H(P\97)9"dE3)`bbK*u=X@:jUifAP\CRmuKIB*pV=N*GXaBcQ^._Ed'Q%_-7XI88U-W,/mo`l$3YY@F1cII>r?(@G_`0%9aSf,,mrmObL'<Jl_$T_Us-*NfbYf,oTL^^_KU%/AknM!?71'ZUtsE6l'(jN[gQ5%[$61MF,QnuDTluF\Q$9&/p)eN=Vs%f@GB-iUbK9j=h[E@`o`YFm.R`KaHHCb-_+jLjoS9p'IeBHc4KT&3L]GWKkL97.T9D9'4-P/%I+FRNCg7L@gJ=mL_@:J#an3RDiM_(mm;R"C8hQY-DEeua:H@pd[/,&MrDGl,B\)b$VitK[:m\;'mUQ0s)SUTA2E9A"SK,AB?d-4J%A:3@@&$,YSl[sD9#C,(BCA-ZUeS@0+3NJ59J,S4"U%s6\:'Ss'BlIZCEJl3pFARt[c1/igjkUjtDE`k`g`>kJanRs:h_2^4N1\UP%CgN1/>IUDRX*RqCchl\@=,6Ps%-4=!hqYt**7^CdESLGu*Z;H%Hh?g.a^0[N/e".(J%3t>q<Pk1>lSoHI]VdQpLmn'ldhhKg-9c!%i72eR2m#(7,CP:>)uaXPqQRhT2hMY,RIg)r32dd5!r3*#g`IQYOh[K;i4+9Pj7!V-WlseMAG=,Z0]/<=NVD^.gR;C:Zq\%'q*jR9%kHi_[>WCop]A!7J]l)Z$f2p=[HAC@g-bkIfCtY:b9UoF0O#A)mfGs;Q?\E:.2;IfSXYW"j@oiH\][BfTji;Z.(7C(&I:]587Zb',%*P;8QF`1I^kGT:0g/#LoB3k?=T-$dOg\,Sic&P9\5I___-%.fmeM":EgG:jtA\[RqQe\Y3jOno?+']otRm,)A2"\ER$f&TZQeoWY%D:cct#EK,]rm+70bWhq`"?PT=_fMFLFG]F"*7aYH"1*:@F2#Ht$]<p<JktVaF#`mALY?_&[P*i^C>,l#&?S%DS8d`+H8[d`[lF,[%rPM^S62Q_N`4*=pag4,j31S3Io-NPE]6Fg'!ST`Sm@A",GGj0rG!!KW#P_Wl!0_:*GhmOnXZ,q/#4PaHY&"3M5OI(6rogE)E7Sk,%f4k]G>(1X!^hsP4D#mH+WnRSu>JSgBj]:+&!S;0!GUp<_]>3nSmK0kp_cd#m;6=E2s%[NiOnKj_"S[YGr^A?`3pR3DUVg13GG[*"%p=S27m7`uBpP)3*V8"%"l!8'&D:W9bhL;]r[3'43=/_]SRS46!9h(>5Xk2CZg"Te>l.3t`eWjk#cLTWE517Q[9@t`%r>L%MG=m3`%YuOuEm'bV'Cq$f2ASl&WE^?=50]aDFn'A#bDgli+q\!7F`FhchI\gCIVrMZA9kI,<5j*/m=-mF_!:Sh4Ea79h[Os)Z3]g-0[e@(E%^Zpm#e`^-nWWpZ5Ytps9q$-?>Sr#DnjN/&g]p!GO=ZGW+g'`-gHBlIfb5:h7Ns`DOHBbOiL=Eq-l`qMt$tk?jrh)<N`q)_!_t@5t%JtDq=GN,7R_EZe(3rZ1nIUn5;nmG^F6.+E-[4['jTO2'+FTf`GCnfX5UNI/sgQU#qqP_Ag>",^J>"P++pNER/LPcaZ]pn[j>33#t%lB8:Bc?rnC>PfJT"$*S8ZS/gR4n*9Wi2F#lC!+himp@.7dXU)a:\EA0pSUZD<B:'Lm:*3p[!1#Ks3>+-]e?/>\E[GjOA15iNVMF/%h9rl5bmB`nZh@$kdm&'RYLnPpSNM)HlIot8PP4k2j9dq'Xgi._rO)@mL@a@mnYH/>E[P+@Le@!ClfmK'ID@]N^&jWr<W1MF1[P]C%ULcd57p"'4nRUF(fR]lCFE(-E5Oc<aY%VIr*tJmJGiX(4+&^q`+3eE8rci5.IUucTmEr&1$_(;(XjH"[L!@!ndCP]5ehq8UM(c-n%ZfLu3g'1j<baOoHYCG>$f\.d]DLjV2BA'kt9jQ[N(H?L/SSZ!C=HC7c-,daE#L6Qr-#dhj!b^6]BO-q!lPDMo^+Y$n9+8g?(DL05%bf]CKg4,l?&UdsCbW4G2.h/"O@]Z]CA@m#91[TOr/ool%]85#cr+Cj^\a2/bU/1T`R_Glm#1lYD0+j;sI>mh&Q)r<@G^%JR[Eif/%OHH"C?L1XtC:le,c]MGM-LZP5^-51nld!6[[<SefQ>S<,5F:s8GqQMmHoID'\TDX?!FaTP^0&ZcIa.$$p#YsS%bZ50=TWM8oXcU/%rscJXSUbK'i3H+nFTQGT"C18tg'P8a^tkPVB"Z=aXi"/fa[J+o:;X,lK^2UI:;X\qKR9nf\5'oCPD&7D\5'oK)_(5Q*A.Whg&-@"%ms4l1n$=FW5*=mA7[H9JAoV6bp7OF`]'R6cHZ4[>L#I9[g)l>./Cj$DSAV?khcU",jdgDU+1[#QFjR=mK75DGI]PX(/(eMU&^k[6%Y)N7cK^-2[jKE9?0POn0[j-BFj=dhfXYXYLNQM7)H=Hb?7YgXn1G=A%=H?^<mE*3'A9Qp\TsM\G<TJd=g3SZ/h0urR%bj)*dKfgL%ARtf2W-UJWWLj%Vs7:"`Wb*oMj5tJrKs`ZdFDUUB0U%1W5LeuQ8S3a^P[$^?8]u6nh/+FhfW``i`.-B6r3F:N0>%r%]eHSg46Y5p%GGkFarVu?95P3ZQqMe';lX=s='ijO>'CFAePd/ri$+h#9$Eg#uI[NC5VdPkaLgTMMJ6/GS0/\/Y>eCNirqH3O!l=OF`8(4A3*/O$%['i$oF?qs@pH<KZj]bhjGN8h*LYn5)V)r_6\+;Zo?H&e8F[t/h1-]'`,',@7BDq(6rp$/F\(:i8Ba&pK<G.k'dW]%VkSc"Klf7th%UJJKS*oN%of6O&O0D'N1>p1lnE\[!Q(V93)G@'LB^N6t]?Kg\oXl"Dt:[M]UL$lV#mnW,#+$'bs/>[l?T'+Djr-LNWH(I+DF6@gt%'<0ek.ND1WCH^_2E]#$W:0LpFa51cbs(GGM:WE()@bcDVSN(P1]-q`L\^.a(cD>aPFYt(3IVIQOdI?7uH2[WB!D7dJmc*cc<a-iP%pl_K&iOZ-p96RAr96;Mj@t!W9E,U$Pl[Tl=@"MTp:%%@eSK4l>_n@q8q9I/t<K6Isg1>E)?F>PA-[1"\:.Ee3cEu<;1R[sW(O=as%"5RP[?<^W-X&8i9;W^".N6>S0Mq/p7s#)u!RU<kfo-]tIIq@3'SKW4V&$aPgE<OOHCf;D?U:YjfTKSfaG$#2gq)Vg8?utnW/'qRg%mH*/2&*roR%=6]t\B;Ki6c3BHL3@a>os%0CHru@RQW4X,SM@#uk&eV5\(mCsQubrrmu09)org16FN0i:CG\^D@a%]m%W+7t0k[og%ZCN`5pD@tS@VNGlEChZkR<kb-YOsbI?-=MRl\XeLK?\jX^UR=4`@Hk"kTClr()4=EOH0$AAAo]4bD+BGr7ZG0!?KdtT'BuKJ'oEF%j@8I$d&Z[6G"_%V/YO3JC=SWs2qll*bNMqYUW]f"l`u+cI&h&%[p&X7G&43<G`JhQL24]8HG9GVcR&n/e,K5MIAf$qWWO'=KU-R+%i.<I_;:[h^s+3D3(M@lA<;"/1I_C=Vf"N@Fe7nV<np8:<b,Webao;:@RU]r'X1b>Tg:Bk,a6`&;[7>K5O*cjF$`ii<0#q5352W3k%`3&e]mT,^(fQNdn=%08Y'7#YIUW\%lp1i2ZBO,$Z[-l$h_n@@*)"m)C1_mY*7.b&?S[eXMGuZF0hWPGV-hBjZR6Q.mhQk"&\old&%XLJ##\1Zp)p)WDA+)A)J?8j=[R6Nb(a"#4(cMZ(X5M"$U&[gNTXL@q7R@\LYJLe#4b]]ukj-QNU?G27^Jee8[mt#VS[3r>f%]mT$%TsG61WYX7k7s*=5bLf'df@g2TX9,Gk+L9SFaedCRlNj%d6r\U*bGurAG-h#1Ab_I0oVM<O>#R;^PJ"qP=:JNQWlWjt;,I9ggDBEb%lZ_mR<L>qt-+^DA(7]?3ca'>UkDE6$-^.sD53fpRmihJiRR*!8@g.9.U7n>>FL6cQkX\3Z=@qbbqJ56d-8fn\U\B-B?(ZQ;ns8?P%*9sgZ+6B&W?In;'FO<T;<]g0A]#5Z'8#]SA-HI[HL-\kdO/BNZUM;n.p0V(/iE_66W[0jVHOsO!C]pkgDS,jMF`1I^kGTF0mH<H5%ZS)3/cg0Qec?BOqcmMT1f'Zm*[:R,>5*oU>k1P,A+']p&I?ujPIQe`';=A)TSCL>M)BTt^*mFLG0@;TUPUk4\T=5f-X1647>X<.8%c<<]7YKKu=%BM_K2R(p?G2'fM)gLW%^t)_EDB$)<gVDB;p"_7i=P']l(Uu]sf*_QAX3%SojdC!.\-i,Kes!5j#Bp![DBINu"1s!>%mg0!_G(T%g'3s[pXnZ3V]nUmMDhc`9H2iK4Zjs^`,sKV$YR>gh?jkR;"S,H0$S1#1FX^AKTd,SINXd)WV%Th4Hhh'k/*Z#8PA0=i%`7Q/+-@:VHfH'Vi5MbQqe)[_t(sZK<Z@jr[4fA_SlZJ[r96FuTk0uO&`:]Tt^BYk8=\c0;Ek:&mkqn2H(3[#crOp<+gXf<`X`:*1%[AF\H:0$-imdD7BWhlt/-dGrP0$:h6mdi$#F6Qt7M@I#8'l2XCj/7%3i8;ouSIO1fiEENkmpOOHQ,Oq_%C)j$ocHhpf"Ejl?\l_(%QbiZ>_h4^14C%=L9CEQ`gN'.1ej.d>)02QZ"`i7UaG'9jLNQ_L;gZ'8=Oh2h`cm<uRONhH+]a4)[jpCGe"5,bHg6in%_LH6=J+H:%Fn-6Z_0XT_Z.FjR\$E6a%_oSaHeh]BYI=HT.umtBeuZIRCM/E0?+X+D_lp60'&!rA=)A92#j/1rKYGjJVHZNnEZ';g']KkrchkA,%Y)fRYpB8Ad3F8oQ]65=glgRL&h/f[TYdfFQ\?A'J[k2*%rIX/mY`l*NCBo#t+#)0+SZ]aZdL5\3Vu=fH[/G[U=8U<VLTc9%>kPMl%IXUMJi[Co$PPb[aqGOH+5&V_<YA>jORS4g2kh[crNqWO4EijH@92,T&U'\6a8<I-.L+./DoepU9Td#h4ZF]*\4hgjDi%'rql\a_I%o.RKIm[3;X&\,4A^$7ocIL6M!kEc2U^BVE>bMK[G[*R*%6iHmV7c-8OW7G[IlSbTj>6DX+;Z+0*C3jeXIJ7oYol3Jl^",++H%1$;%IC#GDF5`W^s5pukFYoH@3uSX$Y+JPDaEp4V)fBFOh!VB)E!nbd[\fg:l\YdE\/tcki;'`ET'a"jFg4!&rsc:A3hses(erjT4'`)N%>6a&DkhM`jAFTaV)K0[R>(KJU.^.pX`bZFqq?G8c[En=h"fsoCHk6K8mZ.$H+Y,CGBR0-uAGi7;"?AEMUj9"e3?7o\h"^.G^D-7^%PL38+hiCpJl,Lum]ub0BgR92.?M,B4a8M@T[.egV=$Pa@^\-[.mJ^cUHmrjE*r11=);X^D)>2%6?J7K2DqmO%lsG(JDVSJZiVDPJ%nEQ8(ST6W<i?arIeWYH*1p))omD&9OUpp$_=m50UIV3;8]m_nHhuA;tY-e0=6F]YeYQ!^ta*b5*\lZ\:L:t)5"p+bm<gNLN]GK,m%NS_LBch_bS*"i3PT>^WQ>Q%<nr3A>R56K/ZG2r;Ra-0lMr1fQm2`H*TakigP*R50B0CD'*-fA)!/>M.(Ac'f=*I+'slHsk&'o]c8%rMi(%pZ-jO3doD,gNj,/_DfBcYhg/SJg[bkCu-93[)<]fqQo.r5CGTgWG6p3`#hI0Vg@@CM^qocou[,G242lLGn3-^@JU2@fYd/a%h["O8f)PNMDYg4/I(`%`msbUhHZeq(:N,`a]c//jH8g./^$D'\Wc)+bYMSXorTX6ESo%9CHUku!RnfMq'm+VU[sQuDW6a1ta)pe4%f<ac1cdhg\T%*eW/XdLJpr:R^a,n_r]dNJ.>#!&NkV!j_km)*T?T2dHH1)OK46XXT<,P)q;BJoY=g8Qm62<n:nAZ*E4C!9qm^ZN8%n1/``_+'f(AX`8VJ)j%_B(\BG,`BROcPo/PQ:6Xr\;WcPP\39gi8CQTU-.gkf7/RZkF=K=26+ZCDs:9Xk/EXX?qikSo?ZdENSAZ,%XTh:?#6(9l098]@dHfJehoWW.rk2n=GH19ClcG[<&,]L4L@Ia#'tmgc>f7S$OD"$5oLir@Q9_a078h-eF^Z&M;+0Xb";#]YS44h(%Ob`UVb41N:M8Q,&IW&6]N>[,K5'$+>[@8i?N%<`V:Z=AoAYVIPXC$MAg@^;f^5ACUL>tQWl4*SLkFYV5n(2p8qT.j;q3qZ>qGEhb%rH`AJ%-nk^O7u@ug4Z^6\pJm`G;ZP4/3DBjrIJUBm8l="rOd*Tfhh%X$g7@JTG&:2S`/pSe:0'"qNonU^Dp5]f=?=EhM=:rLX7E^%KhGbE6#QS3R!S,UPYD_G88tkAB[7o=k#38glJc%??QK`->)i@q_p9_*.:'I5?VXhXSjF;fZD*.0$od1Ebb1!Hs"$n6Pkb8eUPIZQ%qH4L[^&+Ej8_Mkp/1d""E"7BlpI31<el+T1VfI2pHHL%6hqPR09pLQ1HCpGY]eGE:\<GmB%.@_O-c8"`^:#dZl"##d_`Jamam`&[%YH84/3uQnsn4n^^1;&h0CFd</:53sJ]T_<F%.@a%g</otPMr&@mppYj_`JaM[PGMZA9]K>3uQnsn4n_AXUHjE);`L):53sJ]T_=?%.`71;PMr&@mppYj_`JaM[PBu3A9]K>3uQnsn4n_AXUL7O);`L):53sJ]T_;i/&St]bta";1;&h0SIAk4)8>*UR_Sk?\lGD-"hI^l%R`MqH]pucYnT&I^`+q/,Y#1gW>M3(?Had54]9U'6ft3N_>M6WR]j'0V>1lt>Vn60d]9U'6ft3N_>M6WR]j'0V>1pM]s))+kO4WKr%/4YV5'6t1e&N#[s%`/99-H[lqZBQqT=l?2+:!+TQC/b.jFa9q2e65Ooi;Lu:`FnMC,ZPTAV]/:AqQ9ri4&Oi\r-+n54Vm-Thhe-i%A$^=3eF$dV\epjE,g*a3s%\f&U:_0$SL@ih;-nG1s.(S,7!U0&4&N`cU3sp/!1aq=>7=PZ0t9>]qmm*.c=ME=RHpTgMA/!9:dgW4%r+D<"AV$]kJJ(d'TI#7oL0094H9rH:Qf)Pe2Il.nokCr?]gG,.bOKql*-Zb9DJs](7!V:WkX9\Dau`JWM=S%jjXUgskX9\Dau`JW%M=OE+?S'?$S-[JunkPEnU:_0$SLD6TPco<=GULWq;;R0#:6]ssr*iO[jns:r]G'Ct..9S"g5GMSkI2,dSLEqpGpgbd?BfXo^RZeA%7!U0&4&N`SU-&anSDR)+GG;_`jddf,HVqN:3PV+5mmMFKau`JWM=QQnH'dpOM=OE+GG;_`j_HNl]55egP]rk7'BPc5?[GZ,AUATp%]G'Ct..9S"g5GMSgTqRTSLEqpGpgbd?BfZeSt.:u7!U0&4&N`cU:e\ClpQ+Hau`JWM=Pd(j^2$fqu7W0qS+&1ek21-i,!i@OqRN=%R@[ql.'kl=iX!L(Jhi5tbk*$6iXcbb$fWq!r'CGg>'f(CSj',n@/ZX[[m$ptiWZ0((?ZtI?^B4tXaVpKS7`F@:frtW7iI%l#+:ju%H'I=Ej\_CWjdC$8]M<CDIQr,#`?L4t/B:?oKsF/N5nO9JGrg!$S'(:GM8M,V:pb4jhG51^=cS&s6s2Z(n:$7fi)GWp0YoCs?:KN6%as7Dc;n\D"l.H.eY*\&3o7HNgU'sYO/4n7dqG3Yk8Q*JMQ&PRan<j&H`H`\nc?_k"gNbr#]e7Nobg8&)9.Fk*rV#_A_g3Ai1.1*'%jP\8Is2c(SBTY`/HKGTa2rj@4l6GsMH3YA12&e(=Z5$q%&lbYm$CMU(Bg)>Q<e<G9>jlF,*oNDjrc-LkajtF46tnS^/fZE2*)KDN%AX64!#kC(f6og.!BOT"Y;14=S7C8ks#"u[jKB8YaQ#:g#m;AELmF,h$YFiNfQqe.fH]tkkiiYmr^3-iP#4KiP)Ot_'*VII:>3@u;%DmV3f#49X3r\`TgDL/nE1cX6'RP&;2/VA4Ie$<9fBaN%">pt;&SOGh627q(b5]$_Xpu3AmS3j8;Ymd'T_')BP;PpPKC5>%.jXl6h%UA.,F&5Z#[lO>p-*)W6R;BF@,:mgjP1(#flRFf(&jr\5cn[-Aq\+@;jOi2X[^H\d]]dNdSX7N0`*<'>&3h"<krV:!8d6Ba!6LIea%*l%@YL=LP:MoKhQb,nk19V^Aik%&s"a/_b4iF"K)n/XJQNou0Lk=2p=]Z4g*Z4=:.CP,CUOT.=frl;79Y+*A-<N]T1c17]LING-\%aj6re]X:rS`g^=ra7VFIld`n%%g'%#3fn!f<Q]Ongg28mD8!$shV).Bo5qO\,k"4EAW;jDSokJI8bt&_euN9bH#):s0&GS8ILhDd%[9>?BRnS1ZYB;K\"_N1a.@7a>GuG)W(VoY19Ur[I42RWa8!@<:f!ar?";st3D>.Z8VH<G%hX0b151K/8^E1smlYTZ!PA/SEVOGej%L$S,d`dF\lRc#_RPJdCX0@C5RrC=3Zag6b,USI)<U336PK-F`c8fErd(hZ\_jYXiiaj.sCNCF1)KM<B!lRsiYRnl!_N2@!&V-SMh%/%3H&R=ouH3S9nrH\_Q6IoL?S3l0MVehn/C44D;[n(Fc@hV46q-RZpGOK,999^MGM5;A2N)Leido*(h6fH3j)Nd*FLrh`3TQ@mk4%i;_Vil>%]G^OK.bnp;)UeDuCm'%AZQ<9f?\qJAsU]6kX4^#9g*fn87Vrc]q)(9H&"WA!ktn&p?FkotmU+!-AR_``IuS+V.bjm,U(%l6U\M\j65SHh[c&mdC`Xn,:i8_p&GJMnA#_c0:arcd7iLji(;bnWS9`cg-.2l]sAG<V8b.;D4U4H,\,!A/D"(%!+lrjos`[1"sN#%NL@A@-V7a4a.(sNXj=364p2lj`G[^5[Mr!HofKd2IsQ4Xffb^]l@jB3$R&QB]KH#GDa++._+aV!hcoko?6e).PH6/LE/<H&/C!t9%P$'Pf.V?lR%kM-d\5&RP3q]<)qCF02ID2=kSFVm!+t;g&1/&-Ya`;R1M:+%sAJjTMnM&.*K`G79C)s[>+9+nbrq:D`GdE*Ih!)qH%qqUmFS+#\SJ/_i9b#%%M2HV$O+7An2G#H@Aa5F:c/oi_YVHu$(o?#jb2]^0S-84dO6d+]dCt@daO,mR1c@s11P\u2+r:K@K_<tie%bPWI9>[Q\siu&Zb2mY:X*$*P0dnYDL^[^9@g\,hC0^tDV!q>r.Nuia-frImHnP8Q8Y6UhBrU[/j]O#GuO6./tB_A'gdqSi&0(B^[%mi=912&u!XX0EXS[Kl[Es##:S=NRa*s"p=\ppiV[h=4NQs3RD8UE_i9mB\U/KB6,DdjLP8r3`D?B6Q><[A0'sMjIAW`+RWu/&$ar%hiN?[a&h$9nRR$u,Q%EY9a3g^HYrUk8%thGs#YQLT%j-Chf[STQ&@O&s2$G":)!SiT3G*6*.#T!(u6.\4.aR1eOm,k2\&'?oa_O&%("U$$FL3'KmsJG(_gZ]=*p#H,db4UQ/%cd-nMHVmL4aW8`QfTH<[W)=o3.5=XS1h<Vo)]qD=a#gSo_:Pq,Z:d*mPbBXbQ;0pE[G^%-a2:sjRlOIUd[e&)=A[;p#=9\JLfWO=4Qg%X#<V84)tK?HV1h]PG@B8g4D3XXU)SIhMMK7r9D&%H%5[rRb&GXN!6Nm4)I1Va`FUe%M>d"eh>?pndt@X&j43Vgrbti-Hgj@/rM.tn?XB6\^\i<IT;2C!3,^+-h4[pIm=U==K(7o!IFi3Qf%N%\>!2eA#PJDspcg?"otaOs%4BS"(?Du<n:+%[qd2N#>b!<=QpluB7o9WQ=QT#H?FfL]PnrI,IDcRnF<dP@c\"?>AOIpB9GN+i%n)EDI5!0\]f$:Sa*P;GGdY4a`%V&:Bk'oAu?)Z<9%pfWkpRdL,qeW4ZGc22kdH2mV&8,56=j+BMf<je?8hSEmIdPO]N8ErLolVH]UPQ#Z"S@H8:\*NI'iM#r8@U6S7%fVqU@1eOM%lm&:f81/[@+,"&5r5`XLF4GVDrAsE'h&FZ:]>I,,$F@6uh.=j%\(r/+gn-a1"cg=.n"3XealmClKK&Lqg)Ka8315fI%q`0^F4TUQQHhU!+'ZS[&*b=,C4>1+V7YVC9Wb/G\:\ur$UrX88a\=@8m_]j4@0:.)5+3Q7bqD%(FI:<OT'g$:r:6fdZKaT@*$--/%I*p3*^@4tf9*`^C.=6jK_toA:L'L5DIe0MS_M>JffDB8E)>l=j48NtYZ%ib6]^+S2K\ttArciV=YG]e+Fa]8.?@?>\YfE*K`.IP,%UZo%=3p=n=nid-dgH-Bm*'7t[370/gBD/S?qg3\1%]`V0`\P.$TXT2'T=?P">Vf`7+2dpWpZGQT*@gmk:Q5-_pV-$3O+rG'kEFc"%^)VQs.*lp^p*\C4G$$I+m=,"3?9EoNidUL8RaHEGOcL%MK4YmqB-"TiNCMZ^b*AbkSt,<NpI:@ge9c]I$2R)R.*_J-A2p/JcCHrb%fpm\N#O&K1B0JHEP]qVJ42H*s/)_.Y\`"U#rC[&IWB]-Jr&;r`F5_hFR_ZKP-6'cji(<%&2BU^9)NARAC?TC1lcF^?p%Fr4l&Y#F%?9PUj1E3:UI?nND%^a$`?9ROB_f=4rf:ql25sbCO5:2OL`rsH/^&F[FBt`[MN=-gifU))Qn(H+I+Z:mbDdNt>C%:u]C3hj^6QnMN%'0L2,H"RX'5,gbM:08\U[*<76k\pEFrRDra#5o,ZrJ\L`VO>#*)2.cma$8#Pq)S@G\?!?AZQJn1@J*8VH?P%LH%.qqSL^8Uij:Z!%N:&L*bJ@r`T7!J<'V71=ER"@g;ZG7alBTgs/C(elRj;WPM4a!r?>PV$C2]$5M/O:Q.(ir`cPU5mdjOZ$&REF349$IIS)2'JkA#+d%[#gX;cO4+A3OLY=)b&mud8uC8@s6#+B@2WModWAq`1tH2),&fU^V_VKJQ?o[_(tSjkDp\X[ebWKYkF+OHCi*NO]JA%qVZm]7GhqS%_;YO8_nVdCHJIZ,488LgJ*)se+Sm%Jp%0JuS]GNKiO$Y21[oeHc^p\Vim$E_JsTiqj2^'<aCV/Gc]32C-_nA$I!P6?kMMmDdKnt&%c[4OZa*X"WAuE@,s0tR^*,n4Ln;jOrgoncTPP=[q=,E!ol+qTu3ngW\h`Z:+\u%2BI!s_Xo8dV"Z[4!rIH-ln_pNE'h$1^Tnpjrp%X8^F4B4a7!p7c*V!mg.!l]9D_c(OhdZmNlk?D[d?\[1ic3\/aeJu-a"(Un],SM]XiX*E:j,e6jTib5<TP1)VL74/8ZFn.F<7=*C&%B,/J,pc39\Mucp0h@K%YZZ#Ta+G`c7*#G35*gbS4:-8D9?[/X@%3I;bFbH9-RQhLQ^/]RY]:F56@gDQ9rQ:%M4ug*#34UZ8n@huh%Pf:W_rI!d4\=A!/5!3c6:l/=>o0MudkH6W8-P,MXh.3dmkg;E:6tuLrIgAbi@0_4(T5,aKefO6#*6qnYrBI":S9[`?rKu2GH$&R>%m&:ob]#EcRmkhKmgc>&kA&%hoN5^kG^ZE)B*_rSRm"=+LI`oItIBXdd3!^o)<r(:n_/B55p8VKcs6e]mZImjtl/Zf)>4j1Wl\%HO%6C5!uGVHH5Gcf?EHJ8`F<HGrN[GO1eH',X_<c<EXo&TfEl-ZGuqQVpf6AilXO#/;jekmJgZb@bamIl%"5cPm7>'U<$Vo3I:eX$G<%8)W5'Bf13#Gq/P(Klf'h]$7\jReig,FJZs%d4t6j]b56VPTp9a(4ciM@Vcssl&UV+=*<soP5rolm;8G<!>)Q:H<>FTT=&`"2#H:N%p745Yal"i30Y?P'<;Ll19M9lER5`:`_EFg('A`L&)&^o[DL^1&pWe*/!UN+)$0!pom7jXJorE:8k1I.(r?7HM`Vn"pn+ROZP"V+>%J%7.0&Y%Iu=hU#hrOmNj3-`bu/PNIEK'K?4hX&]/Xb5fN0jJP7e^D1'i%h^r>u+&nfdgAS#gODAV`s0EBCRRFI9Mcpm05Z0d:ltJ%ba7%>%X.C!E'!S<8/lVSo3p^FH+2&A[,%*nYO2+HDuCC<$7?mhD;UscK8Jts>"aXJo8DU:dI*[bjUA1XIAZb.1OS"#:$S_UZoU;f%c.n3E0/?a!b:_Rt[f,,MOmZ0[j>cS:hnK&0qrlpe_#O=>T-'8n]s#2"Yg`1kSG+]]0AY+4_2g3en^t34T%8/FcSisa2dY4m5>HA\%-n"neOdYWuWGKTcTD^T/go]JEX_K4"Z/]KLKr=n>b7jl['2MOW/`)%k4iOe.-2ai2n##7i3LGapDDGSk%Qq^bm]*k+pZ5r[_0CIX%C[?Kd]]c\nA9U!tk[THQn-QW;i#dFCo&-F*>muS3rr.WTostUJ)2B<`R`=^hiMUgCn`!'FWa6W(r+<Cc7Ao#'E4RcW::Y=r$blXW%52%tYgcMHa*fYU0k/:3Wa?<D4l4`gL`tS0m\J)\u`R!OXD<70Kn\[K,ir&f,93/[f`cuLSPRB*)Wos63,Bki1DE&r>So+Y$DJ>N/%J(\PbXg>0Wi67:\*J$jT$I(TkF)_$l[WBUfQh^5mUDXW@4\0ud]dA9gdC;;B9U:TC!1o]eaO]p_H-DcN^0ioAmS/#8r`!ZPj8!dP%lL-H"m@9*mQH_jg,'g8r$`[^+BdKNkHudE7E:;Ha'MfsjSh6N,WnHn'pltaCl*>=Vd]CE]?3Jd2A''WRD^")pKP\<9a'Rp#\<oEr%lL'_r)ge=fVSd5FerU\T@<>h"G;W:qK)SM-+3llFbWi2JMeRjeWIfV#Y<c9ucL.jJP/HP``9j+!gpVp`dA[P8r9WbtD!&AiJ'L9!%1d#FKeH\bXBBRI)al-WJmK%:ddYI-nqknl>qS8Nq4b&%;F)oZ<m2_aG5clEY2QAJiB6tF7[=:"SS29j"(u9>[g;uFJdiXW&DW5b,%NCWf&`+`RlE8[iT2n(/_D#`od^Ai:2/pmW2q;Brd?5R6FIOk7?$A.?2J%8s85H*b3-VI53&G7c>M'mHg-a"\+K$!r@H.lak>t3e'%G!JjWS17u\YPPXNC;*:E':njY?_4"iSZ\P=HtKiP4_LpB*>oj0<rF/%:@7XpDdtQA7f3>`NW]%ABk:PNZXa`QpN#;ZgGPOJV*hX@%Bcg*"HT5sKcfrHM(3f]Pr+DYR]6BaDB>3,gTj,gS="T%orBkq/$YBi$>H\$JTTRs#+Z%2D*`7j]/7DcKR.,u[$ftO^HZlc3G(fXL%@GQ1OcPZEop'a&JGGNMB`mr7]@td'gdA`HeeW3q82Y(>42W2H7F3^`B]/qW?ci<-R[4FF]oAG%M;eIF!CbVHO-\cliiFm2U@a+:;%.o>9toFn/#[apQ'kH.NBF=NZN$\X4miTZ%t_j5aRn"<lL@&([lm_h'O"E,s-&@bkmZ-<M:B6481:a.pGMqsV]*[9SHp)0C=nC/,f%RgXEIHZu)E>P_B@<f;;V)^suUVqE-u?bH>sR&.:i]u=G/,9H'R7bg+M)_Krhc0O%+chsH+`Rm+;:*Sn=F$X4qE@"(ADQEI-WGhaL%q>I(7j*5\(]oF0MU,hjcc\pgHZYp3^m_:A7m%!eb*^BAg1%3!=CVUO[^P@LRFSm=1TD\$l'qFr>RLaZ5]B"h9?=he/:E#itD`FWg%!iu4gA"SbXLYohG=0tI2\:J#2WgB=7p#KP;R6!?-gs8(2r\*I4X>d*nZr\X49W\W3M=Y9QCGgE99jpS-A]).UrAT/C1`\LJ-b/S,%T&L]VUJ>#Dn0+CigdBl`GgF>5T.2*@0Q<sH'q]j'"G`FWmq`;IpO>Bo+!+a-+RdTXYH;k';`jVRo]LLT8tUiM<BfjPmaX,dgM.N:%Q9*Oaf%S!B2k,bQU\b#bJ#kk32-]itorG/_k-TTR]q]SN597BTrd=Wr@SBR&A2euQLh;(aNS`8`/I,:Zik=\"ZXN=,QN+:?n)qgV%B12^l.V(D1He$3nVAf?@q%tK=X$Kb3Sj('Q#Q<nC7idTd]fr3o`/I_]_;9-3rU9bJO_9"phP$(/2o.BJs82g<@p[_9_?:B-l5e+r%^&<805H<$LoaZ__K?5QrMGF'FolUMgiSar@l%P2kF<LYESDbZLjQ?(SA]P@aKcL$Pk?1RrSmfeu6sk?6oCFdR47YtVYWhQAPr"JK%4rk\h:OB*ED^f&`g!?JK4DtoWGGbA.g\jL]TGcJ+G.L,dY4N!0jjeHn;!gr*)%0(#K^Ni?P`RG_qWE0ZBPo'5gQP2lBOA5Hn%B<7%GG*hc5W3Y\H0W-Tc!>SFY3G_*qURT,[sL[10%d;D@sVP;a#rm4ci#uPlCD-:^K9b!:[r&BZ+i:29DdY\qMWo<m$Gid-\"`6k<:?7%6M$k/(>@Q7S@=bF4ruXujaXa(J(T6V9cIU$RA\TXo'>[T?eKhCoBp`C';n'u(^_tb%nA5&SRXVTLS*<C7;'hCGNRTIA>rFI@Zm7p%,PPd2Z2!4PeRUl:Xe,(Mcc]1Bddt0pL\>d;D,$C5lZ[X5f5;BIF5c_]5/>I7#`B4>I)[ctr>N([H&n=kE*R^AkiC"HGr)_u!$O5;%rSd9+n$WVBKqBt1Ttlf9GfptWad-6HPYV/QX)n5k(Zn/W5K/Ziki6`3\^16P4O7u9ZkgudY]so`*7XTC/&l_4ko+iR#L8[rTC6$5%8\C-e@%[>/JMZcT/c73g_,J(><P6RtcanIX/\ZW_mLk+^@0&B4CEakt\X2CR-DTkj!eI@87-).lgJ[;Pp7)tqjKFXEo_h:PIf%fj%n+=BlpriG.O)Jl`0ti)+lB@Rp5C@bF%j0^,oCfE'1&GJSp##1L++3XufCqLZPl13<L]@;DUG&K7KDaT^kY^kYQm<aV_//;TSX1E'%J,J<O^Gc)WMbcQ$S:*-hHZ]/)LL8h^pkPgho]:Jdjkp(-n;C)+lIkn#Zd/k<)]O9UH/_j8p\qe=?bUUM_b]k'\Nf!InV=7-Ir9\I%GqaM'gO/L,rp$9)ZO`)am3I2ZG3d2rT>/)0iQcoAjmK)aqdWt#kMQ3tqgWKIhqn.jm$mjlIIb8lTDis$LG(iZD&dr1oC7T+pMSjF%gV<8%?e2o?f>;TAs+bOaXjIr[mloF^H8XT/Q2aXin2gRIVk$-Kn3:9-qU[r]/(^aBH+*[TQiEN(s8(2oFrp!5pqt[bil=9$5.gL(%=J"K`rnc%^&'H&5IPePr8H3[Nqc34HcDR-R`ddhul`6*HrQuG9J,]<$G'3FaT7?Io#I!P(#5t1`YMhuqpE.,44,:Z>IQeeOn_]rI%s7PL1f'(#drqY.;UOO>%5(*(%s5<_Qo#7.Q?c=rfbjKlM_\\g&_4M6%qWuV#g\JZM59&b\mFcs$3?:3f5PjW.cs:XqoB#>.qR,F7%Y4?Mk@.0<<p?d>-ID\RIh7WE#[5H+!*(UV>qr*<;Cd7^eK5^4->c+k(]0,jPqr%'nHh+A$55f*^qbNsB%t<GJ59GAWGNeYb^HTF\%q*+[6qo9QBl1;$LrfZ*cU%usi_]\m9K1A#4qk*lPhB+rXT.02kiJ2pQ.Qle3LV`EYq&nY25Pk<7Vu!Sm^V0Mg3IL_a]Dn1T7K4Ak%W/'eb_+1,IIeVl9kH?O'e*DDYfr'&fIf/J<r0$K!lg$^j9(ah06!I^-#Pb!<JFM]6:N93rYV#gkf$4Z;l<95H29GhFqf/k9I-8P2%G4okSrBGN'rBL=%/)1%!+.rOLkJcVRcX..DRns#CGdR9/MX.I\RK)d6+4TK?rQj<grr(FnpPNM2/e$3YrR>)R(i;tHAfpBS-Th4O%mdBUnesGe(jeL-d\FZhM+^Fi_LNd*Y++:J\I.ua90;d3"?RMI.qY%,j6:Er*B(a4AYE(p%Rf%[%IHP))9U=TMn.*Gr##%o)3$BFJ%[W0S)@tV[A-;<VFqs8Z).18_'d*mDU[qDj..#A;/:(C:p]cWKqKtH;]_9(>3lme-$bA@YD](SFje.,i?5BZ89k\!h=r3!,l%Mk>Y%S\]7ZPeN]1_;3i?b?bh9:4\K)(>ffjS;,()=3muGA?2oNnTF5]>$ogk]j@;q*cA(4'/@:2"/B"#>!"RW[e7LiNg.+Ze@,C5D1hPA%%@'\;5BiBFHZ`,f54;#V^&-I0X.@Qe_E7qoTWW_L)])9,_P"GZXYrq@2LKR:UgOto"0MQolG?@flc<L:lFD<44ZZgIHVa,[5H+T5%50@n`NSF1nA8SsYrEOd:^Bqt5$TEi7G%nSIXD4kA?MO^r50b?umH$6LY'6s5?Z(FUZ1'U#>ceN?SPSA.@7Mi]D.Ia`KBI>D:epc!%?Rk6:gMOVN*F1!ilT(tgCP1ZFQN,fSoG+'I$%"k#CJXE6/(O]R5X*m+@pZ];2h=,0Um9u$T2kW48*pMb^GI;Z^TJ?;h5caC7*<Kc%Xllh/WOQtFD>p-T*g*_=U-1$kH]JRpf(E'%q+?qR4SPla,fN"ESsm9PcegmK`qAXt&>Jjd>5n/."/'m\!JGm3SD2g1=RoEOa]H3V%Df8,d>ZqbI3Rr:s)[1Z'`b3Cl>g(=UQgsq:?6uFslqg.+WuHgX7Hnl-Q)gF!.?Qi@5GNDdNWO]:<,+@mSetgYXu9h^!GT_p*LgnK%q%1'4s38dL-FC&Td.XC&mP30f4[%Y<>/+oUXP^H$o=`@@ebXAp_,9Pj\OVbmXfm42F$0!nHSdgj^7']6/'\K,0,pZs5&9ZN7u,Yk%bqkqK1\,\O]qZI_)h35c20pNr4.nFn5Xr;f=MS0+)B"5k+KlWg`E*<jE8DgYnBJ#E:>5&_akU^CT+;F_iMEk4pi?NVELksq*o,N)%KW?K$,+lqEljfO[`0Y,iI=-PI\<+NDcWOu&fKU4lI*((T'Bo5Akgi$B(u@,I"$0sSaW.t7?jpW+&D7jY3^b-D291Q9_1<HKi]>a$%"p\;GL&Gn^He2`P`k`uW#PH$T0kWf'UVIU(ADusBr:X`D'H-Ck75*$Am(=?bLrt@5mQKd$&"9&eIEu^rkQ)i"+GP:hf(pOUaPOmt%llLTE`$mXWS+iM@EOjXRHrOfC$H.CKlSpun=pnbDKSD%&H?%/@EDA_&M;'.nJ:R:&qu(R=>l5+J$9q\h;N@AVG!WUmrUEGgjn*p:%358dnl1]M(h?)MdcNl-,AU'GCf3<mVe]JeQR*=++0,p3>.kJ;S$C>Mc2jMV]5jm[%`&]So(m)WqQ[M?H@(#@$65oL2lqOEM-*CN4%FbP6NhBBmhG<n5+"mlHWH\W5LL&<a)m;DlCmSVJ7=#p7@3E&ZWgRklYZ]suDrQm'8lGp1]NjF`L7KrjViq+&ZjFaIYBWG7-*l*:D%MQ3%fV(R`p>^JLn<lEa`@r8-Qq@M/-_Dgnk@?fT+UMFp_B;tWOs.J+&otRAsK'^3'g'0r"g40Gd*tg#p!J-euin7U]=*m-rT9S1B%DZH>D^K!YcAspW-BT":[*[3Y(f-55h'UNF!fpBj4Y5PnE<T!c]V7#L4e-d\8X#.V&o0F(O45W$.JtjTZ]'ROoYoo\UGA$q$o)dMF%Sc+bsMaWF>(m]FjXP-F#:$nd=h(f0o@Q,Ao><>AW?ZT<!dbEnRg"\)2S3."t4.q"!-e<5\27a$J%0CtqP[-Td6Bg??Kq,<&KNT'@%Rg,J="9=g:f_@FMMu^$fi0pVBhVG<NJiYpjTsZ=bodfPMD"8K30m.B[f<'(XbhbCH$LGKDWu0.n)\5Hmo3&4kFWYaca`_D'"VPmA%c=a/__78pb=5LjY9%<=u<gWI4fC4>_ae+a,qs4(>dZ#M920[QF_[<L,l>tjinqU9qj_4\T>h?8%l[a]Th^ard5(#JgR_+VFNhPf\%4MY-flh@7@lYWqtgT7kf(1uA;@0__&lMFlto_ZO=LM"`nDRij+R>n$6_"It/jj*#o"\;8S,IFY2b9N,VFF)/Vj@%-P[RIbl`M;5>%H2H23i)HeZm9VAr%JcIbp3iU(e2r.f?T*4(jX_iB40Xhb10m;Yk=!I;[.W,pP"h7'J>pC6pMK-RZsRVId#XI"ZZOUV.:`.6`O4mf%i?.1RXF16SPWpSp[_fmt)?lTl]=\sb<S$4ArVJS`@qaWS@8jAAZP_2-=F@1p"%2>)>_\oQBTHEmA1[Db-;k(qs$M%AdBeTMCV%Mm%1V(c2]@G:MA!m+qDOW9D<LYSE?7h!$%(5)7Vbei2s*;(Be>][NIoT5C+<Y%MkP+jJ.p];X/9n&(V:Y/6"2_B_:9La:QlPa-K1@ZB%^fio42L1ACZ-TBS6hVE`IGD$f<eY1Q`,b>W;+XkrqNWPlMr2"OkJlOTV0o8?>[83e)[pu`>q#7gOkB!q/"o9*G0+Xn9e$7bqVV\R%ms7^orZ!bO3[$%3\Ku'%[,'3E7;$l8r1eNEJo5A7etTnHE0O;g\X*9P)_-5(\Z%_4IUmllP3JQc8\G3nPo%DgC&_EuD,u`,jhg6B%f/&[u5oqM2a/-E=gV!a^!dfC$l;hg3EO8REN+oGHJoZ48\(4kYr]usshbVncQXo3%l`'24^qCX9dc8YHO`$]PD7L1H/=eEn(A,h[%S95m8#P;MIRrQ$Dh01j?rIXn98Nd0i]O)&9jb'VVg5epg/oA@RQu'Gb8k7d>5qb7%PWPGVhpGN.$Q:<uVtFe+GZRYJ2Q_F!9+o5)%J);a;K;/s0p'$r'N*m5(;J\I$h>kr:Hckkmj`_CtQMT.@NP0e;XJadhQ>g!1mT7`DD!b%QjbpYJp2m'H591iGg]]JNg%bH@,R=qG%8C-X=2<Di[4tr70EtaI^BY2.8m]uDb]e%uZ@elp("a0$GQ#pT[IC$9CmPglqc$FOneO&V/Y<A2SJ%V5ZYt4,$Abe`4/ZkPYqJs'Q%q`f]\ieSS.B75k4eK38k9R/;3hC,;".nL8WCi.q_2GI8<M&&g<AQW;X6P-&uUfWhn(Vo*HAc#BWnu'.f3&G4t^FQ]j7?ij?AF;b^%KLMn?kUS%eg1VsI$X`^.><U_K_+NF-#?eUOq/`6YHr2Bp?$+WkoO(2NXqo>%)n0'5ek/XiZE"eWjS)@<<rI:#h?WYIp?e_=U%42k%E!IDT8A4@&(^Sa!dm][jP5BS!l>WE_?I9eFTGtN?*Neo^k=n+mRTTj)r5&8g_g`+Br;H--]-u2>@2KD3\,ZCsH^8k>[)^_+Ph^ZM%Xm=-Mf-9aA3r!/n15Y1ZpT(,pD0L3;A2ojBUQ^:9URs>g=ZKfq2Y80qSH#rAD!9$=.\qN<D7fb/)W<n&LKT/Ph(eKK,&k`]mDZ(m%5c/QU4M9)me=Ztlrq33;=7\89Y\3_MR/tH=++Od/,ZhJAC*m^5Qf=uhD[!?p.Dd5/a#lJ):![X*.e;omrfXE)m[`R@*tF[]7JEXq%Wn3b.Ml%BqT,\#m"S*8sA>uTE^IDeJ:s9-(JhO7Ud:7P30@e]P)I%Mh\;Y`7bOcnFOHIn=?r?n#2;&!Qgqm(T-mq`SaZc=$G!W$M%3bU;;.c7E7X)?*0MGf9@'+=>I&,ZkC"lN]A>5P+E>>Nf<,f#c@U$Lf+;nmt@Y:L>e"?;>PWY?q0>4LNnh1`8+6N11rc/o1+K=DV_%&sWt?EEqhP:Zl=0:=qRJYLMrkfOFK\r1[c;GYIm0Z2N-sehap\ftGK1=-%6cnA0m#o(_fm=Gr-BpnE3i8q1*7;PipTCJgoQ?cXW3%m!;l@4$#?#:53E*W'K<gg@j]6+2jKA#rDJjoS:,E*3'%4n"RID>i"^&Q\)^$dO?I;]C]'Lr,*4g]Q^r-EE?p?CbMf\\J7Isj!Dc4%g;heD-1(8n.sUOKbXH_#/$0=sO3]E1`5_'qW8-/)Q:*(do1q#fWNQ_[\gfX<_:el^gLZS4=$ADQE6r(]6iHW>YbGuYNX"34-DP'%%FP@'B.3IqQU);Db/)*W'P=(SdArm44Wj076%cUc#3Eg9NKREWlh<]B!32!]ulK\pC\CUchb0t'Ms8I#:5MS&eLh!M,;87:LdRI;\%r=%rGJ4#3?^B*;4RF.U-I[5Z'mU/D#I2#>G;;Ua40<cDo<O$qD42IRdcG)#Kp59*.J86Z?3rLYZ(V:t^WqQac3rfWDG5JSncX&5=%]/t5O>'KpoO_gD=ad^-L#9s$?#M@(68LQeEXMjnArEC.uX%#Hp%IORL-/C`W7c[C[=JTCD#)==i.tq%2`lm!"f@&o#mI=/dcsHL4%2]qe")4/=KCh@8J.?d3Nd!CE%+E>Kflco:0XrLJkb'X*G\(<Jc#f!`oX?BS<n(R&2kt,,mCYd_;o6/B%:QedSJDs@HPYH!`.MN]H%(BV%4_72CW_e\f7Ti'7GTgE4P8"ajt$_%'km",'sc)U5JlNL3Qnb)YY%.7YNg2XDW4ImNFJp+tCohqnjem;V:dX6MTA4"t&h3i<]%h0]blJ$\T]P8Rf1VUq<Fr1+2g^;,+Wc<14K6jfaYm2PtBF[pekllH8:D)UZ\Xe,j8,AluXJ\8ZVVOqf0(jJ>R&pd'-/Ppl(J48r+%WZ]8cP<-hp&>.O-ZboNE..o-pVs"QAbt#g"D(#-QNP><X$g5:N$5!SjW[X7)^7CV<%s*sQl7:I>?eY,G?&lFT!r^^tX&gV>%A24,%`LhKgpGsfb]8q4;l.XU*nQn7iYbs7Ghc\E4q=Cn1/Ts@V[;SQO4,@MCo2'j\e^GB3Q@_3n&aIO5DngrS*XA>eh7[)G\TZ/.!9KdF%q4=pANu<?KqX:#IY,Cp3Vem3#JTS/%e95k*]R/_#_(nXDa*\,oQ7]H9F)_@B^4lF;]#W9J-W\gd$Ua$_.^m.Xm&XmHV*\D^<k>ju%3MRBKUT@JHm`nf%C\ng@$$S%HN,nJd.9W2B^GtQ[rOo>NJj$,I9jakYJ"3%)@WFn$(PJ?g(ZD`?Fj8F!"h""!eS-\[0,Hd=CBIAE%;JD)H-Z@G@h!3@l7P,FjLj8*HeQ!N(K$Qk^pWjoHkW)AbXEfnn;7O(+rO?f3W`Am')S+)2;]do<0_^oV:l-UCc68RhNa+N%.&=K\%Nt^mRaYA':Gijp^+R%/Gj1"PGIoW&OcdC/F9MkB3F8iP]XD7)N:6p5'HN31>MGMO2%T_!Dp=K1.o;t5r<Qe:6+F="ccc01%ZpOD\%r?'k/iQ'mDkG,)&:C)#C/FlZGG.c`s&)HoUOYZ9THrN^J17:h.n:S\Z0mU1;a_IZ)L:jCm;nWY5jEY[C\ZVGJPO%T+5:YcIb((S"%eUr?b48i@F+7R$U1Ad^jPH3reA2:InXI=8'&*JFe=BhrV45-Rj_bqSkSg`USb6NDs5)):[@U6*XlXV'92ginPcL64gn6mV1^=F>`%J+;"13drZ[bj/aL^Ga3cb,N1+in%E*[J'*s]n9ZVaDY'Z>2-n/k/^UXLJP+Gb1Npe)F-m)g\;"EXIiRU\^Vfa;hqG(YrflMPZ(YE%o'jpcSPtgn[pYIa9-f!\aa]gYA0#37%+1q+oQBt,&VTNjL/m?#SU^G7LPOO\K>83FGP5i>DY<t^BS?D:DXep5:)B+<l0!->GCYgZ%Km^B+>M4d#/j6te")?4u>l5h_PNs\T*rOZM>>+JakQ/KG:4"t9#S%$B!IpMNqs3M>]1:-Q*''=0@B\F4!@g0Uqu^WEJ1(#:cDNLF%I..(/M/c<d(U!s=IX\lqSu[Uhi[rDuIp`kHFeS$Q-onK)*\Y!;?QK#c:07ZXdWA.L^:\l&4g4N05n\q./V.GqgZ0Hpgt):2M(7W\%$D><H=T$*VlUPO;IW/hI+qN8WXj_j$4j3Nm`mXBH)hc>`VYub$D&`qeaXl3!8/=h^A(]_pk50H[]72C[o<3*%ki'(>bRM`Cao("l%Q7PjZ$ru#kb)kS5V.Yk!51ADAa_C4ZjrZJnG9t&fcYJ]'8#"8R;l\71!h/h/Ri@D\rb$_YZ7GZ.V8i@#;?+Amc>1,JCJ)4iY>4a"%A`JVR<Q$PjFO30<-Ta]_*$/1\`WKRW*g2Kb3hLjaG>En8+6+^`IWhb'LhZ=IEb"p+DZY>P>E)3m/o&+%MP\$dB==*Ep[GTi6$652%1^fo"I]p635O[EW8@qiX4#&uc1:"$"V0_EiXW1n-n3d$[VfL]\\T_+\XVBHc1sBgfP:I-qaIq>_n]=kbT_AGk]@Q;)1TY69N<fH,%onNkooNo$k$lcRYo^Q%pFp:CY^_q;YH.-+]^H)cEoOoJ_=g$WJ":^f(HfEUD#3E\D=^BnDp4Co=?!U>h[CR/6kb?oGQGqnNIaFaP%IX7\JK>P@4LD?+QLF7rl2Wt6C?b/E/*jf7PUphG(QU-8@^>/^%$g+[Kl*PA1fsSXdLC=M<q,m7Vl;d;5g"FD3Z_MkN]\tdBW]:o\%qZ`bV8#?**4`jO"j'Zj<2JB^H^QLVg)DmS.hs+"S='B"RYl6rcarMEZBS62r\bZdWFF>mm:Q$_d1+9Ckh8Ar@%s0:jft+^%)Dnq;%Fr[qg@;4tMGV'+/MB%A_\tScPots#p0C#0MMVHaCJd/(Dn$ek76!*ai\ofcA+uQZ,m]&q1O-Zr$GBNq;9"gS::LI#ha#@Zr?#Nm(%]ddQ_6,CR[@JSgTP@J+)[G,o]1[+KYe_HHn*-?=6V2b4VO]/a!TL#R>kAusuMVQW9//_F@X5-!p%=1ejHlSXZ&%\7EhCTMXHbMdS%'Jf$s*\.GsPmlBJF1Y\uTJmj5\p]_N)0@htC"@2jYWd]jH;4q+63f[@m[%7t#2Q0%n'dc?6"(I;fVY0&cQr7o!XHCeS?ISUHD+m#%QGNiSUTX2-_"iW7]"d)"PC-QY":fbP\@<>9k^3+M^#L%G7kob3h4j?+'eXaXKA>J4.^8Z_5p+b&9^&.-=8/aA,*;uY$>O^eV]WY5%TXbZ/3FF>I7;;],"tflOH.%fR3]@:lQWM;%VVEQ:rjKbk*Z5ZfIAYs(E:tterZ9R.d/5;gSsE7ZDgTMYBVk0)Bl3m*!ie)3*Gjhb%X>!'p[g]!>mKVbn07,[QC:,i<#;(rk_Gi;Hc%oFTW'2JZJeW9.iC9ec@19_9mhU;'/tVL$)XN%23bpY0K//(_,Z>^GiLn]A9$c2F%7-`*p[_<*dmNh`2me(<T9<'%^qOT#OH2BW".JpJXE1W(\Z/"K]pIFGNJb?2<6D%/`ohO@iHL`r9@@EJ$NV33sKY]U.:KnE,3tG-G%:\U"o0D=f=4m/,hiD0u=msi3HSt+!0o5k+EeB)K#%KH+cnb5?5e(u4n=@0-='u6$Zcbs2Vq5p:9W:QA@0`:1So&4W-;rKXp5V1i=%j&HJ:HHk@._Oo\uB+CH0UCb&`E0oOu^43]^L->e"^:>-Re:\[`SJU#=^YUA&T7oL0AW@.J]"c@97mN"spar\'4tWu9I()G7-<G4f%hKmo@NBf&*]XR]S4b*+q^*H'[TAHJ14pqePbcu#<Y*`8<k"g1!#Pcd)QcXX/a/\t"@;!cl%N6:ag,iS?903sD;Kq:lgWH(W8ql?K%&3eVT/#>PCWaFWJ*QNJY%[PP''QY/-9;T+Wa"2&e@LY<nf!1#)obNtf`aQ^1^!P&EX`SW@9gdf"T7jVHSTEoDa%C^,<uS0ub9;`T%7'GeHTL".(Qg)j_M4G;8W3DLWTquhn%-nf'l8E`\:i1^7n3PIInR/YH=L<0VX?l.omQoHg=neTEag)kuLHOT8['R'Dj9uB]"mZ-]%YcMJ6rY;j@O5N=7ls9CZMgE#!dDro;'(%no:p:0jqgSkhoVrWe.'.!b^+=r?Q"^1@K7[h<3^l,Hcsp]b6gO=DG^oHMHr/<A]Vr2r%:\4:XJuLB)DNt(2+7^a_V.0'f4fjs7kk@bg8X(f^?_A'h1O_.F\OmP!3,Y-Y\UI[mdTb3ZJq`kZ]Jf@=iZEgQ(k8Q>eZ*Jh"'8ru%O0J$(TdBahT?X@mrI&/cn4?!^6&gii@n\TSfcb`K8J.MC\7uI\.)G$GY5''?r)g.m<8>28@!^<4T1V+n2LdKQ;c@0Q]srJ_n2a7M%nnYo!n`u;dX/4FNQGPjZ2KVuP4EI`Y)i\_gV].Mo)9:Ka;r4UPbWkp:n"<6tVPNr2VmJkTcfdLj\M85Ue)t2cm(`esX\<Rj)X-=U%p8-nRe\:^-I)-Q'bA4^aB8+1f_a!2T0>/40J%5BI*CTb:E8*2MlU0cVUAZl2,XFL_FoQR0-NR7-1;I))rV)4iS]*qhDn:,DY6Vm,%OdZujequ11`s6f)`4V1Mp#\V%e8r$2@Ib,Jo!+e?mH1F8p!au4A'r$(rX!f/.c9gtd%7HHJ@PK3`>(`h)hhQ,Xm']SYPkeA%F`,I%p[U6/!oj<7.dq/sh,)o:B&%r:C&$]iQ<%)r>1s6^N`k(:q.MEjBa,#X<sT6q'Cg+dX8J#Q@o9;,n#i%i++W^c>HQgfOIPj^?4`QH%DEPDMd"CL3pug:o0;D'e?_a4W`N.)]irb2aV%)=9=&,e6'5]Z$9%ME"VbV2DlF"8<,4a!]&ukBGI!!tHXQR6<Vu&o3(tBqPMMt&;%(eo4N\#",:r%WI>M2Z]+_SfuPBPVVcL8Kn=Fa:_lE'k`+JbHg>k7t!Y3%L!4m#fNs,&DUGNsT*&l1I-IiTOYZ`$2Y.ckJWI;BMfj%H!$-$-O2CKGeI%R=4KN]YX2_JMkM&a7uFuQK4r(8@t2VD0_tTSOB@*3!q`B]mA]O:e"a]^Fc0N]/f$FGmUDQbXOsk92'l5c6=o8p%Z-<9g#S44jd0e]3S_s,:]:>=1s1Apo"'F`?\KSl$U$rWZFnX*QdITt(e/:,>LsbgH(c+sDZ*Qa?'[%htj[Td3QNku3[qjAl8Ks1<%bc$l!5gBt;d"_(q_,`>"JfROM0+G*24pt@#[[&9tPY!tq&BE;D6#%2!i+uGAZO,4'U7jqsgT@fLVS[?:>$>Da3S$S\"s.LqA#Bqn%OYMOTRn/WY#ugBYQ;^Mr7B'mXDiAPc?6%Gs6r\fKY%++3lBWcok5s(jbT=5K=q=1%VWsW;?2nII(DdN$-IAjqd.t!gC0V"5eeWi3%!!mANli2^^p`OoCHqL(@^p`uI1'#Z9`e`_!"q[NHg^Q"ho3!0IFago7m)r'f#EZ]\Q,nEU%FO:H8Pj?JosqE&a9np0o^ClEreqDX%*,pDc\.pU=@X;F%0p!Oj'3MM14;\rd^cc\B/UF>`,B7m0rY^_Td`-NuLkk&4a%PDjp_)6@Eb7=R2Mop/7`CDF,oc1V(idY%EW49)%Y6I5Id^Y7B1_3T@3B2U;iYTe#mL=Lp5'3]HL0g'aWWgMZXA=HXp<lD+I<J/#2hp3;OW"=hkAo]GL(>Q`?\:BJ5UXEY'>t5?Sd)AJ%>oH_>Is)E5DIn.\!$S@!]60ED)FH1<Om6R<+so0J%!k$n>NMW%%)6Y@-9SlHo'H#>ZV+h:>W`O_a=rkn*G8ALGeWLb4W@j//]]U9%_AGN^(%1%6D+],lB[\X8!/lq0`;n,,?$:E[d"Pp!;B/sXK2pe+N?b2MP3N[bkmj,#DG#k,q(8iUJ;`Q<EMX\!<URo$QPf^&ltg/c%1Jb_IR5.=lgGOr\9H`soqsd/`]tG[hZ29ALJO-tO\NNDH1Iioc0;ER6Xr3WmnsQ%KM`5X0.$=B=DK-*VApjG%[M>Pda60D<[=n=g%YVU#XiWaDh:NprO+S<_L6:#nf'a2[0I;pd1OW<cdH^(9k>6%1"EGP\N!boOo`J`klJ^NcJ85dG!*"BJo%MPi3Ca]c`K*R1RR5Lha%ZWT8V6i4*+F5U`ab:#jg_QgBE9[(n#:!)#5ll6I]YrJ3>[rdC3Ngr((YV+kiYUBn5#TVR4nR*s1a%\#og"`MmIsE([!#m`WWdaUs%M]$AC&\s-]iJ_c/$eU_/>T+74+4"Q(1H$kTZ*J5!aLQJ@)fGGh,j'/H]9l)Q?C05V08Z(p9UGknjG+oW`%n=4c6bO@a;*Zn;T\m.%:$0O>H1T)SddZsS<#S*X`)_#b`J8iB1onSs"ZCB]*+SNXQ\OP,.2)0I@=.Na>4Q[obN6]*oR#5u!*M:l'Z5Boo_Z-r%/QAX^N]E]%ahl,(\/>0hp%pFG(`)4QPMnq=Bc&E0]eR6VC`u%^?H,]0$C-=*VUXm"84.SB<X`9l&fl*(:F+=N1H.!.Jdh6Q<+4.oE/i;>m6iE.%F[KfF0aKP)[bY6nkj1IfM`qI%^@W#I%q61iQ`XRFS_).b$hQG&0bbj;f+V]W&\AZ&'qqpn=#Kqcl*9[j94X:-rd<M7BMo$q,#,2c%Qb,/!9-3sB:;B`d142]faDs/YCg6+>]')lH]XI%[k'T9:O8W2[A8<Q4P`RFagriTsjBL&8Ll-cZ"B:$beq4RNi<nJ,68=)Q_i,lp%K5aPj^l<#b_3TeQ>#'IZGo!f'rVRq'Wg!^&ZdubGB['FB(L9>i42#(f)S5,>3[;L'HOX8&"WaSGS3m`kF9S5E>&a<V]''L46u"nC%FO:hF,LqBEf$HieciLVG9+>0K"l3k"i,ghud1pbp/:naSkb9Tk]TGVRdhFZ]A)ii\f?j=+P"4WAPlne$D#B5NHej!RGQlYuU$eD5%=,N!.PVo:PF?S$7LV8U1+^"r;LF`?!,f9h2HH3oP`4"4odb_TYQ5;.hS5,gMbkuDeM2>_RR9.arVA@!aiYCFCI!K4LZf'<B4=juj%j(h,Y.d,focgWAt,G(qBJF8n):i`0e1(kPi@m!hToJ0"c>aX4bLoquU[a=cW^IVs7YMXcQa'&SFCZ?a1?PS`D@rmJ]DIZf&<K'hM%0hY08-;"IK.s;jFpeSgZFrTU!NoB6A@^hb2<EK!g8=_t/@)<!Ud:Po\->VQH2_f+eD[P'qWPNnFLpfLm-BH+eFJ$r"i$!qip6$lD%/MTtY/M_`bI\W.'=H51-])Z5-,R22,S9]a#SBH7toAk+p2]m/D<d!Zif^<Ljam-YCe?70S*F$SI4h>#nek56&j>$<\Lq8ukV.nd[%7pcc("N?'SV5;Nf3Et\$^X,#*Y6QlKBSJ8=LE=[\RePJ,fr7Kn`#-)I"J%uRJe6@1:jt0C(4?P,,kF?j1,k"X<m45EZ%u5tj:Lp&%[)j*JF8QM+In<D=Vg:hG]Uql;%&U)AVQ1t(\73N&p5goH<Qk2!#`+BJ[K=bfEHcDI8WuAK\?gMW]BkN7:2T>TU5_;dRLnRID>7V.%iMM'+#GYE)&N_":(,i&*L?t!>isWbgIRKa:=/?5#0J%/^:]'1g&^,icM":>@jMm+eYaE@%")il68*?p-ouMYckFZUc77Pj1H1f8J%8tU*LL4dTXb)aQ,a*G5@L]V:_5*r7&bO`jJZ+E<E:ED-:Ca+boN^<3lpe*$*#.a@WE,mGK&uj".44@3L,uPCNC,1j/4XH/ef::>Y%*gqg5q9N$.!D]m^1*K\]f-A0cbO6a\7qQBXO,SMHFC<AFiiI$UcQ/?`0h$AJHOo>rQ$C$$)!*d$ANE!9dN#miF(]*G%$mRj3Z]V0%:MFH6O,U7d(!Fs9ouN6[4Kh7%m#8PrJDhk*c:OhKP$N7*bB#![cG?oQ%gW(pe?-(,Qu&3Nati1$9=*4qm`*L^E91>Y=Y2kM1S5Uu%9B>Y@B(e!eY`q<1;2g@*jeH@fe:gctFCu*DT#XS1NiK-!8X^+<0#lJm9q&[XC*b$2@[3%6c,Ds#Lp8WoB%hPX+HCb'rk,siZ*Ln4%E+@2ZRo;J?&PM[r`6Gn8DK6_dVB.?<6PV-)k$&?T9873ZHFTo2eG7Y4TuAsO9(;%j3%q`LlYP-u3;Z[7R&(_Me\d+%^sBP4DU]:@%S'j5a4l#hTqH.0slH"7ie(0H%O;$m-/[>(e?9+-\NYstfm@SmKe_d-BH@ZOeVGnpj^#2US1EL<tqMDAj9#U12L)PE^I_gJBL@W?U%77rI'4@JBp9l'<YkGt4P15%P=&I)eY`$</kEZ.8?SAt,pH))dNY&KVNOl:R^C@\1S35U#71YPdJ#?!ZK3uMK\4sHN:H8YPeU_#;_%Oph/Tor&8HbBQ6F4Or<P/1g-+FqR5s?TK3H,VYO/292ZD^,(O3.oL;8k>IF709/%\-%894^$)pEB;e@t(V.%FBN.E8Ha+NbkU'J=%\<p2`lG]8C;D703Oa8aKMU[QWA"[*C?]=h=mtUXuJbC??"=+kE<-.iU0]3d]XMm5Y(1;-gD<G+1B<7pA,/r\E$9,q,cr61Gg%SPP%FuHO%39%CeDnXJ!$5[AWcFjoEaK%#p;E.$EH<%lQV/Yr=6g#$>^tS(q:4u-.Gg)$66)O`R</F=pTN]^V5\G/LGQOqtn/0'RkV1P]%(b:mdK+hb)J'=<GTuR;JWmS!oL#-@W!N5"q#]E2N,WVe5p#;N^J`pq<J8s<sdsjq)^5cC=r:tam=]!cJA78!2iH=9_r,e4J^]$74%5F#dIWOS/9CWBHQK3)g1bP$+^pa0g+C@r@!en5`lo]]?$9spQ"-#ShobJA=6l\d8jf>SI4&J]K"Flqd6A5H]Kl0RTn-EPke3hjKo%^Sq0hWj$j,57&?PL#-N,Kalc+<nR5KZ.'H=TY=mEV:Vlf'`A2CS%m.=p.G8uG$O_jFAMu,7X0V-V9@A;aIqTX^>i#O5-40'ZGNcj%Kb%A55FaffNo%h.c%rQ3p[Jun#&U5)#6fG<T5>oBf:&er'i$p(g6Jf!aX;-SZIS9dBBX\qp8p:BLS%p`HPDcpmq\6pA)H<R9t[gY%l,BBl>K*Lt=s9E[k`LVr0`764TTn2nZdcW+Cd<sC7N6R<s/<R?]>s1jXh3aUrM<jh&"Xp,._N./Wre@,\XLQ5E^AE_/!`#iS)cI0%mZF!i$`Cs>Oc7S@_0aR16VX_6]Y<TVhr]*=>\N]8Xc:@R)-e,-UWVfsK(>,qZF8u/#3&FXjGP6Y%J1L:P]>r!D<sD8!?'.*36ftL%k#b@@T-='%BD06%<7;$(!L@:O^M:>&LR70VcFHp'"hC-*:7du\RP#uh`1NeaHSo)*/R@"32q(jW`V3Q^;G@tS'g::X+[OY#6+(g^%3Ju9bdfm^)%'T=dX6G6&B!8;+7l?hF=>h*-MS7;99c$c%(KN=II5RR*<P-R!Rs-_qd-`sgrk,8qJnjO>U'WVWdfn:M&IpVKC:^):%,P3bCC:Z-gd[[?%K";;Kn4m7`(Y%"14,#&aVOJOC`p/5@5]"#H\e'\B\XG.LQ7d??<U=J3+MO51HSo)*/R;iP23*l$dtQD4bd3`j%W:nDG^!<UGDTo)dF/l)Fg*'[QSQdsW9Y5>bC:]5Bq])[$JuCg&%&+<0'W8lFZpU.Nm*2J>meVu5Y5u-riR(An<YG''Q(3B`KGHc%%r.VIe[#6C$Ws_gMU9ojCm]-`C0#laL(Dfj2cmcM78TEZF?Ejc(J^O?Fn+s5mr=ib=A@$l\1[W6AV0>OOLtPdr&iHY.)Sh^h=W@Vm%'q:`69rZ7j`oJgkQKbf52?nVg#`G_&`@KuZ_.L=Ac@f<l7<arojFPq<NO`[I%/^cFEu/k$QM7,c.>o5f&tV9OH'2t2,4^qgMsb1*%;_kMdS(XPRl^GFRX>H/EYIUu\iQU0^??A,IZA5.HmJ?bc;]nI'.,5+e@@[S6FXG*VIeBbsJT7sNckPD0QBmNO<LBG@cDu4dQ"phU%hOX9Urh)#-IuJ<g$gQ_N^lGBdgC6k=S1'5QkknOp35H&.j6DKTXgHDN2XX2\7^"kETYp?9&?;3J48nYiNnI7Uft=Va%R4H86Ud>e%Zs.P<L5]"*R%:dt[n<Y\ZE#eU6]l_U`c0+grT'lHNUNIWCn08%@UsXj=2e:s11js3G#[m8T$Hk*5j0b2]h'D;`Q;gfB',Cb?;PtA%V6e%W\gPO084F@MfLI[.7tK63FEfI1l`Yd*4/[85aqPD*A(Eaplc.[^XK,pmh-elb%o6\pI;=uFguG@a+"'l4_Qu;Ljq6Ap^!,H"%!7K2HKa^9#*Mf=cbI+2qA6;j_r-(Db.qKPbL80#/=G^,X).UG",f=U\gr6=tSFqUuJ*gGkb*i$Z]4n\Ca_nVHXF-P0$pD:3D=p$f%)-9TJpSPUVlA;%#o"rLfp)EE$3D@X9XQ/2W2oVcY=T*=]j)BrsI-b<kKs_^bc100(oS'[hd8kDF]:NqjB/uU,<V]aa6X_S=''.<+%0^$UBB4;D6Li;)4BD02GkU#e)\B4$jn[cC&5dZq_@q;UX/7WGf7`c4q`r!.VW>K.OX1AVNBK]*&P?3X,1GOqbO&<jFlM:0cl@\7j%BB.816qkM3eViOd%eX%P+XYFRY(W?.02,bTL+odRM2I\E;'IAFqa('2.k/`AQWF??NN<)Pj/E_[o;91re[Soh<Ob)U`M>AolK*A7%d]=s.A+!!7NN59ZA#c<'b]Bq[ZU##E/;=XU'ia-QohB^OYBu3j]`E&IS',r8<^l:9C0Vd5*ReenrP0Bc;iej`V<$q0)GQ+]YcR:=%R;[4CPH1U=J=d=rg:lAY:R*Qi78r\lI)!9@B6fi6asjD->YetK07T/q99^BehJ;Q-bMPO%60Ge6/b?K"r9h#3]qoGP;)ceV(IAA'%FB(:+)DmR30"Uphf32ToGkVf&ertLVT_3X"b2p2)Qf0Op$H(W&d^4gV39dA^ll+A+9`p36.`\rXZ`l2IrcPVhZ2,,7KGRtj#N1$(%4AsC1qfgWt.l\6/;X^IRa07ka6%b?CH3.KS*4/bQM"G7k.<Nqtm?2E(#2VH[e5a?P?0h3ADc`&X$Y4MQaXY+HG%/+N8G/g3V/DeE%(CrEe1#D4*>OO#-s2;_6&[g(3?2/P+itIt\k0q.dJ@+q(B].??%p(rCnXpKOkmY%grCiS6'OLau5$BQ-(:1N[I#Yfo`X6f*;4d:*%VMS3O68`%hhY>6\"OjlP,_4?P?ijM>-=eBldUV``Lg?9(=_^r)!Ea5E<S@TN[$HbZ?ejEX/9)%hfo31":Q6)_W]3#cK;[ePq!aj,%2Asl@H-o8]SsIX2c@U+IIE^t+s#"h0$Lomt_8gqgpXd/RiIe7,jP5X,qrtgQT=D:+?+UrkAf\4baKo\lqT#c05I:-mX?0<q[p#<[%marKOJj%:0DAfVbE2l9=]s87N1Tr#BYq%n//&2Z/pI]?##0P?"icJPMFC;I:(5HTW?4Q./,O=q]AWcc`Z/dN"CMkmtJ0&eH^AE)a%(f!/2\1KY.5gZJ8S\!bNo>dtNPJV8&NHI^D/,@idXdm+eD"RY1)9S",PrJFtMN/3#U,m:u[1an:@VFfY8U:+0Qr:`@6GV^Qp%u!e%3PWS`:mo&f=J_N2KfUrM_-b#acZsFeSuG-*G+aTI0/cC7=4-bd:Bn(D[6,*gCeWo1P!tfZD*ANsL@U.X48r]2(9Sa6;usurAdQ.E%>m2(S"u+W-)IZpi^/<4j+*jk9^rcMrdoHM'j,L#=o\RAIBbb%2)SeaUQ7B\[21UOOWW;(rP=Xc6WrV22!;^Qnaf5=cPf;#5>BCUQ%3LeDr`OM/YIga%Vk>FJs-BG.[RefoGO(IiW]9Ftq$TIfQq8V7^5+bLDa9h7f^h]CarDL@+0AKecjU8.-RJWh.F1K&+m%o*Do>[OP%'qm].ZPe*JeBI[`7GmAhLJ"_[SIIIU?GH8J6d9YTT<kmbS.-3ZY@"Y<aKHseH`pfKXaX3>%2Eic?aRErXM/`'Hi9[Woo"IEYu2>^%DtOK#V0RrFrFW1mRRaf\=iiP!6DUhir?f.k1AkIn$2g)Fh!=.Zo9d!C9RO&$j;FuHh!5bUN]93=DUNn1`aSFcme)JRFGV`G[CGu-%`McCu_nCM"rDrEiIXXN][.jDkNapPnlPEN\300MPn%F1t]o9^eDq:t*Xo%nUEN`_kiO^,8Rdj_!kVTd,;eRMmf.YiU)pPd^mU!Y9%MRIEq)di=Xmp<bB:ca`Wg$\Nk::O&XQmpM?lShC8g:Z\lr3uNVlBW+?lSf4=a1p4ZZ:m%:W^r\[TBK39-Ff+T%ej(JB=ujBkp7`o%AQq_^hWku+X.M]TZet'bm41`'k&[_5(pY*iqF+En9lR:CFM'VqO%jVth]u>-e)0KScCc5leSk<]pa3OV1[70<)9C1T$PMEWV`39&%qF11o*;L5Lg;g_TDmC%!VS1S7g7Yl7b`);mg%AR#"X\-Q26KS5k[)#;22C6scJ`*EkZe#JF!';L.bqQ.n]g4@EphtWm9W#XQf'@K%M/oa#me)K>$m4[PTAj1lk[Jes^80HNoa?o;k,j)@Hu.5XrM"6'F%+qu]%8UhC_,Bham\n\^=@-+^SM`UnM28#][ng8jsdqiES>d<%!iKR5hr@J$O*e(fW++u)eM":1FM`D'!]JWK$50>bloI'Ra56+u>nH>Na/6T&0;oZ2E?@\s'IUEBDgZ]p4RVm#%PG9;m@!'B5FXh=%DtOL]\"*(s^F5%[Gt0)4I2tJ&\-d(+iDn\<iS#.k/oKopm8<tfh4#hEDFEKtiOAFp0'^/%iMtXfooT%>O?KU[Fq1dnQq\-&*O$)Z%m-rb\W6Z6ug:)f98?NA:([=F%g.m+@='FEpYID?HRqHqHR:PSUjHAa_V'f?Z:QCT3q.).fp/+k3Ri=N7k<I^L9iJIu+-t@:>(tDn%mM]%f5<Pg3U3]0aDm#_2^"%Ro3a#,Ie4FFKV9]'&G,Y$)f.2"#UjoB8T:KQY@d?mdmLJ)tWOkIdP%nhM^8Qh;itV0jI\4UUb5FZ<%f2qBn?N5@`]/M8ODYd!jl>r))8jfqjoB#jg;b/;1cI<OQB%lM;iR7Ppl/qP<YGA?U>\cS&E)Mu;:NrB;\PrG\]m7!A'lnI@?m:kR%FDkpuZ+9E1[Nqb\fioWQHb1f)%c6o>M7Ocop?q4om+[;cb^FG#SgtqQI<(6RDLK2p"t:;j/-6;`n-\imQT9q0Bl<<pKATR2S!8AJ%Ti:W\n&&I=]',5J;S+-<bF[iS8d05Sje>V9=KDBLp%l/TCY6)V;qMO/EQDd6j!WsZXHFu^l"t:[*r@5h'!$6Q8$X6PmZVocD^P(Z%D`>enFf(=,et`DLZe\3qamWlT=7\+K.';8DV7;4WqAc,Bajo:F*`ZtT8f!1:lYr73WY<SJC6`,+^9pTj<RP*Rb$$US,8dW9Qp$;!%1S'#@fn</a^VmFN9(.[,nlp9?rZ"a6VH>$L;,bOQ3r^sTb//'8=^sQJ,V^a\OYab<1RR:R.%"A2SCtmQ=a<hjHN080'#.-iTARo-%Z?pS27l;?s0D/B>As^eA?Or!X2::71S<cq[oh8kBS'G)6O7n4=qnX0+Yoa\9%ph/qnMZl>n^su8+#T09!E1XaJ`<$%<%!kY>A]Xq%rVAZ_].^?l&+kJFJ1/spegq]UTi=7Ln4:&/`k5_5pjKM#&.%pgIB%//nL-mW+6gff)W>d;Y]40@8T/3;*BkqkY<3+km,s2A1m9!Z%e2SRXNI@[rY&A"FSp.2VV<:Ht-grTK5L#DT9NERrJ2o2"UJTWTM./YD;RO0-]s"M7kK@b,_nNO@R*f6NmQ#>*H7[=rUUNJ1U)26&%?!?NskK_Y)_WD`FYD@Cn$kWV9pA-%Kmcr=3A+.D>]=blW5d6'd%Qj.1_Co/m_J"pg,.862I:9MKD42RpUHKXek,47r`r%[+\L3Pp%WFag9o+U`4@i)f*60l+64^Jrpetm;^o`8e:q/'nl9Uk[k4Cg*PXnc3XY5(2]FoL#(\6SG!Z@Qe:FKOZ`,$@@g?=UH>#KQ+"nRY]\%I!T[F]A(F@pNbeB]l)@Y@96\LMChEQe8W$8%=2)"b@"D=1X7-?Q*hRfr1paXm.XTq@dM85VrF>p61skFf00tBPiL6IFR?>0\NgA/%NX)[jZn_=f%'JV*oNpX,-/gFP56$V.c'q$Lo24i0Qg`I[]j=XLY(#4Uq&cW"PD--n\$aKd9('A5jlu!&$#T7@G-,sA'.Idt1TXUF%[NFA]6629rS57jLSr/aZSA@Tqi1&k40&I-;8eScGQMIt6\72eg5/C$j9"nsY5sj(0pr[0iR?8UQ/,6NBUHr*NrnGNK]714'3(IP[%5np^6Eg%\e^XDfP,/t<9-,1PA2FAE_!".Y:h$ckP-QL^V?O7tIYu[XeN(1bB"U#F`)o+$IhN\SG?Cu)&X:SJ``BWeMDX>e(Y$4tW%"[J09"(Zp9^t!Xk5gd(l(3^Q3AMnD5[26;<(tZ6V=%F,!eK=HonOoc!"eEXcgjM,iNfh-uXi;!sVC@<>HBWOUYlE4MZqkTdR$HDc%WHG.7l:V4:n&\edO/h+6Y+`FjQ^R.',Nl!+Ub._GP8a.r/fmpi/r#FB^FmcIjdOkBBs=Bb\T*>Io6>d%D4c(`PT]8>eKMKhg$XIl%f)8mYgG_kD-Uno<Jmtr<fGF&con,)brDZ4cFO884U:jBZk?65fR,%[H2-\rSF(e#32SsW"O@KHWf0"F/dlG_\&oF?tP5DZo23A-s%bgt$o4'lXj1#qE`[Ei@['TY=G7jEdhi'\AODP":S"X\S8RJ\\fN3a%@l4pmXp:eW$*QF3b[t&p4*TdHkm^?Y`h\O.b8K9R$J<K6U%X<=$r39[34*KD23_%8n_;,IE$("NPAe9^]%!WlGDJD_DT69nq'n-fkAr=dLC-8l-a2[?iG-4hfC5fcFtJIK\%N\VIc"RW;n%g^=+%'*L!;_(cT/k*Cr2_A9i62fW3Lmb/dsg_CY*S-@k;,3<26!<UC[b!]_/i8"M;1SihlGWOIb_ZTLP?Mb(RQd1's]*iYbket!p5(Ui^%MKibgd2^r_i9A&0QWROT;m<,D.DpU+)u7V)mmb=1)l#B0T0`W^*JW#\pMRLQL^V@ajVs7e``Dp6bN`Oojm0d76g,Lt/WotQ6#<Qp%SNPUrg3e2',?@Ci4=B;k4n;m)n&@*FbpdYVc#]f%1#c<(D@RGBbt.@B2]S^50fLAP=DqjXM3OLh6daE>KmstXEX`$qi`Hm?B%[Uq%q%+#O`53Z0eO:&L%@VoBMN)]i6Lf&>,O=\b+uLB=AOH93:^;`&)<o#GTi3P\fhSgYK\3*D#\.,uF%E,)?&Y]-A6QT.1:prj^,+,:%KBUd7=BnCu3qPG[**h9>2-LX3R"H>.VrO)D%UMm_LCA(23Y>[&c%/`qk\\r']0U__q3jjZbN8#le%fjl24O<k*:2cqeb.H`J@<1<%?1'^/IV+'eiZ7_rEe`JpIdWb0c9&A&G@!;u]^jp)jm<>WeR6U[KFbYD\g>8dFr=:Rs#!s3Og!.cH_&AD'cY9m5rMMD-Q$a,4_eAq%S)3&"i*+<]&QnH2.MC-T*I"4#NbpG!hAYgQoYqVaq%?lL-n^mY1B+_C?V?^ZToleD@XJ9:*.@U5BmIW/]5"o\l,C<?+QI7F=>VC?%G#<:M%)`HeRIXV&nd+\raYXY[dtK7^Cqo(LcL"hQk+:oE"o!XrdIo3[3of&$bA/bg2;S@.^lh5#^mL.KqSoPYl0<:pf;j2KKD'>.%_g8Om7",-'I!M2+*X#l8ItmINQq#_=M8Oj/m)\QdIXK6\@#do^a4%=r2GL[YhR=)7H7Ea(om0Rm*O/i'#b<3or5I&$nO)7!Ja5rg%1<CPRoh:-J[_SSNF6Wf8PMN7?76C&Agj&f+EF$sNQ,trVopL/KpNP-B+T2?.6]W]]3*bn&n#iK'j^bn!<kIc>U0HoI[WhCq\JsC,%bh]e?B.YYqjkNV_/^[%QMh:2;4fXgh^0HmRFME@?+7J]FRL@h9fF&=Dr5MO6rJ<>AW3(JW@-ZJ4Z1XpQQ<`2:E_SRdE_X0:Y0=TH%f=Y_O&%)(Be$JuOLUYiT/]@."PIq:,Vq_%-pN5<'Je[QDp&KYi#Cim/d!'J"gRf>WH[@Cc=j%g%0V9TgiV]^UjeSu\fCmK9e'BrI%jJhQW=[3BIg.paFjB85;F>Z%DiS*(sZD'IsZPB33Y?DK#q(Z5kruuVnor.:%Q[r!h8564;"Yo(;GT$eUf:3^*_NQ$H@A9gk,(\AZ%=LXRV*FXZCY4=uZ!E-%<Qej>"7DjcRQ7qEWLC\W#D'pa:%[brKXqAITs58Mc15a]dQ6U"4!0HI9g>'c[g'h'DB!m0\+q!tSiJ@,F%1lAe1M)3Z?TZHrpjXalX*e>o)S7KPQkk\FOZJD3$_l:Ci#dO?&n[5W,.;:m0h\:ni&O,@>QM!%gC]dg5cHOZ1r]ckY;<I'Gnu$Rl%r93haH>bHT?OQ\J>,%g/e+D<pk?ICt];OKb)JJ#(_p@c&@%k50;GO7HgCg]4T>!DC"]DbO5</F70TjD7<P#Lm4@)ZXG#[j3Y.lo]%N]5\G1Ng+i%rnIr:4JK'f09_k^Hn6a0S4S&iQdWtVU<`Mf.4bP6pT.+:?lr7g&Y(*9&aic4b7KMep#!:s8<U&Ur'$mAK)R*4$CU9%l$>,8V0?ok-hp]Nk4"T*VbXb]"'-,QIAW\QLSt\SBYb*.e;l8:rG#uM;AuY*<(d,7RP$8,+4`%om/>X\o4t]3EIN261kaqb43V-=%O:7\,(Xkdq^UgmNDstk=es=4(J[@Uso/ps];*pQcagK4<,[.pL[Q`)nR7kVO6n(Mk2)f6"hoHbDWF"E]l1!5tog?E'dl?HTq<:sB%\83W+54sKbfMi32lbQBi`I?a'3389N",u5S4j2JDNI?#`(oYb]ifF:/O[9[;icZ/^@#_CC6(<&9_<q:Sr-sG&iDUg(`9+6gps]Nn%(,C(;_P]SJT(gQ-+FNGV3MUHj$A;3'8>Q56$A;3'8>Q56$A;3'!8=&GJVY%d;o+R=ea,=R/&:;-UMYkPo#`o/eLoA/F5W@b>#+4j%Fc12;Cm"Lp2JaHV^k7Uu?!]__<:>!r)OnLbT1q!Z(U]cq.;jAHbUqTF1jKk\f-'GRiXTt-k,_Y0IhArD#iglegp/LW;f_qVBuFgh%Q&Qk-[liWnba*;3f?.p/'Zd!+R.kV1r8>5#W?gK7@<Oi,Q#?_&-D0`W\"gQrO-%8F!gmaUJ?'FoL2$j2?T'I[@T+qk116F0pQ%_b%cu097gNIbWI[4As_8>K^`?M&lDK7!G`mJ\Jk]L/a(cGHAj7q4sK/)E&qio2bL$#G"c*PaK\M/a$/-'nR,!j,/q@ppiD+rhdm>PR#%0<b#gM18CY7D@gjcDJ+"mDoXZp2ZqUh5q>l#MZ``U,t\5i`2I\XjpTCE0f`A77VR$gA6BL_3*'Y6b4+\\nJ0%S>8]=VdSGnOeRrp%B@&:8)kV&A^La`b\!?;<fU)NX0<,4!OUZu?1<"%$.H$(`)X#+)CbSW:0Ih+3q6\%o`!r!=4im&qiDi;4PT0uo6.h8%%25la4NBH@%S\KC!"bN3bqe1PR9U"9kJWR!?GO@%*'KoMg4E/%n&FSA:;rXT/6#c2q!R/Q)Wh"-o?o/GKlh_/'fUECTEeTRp49*@>%uRpfiSu=K%W!it<d'l)J%,Ik_2C$Srn`R\,/F8g%2`=EeMoM<2ZUDXSqm^)e_]:fYX^IN-)6ZD75(a0Hpq(Njq_L6-Hd4P'4D]_579iY1G5FR>%).6OWQa+-gl=-gjqsEY-4#qa"JY9CACCbcM<Yni0:)?l>n*8"XeCC[\^K7RtpYL/3(l(2sMIS#@1ZMS]0MrX]*IK,F`j,-=R;qTY%HPY0?*Ba%I3e4V_+E8F0N7Vc0l/:4kE44T4C5%je+r.;>a5:%^5gK>s"p-U[DHsjZ;S7W[7dMgL)=K@*p=7cVe2km\N1QY"JgeO0%rNKE5(MB5Tp!V95M9PU1SM$)io@FXO<nh,#).6*Jh^fh\^Z-FkAe)!sPk&k<\<(r_n'B-.+28"i2`+DB4oY9a4A\h6bV:(ah-Ze?%(-Q#+Q98N\b?b\Mrqbr0rr1dGI/W>W^A\U)?O&smf8h6(6p=We]fc*8l^>mcIbF>#jEZ%?jdF3Jf/&Q*?sjg:(]^u9A2(].Q]j@L%Zc\t?q(eB<rFmVMH^=tlC.en3CdXUiV3m"e`YE+rJ0@p2nVga"16;!od,GofVE95%9R@mdO]?=e_hk()DSR[gBSR6ih5iXp/U*cp%n*Q:mAM>%;%>s#21#:OC[j2BfFd@]aLD;0lg`i`iaHI-Wihj_;N35b]+*>/g*Rp=h/i`o4EHk;HhbB[^3"B<A8@PY>k*-?o=M&)j%kAnLa<f3Q7>r<!BLcnk84M\rEf*/;+?=,.rI&50]oc!R;,al;oH/q/?`B&amc:=40L0ms/+7B+jHF/'.A;8bXkt%-*H6qB1e[@OY%8MbAqlaim/0<;]#-2Z(nZKc2YSA"F#)nd:'Ls%/a#1+F;8g`7V?;gE*F$#<Wnp!Nk^:2.0AlIPu5Uh%rZdu#a8%LC`pALBN=<NmQ%nFb50(O<chXAAR#[QQD1XlcKTQ1#aEp#nT][`kJ6^#,(9M#A$D<Q_<S/$3s_Zd70'5sJ11Ua=.M8KtO6^8X-o7.YLq1Wno@UB['F%-gf#DQGG^QfBEVH6ef!@WT-r*4df'N_&pr])d(965<.7rZ^YaiH!t\gJ(RE97]"C&X"R@4oc+_eh$Krknrd0#7efA/.uDnY/$ma,%(jml0e]KF#.ooC#po9T^C/tamEh'.pa_OrVcXm5($\i>![BGTP4I\m<T]Mt2)#iG$HqWk@]R;Zls5!&gkQU#H./6#QTn"4%L07nd%)*[TCg3cS)<2I015<_']f<Pe/Y=,Bj;L/H4m:l(`rRL?7pHfadk_52rrVa!_;799mMhTl7rI">D$Y5KUo=+_Rj%"=PoR!9XEg"E2%E9-oapI^d!c*M8(TtK<O`Z"i<VHPYcG\XkulYe)J"U4m2r[06kq12<H$*$O;Jg@V2a<JgK!\]Xr1+`j'L`c-$Yk4Y<:nkl[A<&Sc%Q<U;+0V#eKDU:/*-/c=]:J`C>@"eQ700A[^%lF7J!_k95/_o,Y$QU5c35JG@6@jnVT8<VbI;TsqnH7hJYPINF(pKhkhl2=XEOQC-%Cql7Ya5*XZqs3@=>:s!lHXGUcEP(g#m$GnS&*j.\5JEcHs7<AM2."IBJ,Mn7j/nMN.%Pe"@7^E/d!PY9#oVgr^OP/tAc+ICI&I>V%3rU1LFl7g*'JmW`BDF,Be#[3Z2*8^gc/2.#9S`!F0T'c:b'4He1&//7\'EnhHCkrMcV,iHEC5u1bkBJ0O'O/NIgnm(g&?::]X9ta%L@%a>rA>G$Z:=TUj`N6`$F>r/D!q7jnQPPO5Ir5GD-ZF9]@[&KS+,uj&I^PK:E/])c:>@Qhu;sHp[2LK/@%3iFjW<W'Tpu^=C*Vc%*"..OVW]5KZi!.@iu-d/S,c?a,/`n$1l678k?%q!"@j73JV0S8Zj]/!(Aa7D^e7+b_B6+s"@!Y=r%V.2./XOYdiu"sGfnY@di;@%%GiQiiaC:9?H$Cg[n/?BXc\`\q8.5-i&lk/UR*lX!_AX*N`3?>M^c4[gHr4KhIUR>t:XcUQ^*lU*i83qVa2cq1T4%/]NN]ptT7c)N%M@p$KG7g!n-eg<L3&9kfEr2Cm'W2#Q4+-@G'&]4LT,0Hh]/`/jB.&=TDrBp+:TV:u/5h`m!27U>^?MN1(j'6dDI-;*.0-*aJj9@5%QE75g<I"Wlb1^):4Z-5,QNEfmSY]."UKc.@!AKi;F6Q^1l;"I-HL`^hXR%s+f;aT!s&"f*,t^#?TE<*;'J2&<;@+$K+DKeG#p1la%-W:H$^u,n(QSu3':q#<$q?H.rl3>:)Y%\Va?nRtndR`;$Od:RJ5M`H#,Q[5*A5p<W&NC_`Ca?M*HOq%P44q[V04A#A6*/-D.7m"k%,64Lu-"m?<`)&S2E1V"e3EdhO*03;g%SC`W9rnUF;\VsGTK(:cH"<58:_[Jg*jD4di)jUu!fTl@=NG"h/h^U:JsYn>G:aK_K9kt?%G6%]u@tF\e%0-I:Ne5*tkQ1mI'c.R`<X>O\eWc!).*ECp+jB9IX(*nG(_Phaq2FM^?ep1grLC3cC2^m\J>q34JS\#^dQ_83l$P^=%(TM=[<\M/[cg0?7K%_1;?\&p+5?s_5Z$R\0BPi7l5mqr&[^>b$h:gF`HgMp4/'><UWr6#nBnuk;J)I&+)HZe6"oO.@7"RA8Ij3Du%6;_1pckdPOE1)G$s%E\lOeE(6dNZb>8qR#]VkS]'/;ZfH6O[J#+t(GU2DHloKifQ"Jt]1e_ZXXB>,Wd,2XJ\+"RI`21f6u?M8FOu%:88_$5sb*:[=W!!N-3i7"*.1#lPYdi!jafofd5"6,&eQAjo8ifG\f%S!^[dT>2Y)S#JUGa,66#>,2qOd"c`bWQ0bRtj*NUsOuX+7%0#\Ur)<emVLPugfBL!%m/GQ&,(F9(s@[?/7N5RHH8YuXEC_B&&!jVg]iB[R#7L%@JQ3IKP@8(nXhh-AhCu@a5`pP;:`hIunnjT"b%eJB'j")]Y7Acf9DaF5#B9L33n$g\:AT95c_*h\'KjZtbj,hM<e!eV(1d(^kER5g*<`qMaELYp8LA")A7X=0Q3Sfp-VB^2s`MoCG[%#D@5bE#JbG1bTJ=$;csu7Lj=2)%PkdjbS<G@5E/"bQ:H@=qYe"'#7HlPR"GP!R1QEDo*DX+Q:O14op\*BumeAfI#%N65b58]&c^2%_Dql^TQt;E5W1ATK#!GF71kd:;^2VJGQouj]c\Yri(0WAJsse0ZFF+Ek^oSK72UDr#*bO,Y64:(:qk4/C_U@adDYr9@I,3aLIOk8%2'c5gYmIE*pjI@C=g\>Rs5;Z0_LIa9#IL-@,Vr1F6MHYBHeZdr.%IZ[0=[Had'HmINS$rr;)3&6q[(-.U);7r!EZ9P81[L9Ju=/H%Bi)ua<'+Km"'iBK]M)0(7o?(E[MtJM,q1^_<n1:^rh%bD?EDPeY3H(dlJuNrH'tKgpa7L/9rU6*W=$;6OI')H,nYST)Sb?l`\[B;%S$4i26/+s.QhfG<Yb5%uHaL4MA;N1"Xd$nr]7PJTBEPh6VMDc-YQ@]U]Z/&MCM\o^>j]Z20e-+tPn=/PfKU4-1#$5S:O/NC3c6Eb%0DW!aS5M1f?U2TIr&&+]LW'is)i`Y#`$`S"2;1T7G@@Pr#i^HH7)Eq8)`$Q+ANp>"j+BlQCZ!,D2F8E8]Lt?i>bXVY!..LLBLZPj%&_=upn6_m3Z3mW7+u8:Fp`E$*8ec!;&ud?O-Hc!G`I(#W9S\T.78.7Ns*4GE4J'OL"L1IPeJR(o9X`\i*O[PD)IXH5q>uZ=q:"a1%haFqP#p#.jq(SL0EKS6D`R3,k/9=MDninX.5bB`T#0WYhA`K`F:<Q(4,'o-q#!*\IS@acC=g1md`[tM!5SmIu"cd41T&k*$&jV![%=KW!E.`F\P<MlfsL1O=,egb(=b5+q5AJdktGtA_S<X%hkV8$'$J:>aF)aT&3rb43H4=]].)fU&M7Z4W]Wm25e1eADHUUU[oc^PoF%7e<+V18*]lp]^#N`#00lg5)A\[#*@p;6;-/L<i7W^`Yb[Rd\?T,oVsZ82'&54DN"uD#f>?M6N9C)K]gc'WjAN*,Dq/VJPk-q'cR\%1J8?P!AO#E%Ut*WA6+mO<T@hDPpH1'OQlbZ1RV#$MPA$c<tls:FJReoUtEFbI%\S*ZMstL,(]^7ULqWqFA\.9-N3Qp;h08tWkEQh%$YW)9ZF`P7M]tk'*r2L-,0/+o]HHeY-NXnO*$]EE/XD:3:^[-LAVHGG.Nfg,5na*qND/l"":2*W[)14l+u?U#Yb:9cWhOMjr*pI9%i"YQ3Pq*L>9,U$;O<oiV4GOP=+fqg).+X2tM]<%hi7<_Z$%FE</rk9G,2p%='ZCGL)i,YlCnUu12ju.GPt7*41ZkhI86>Rb#2Qs@%5#CmmkZu%PU&Yi@@4@s1GfH,l,S2%%BdC!A"8s&n<S<b0JTL&6Oj"U08tU^$5I30YC-&O*ClPJn?m`-9&\+I5Z.`P0:$,6TqgTj(%:*j:ebJOGk8D-N7",QjK$Q/;=+CIUa@lRXM0G@8V2A"GWB$p.j+Ob9ed@_#DQL$G"!q7&PirERlY^AlGjf5u=_'BmM%]2iL:d#qh%W;3]^Tf%O6.0[:^TM#Gf*C]p",mOF17Qm7A*B5tb%W%nNd0)J0qZW+;;+[,r5gIL8J&f$#h?#]KjBc8iLrq+r_(U%H/;PLsP@1`t%ll"4Q,>#m.).U"WOf'LP"Ip.>-^##Cc9ji)$(D&e2!.H;K)&%n-TIkqU<u1o<lLFM8!#-?\t4U>"Y>+7Z,+tjZi]6]b49Y6Ai6%>%A\b+V`sDJg:uVDg',=9/keTa0K4nu7nD[e.%JYF(1uRRAC\U,-:dJg89LWEe+t[5&O/6AP:SP=U^jRW^Li'FK8ahd=j!;n[oR]_J%\.^4.1;%$:UUjXep`a+GCd^m,#nnn8N2_YG'8;G_G9fVS=Je]IClPIc'[X;2BEH@m!fd0aYbqMS=ZHsqb9G,$3[`+d//:cb&6cC!%7rafsJ[0s/%h5P"T[Z6od5bO4E`JCaC+9=o][$+@%8#J22IBju.H84[c/s91'k98^mj+JkECGV$*8#XFPSbW9bb:/M]7ht1,Pk,k%7$@%Q]uZqqaJ!MYRi%S+N*U!dqC_[[^ePhC4>.@8!`4P)]Omm3Oo.'F]$^e#nJ'%`S?#';b36g26mMY\,:3n9/:_:L@bDGuNX/LN%[B1,"17nW65-kOCX&VmD=IfQj;/!=A,b<Kb+qaJ97Jco]>=a7T5Rg5;#&78a4cYVPZ:t;kBj[V(09CUtFXY7#_I3kc2$a2L$nmf\%)@7gFjL-h:58,A2e7#+'!OsFM124\$^mhkuQ6i>Z9#jb.:89\\MQU=%?!nP#]tg<AKBZJT$j7nWr>7'4]HVlK0<g<8SJ&%%>HK(\%5!13\/;V-U5`%lF7G7l/8!E.$L_[8#KnbGG<%8AGLF=)!B6fVA7Be0'[DbU/`FOtp-=?t8nK(4[Q8FG_`#28^CIf3V(n3o[qe4*m%,cM]Wa(-_n`3L/Ac\ui``_&FV"`mY"2^B+h69rR$99Q#DTd5c)dcaT$K%</m=9>GJCmEO.7AmsaWj++BC,0#lCW+XcJL^Eo?)_j*%Y8J[QKZFKq@%u-/=b6S<AVKn4O;0TDm3JrCSh%+P,[3Q%e=)N]YQAL_%#HFVcpVt#MD#;\8Kd3$16+a5,r7MmUe1,:>>./TGokEL%0s"&A77rXrbR56tbCqi.rIMUq,JTA\/9dGfTla+qBSp:'^fQMYH'*gl1b[?D3Fb>_;?^7(!bM]>.k8>*<PWuFQ5<\u5kUfR'duQS%_NQiLOVOl'hf\-^<%nG+d[HsfTLH,eXK[;XJ9"00,j^04!,=BF_JCVAT(,fPju$9RB_WC:O+GR]rtknVNrh?SBT.NO$qQOiE0Z$[%.0Z<DMEk/VQE%b(OS2eq*Y@O3JVheD:S]:*@i1JB'NJODQ"NBQB/NZmLt"Dd9(PrGjf;BRTW>;(<VeA6U55;WBo&]Z@Gq[;G/+5`%@Z,f%Oa)mB0GAVh,jU$c-HH<G"[m"A4-<&!bt'l<3QpJ<87RKeqI3G.Z*,jVQQk+t1?RV\KEN"CGlBi'((2>i,P)]t\S/V\656\p%78"9,R5-*q&CS?@2!&[Y7"#R,2Tb"@0g>^^=p13"`a!&2ADQdS)DL<L7><ZH/Rk=tc&:X,1F-(`je!CW@TYHU:cdXr(aBD"!%(U6%OXbqXgakn0aCFFn<2bCNk".T=]ZH:3UX4Gsg4J#L/7_^IfNOR&Zl6p7C7l[4?t]HrK)FMhAa]SJQMEbg18e#i3%)7I7)K%R2R3T\%rk%b;M2!8R9/IWfLhTLIK,jA`<b>'H"T^nK)ZtCFjrtJ]P^0@I?n`*VQ3hKL*,P9BcsV2tjEL^rA(9X0aWP&IfN$#>7@q.!bSbh!%7%sr$b8N33b7sEmD\V,Q3[M$>V/a<-G`L;WQ*1NP!Ort?R?'q,.aUL^TkHn!7'8:qmi]UaMWGQZn/RaqJd@!YSAK?I_?3q+mg(g)%_:9r6AMACrVW#:KU&b;FBE8Mo6"Lm.'pu!NEKjW1[Sc.%Qj*C(lP:\AgC"3dLo/W<=h%!\P6&Q9KSsZfA=b-?6kPDbhUkn5(1gu_%"eu&,983S,,Wt'u)m#Pu#sl'YO6&\4hZhl0%)L8`9>IJk'4?A:Q^c"!,0*:[*_?bhCI0C&0bY.iGqaVcib0>NRIuq/c4SeQ)GP3(%JdkJ:);gX'IN`CP:P#1+h2+h+W[P,5VKk]>>6D![<p@@IrT2puC[D)9`&4F`+Lo]an]Ou<Ff$R*1PQ>;G53Wf.hXp(^fl>u%.qLn%[$`=S2^;<.(a*ge-tH5CXC4'0/<UZVenBqQ=O([[E4MVF>2s@JPN_!-]oc7R3ObA*d5"-TqW\KiML_/T?X..hZ"Q@b/\p!b7C$m:%OXKW70HLG8#[9if(YKE2D.m`pLesg61a\#D^dab0a^DL&`(24L`+l-q(Q<]n9b\1j@$Isoce)o!H\K?';3HRRU%L"#bnMIG16YF&%@3pP#M:QR0r/egQj'/mHfHNpVP*LYQ0j#/!d[0%UO9UI7R74-sb@p9Q)l[$T?ihMj@5>\&`?^brE['PN@#,Ve39eV8$]K'C/!slP%X!DBL4&2G_VZhMs#[f3q?P9JU@LW&>fTASgBu+JFN:^#0nq&8o9h5Sh+.+_'&p@fmcj%X67OfrGRG5MbXY`E%!oq<F.`uKM3AX3T%J9d[\;i:@0&KuB?+[g8Pcd'BS_/AdNbu50'c(<B0E\\Jb2-HklSAOOun-G$LMfaOM.1Wien%dnZ.fuWc':_IY&L.`hhPoW6>6V2u%r@8LejW`]u_;T*%1&LT#PP@4O4k`WGcrlO,?oQ3+^%*5VPiI=t=It(URAY<Q>(L1o=P7jt7KLo1&Oc8,MT#=B81=J6@MU7&%Vbt`%[[e\U66i?5&STWAB:sr7C>gR'n,eZbJ0km(#!uN\Jbhc`-t7WN[P9O/P*N;4ce&m8e!%"%Or3e'G-(flntOgLN':ft9bKu?2q`3)%fNrUn#+;G&PJnm"E-MamM]j#`<[Qut?k^kT:#7`k"YG+6Tn%(_j&ME`NNPl]+S(\m14PE&GlH4%s6i:&;i(Ji'C*FiI:S(h&coZ?%pLh$/oY3Wo+Qnhtiar2hfn`"Gr^h/Vp`PKfXag^CMag]<JY>mRjeN%aG`P6rBIj<&]O=m,@]:h'd41utTRh,7_t"M>ncE1[3Iq3a%A2tQEJ62t:C6`8eT;:t`.Vf/QJH>=AM$cerL)2^IT`nErCt2ZWjZ-@Q\>l:nR!uid5>M#YMmm9M(ue#<]ol44r_/u+O="9VbVhkL%J0u!K`tM>6qZD`Z:N]$*6!Sqb)UhUdRUkHS+.A_n_(IE^;.(^A/HN5%BV:>5.4.?<,l3A6,SA5jJ2Mp0J2RlN/+>./'qY1?ARb1d%`\]-tY[F,J8`g;M@I=K]>[Zb-@>40,`)-'/mjVYhZ\K&o;6J>`NN#f*/[.:>WgMc?pBZfTdd6u5(7Ldhkci@s]mcXWk#6A9Kdb)n%^!L3ekCjDf1De0lOYTsV)24dJ<'[?T!RJEE7#nJs=uJ_)JCE^R^k>%C21mDeoQ"iK6aN"HM_(fYTY#a9bLH_6S];_2nQN_5-'f:i%;3J"7X<d;BaRLr[?4SUe;1V<=&kaY\=&\$G7HCMb:DilIWQa6K@7Zh6;:ArdG_SKjKDlrnQ40@G-`1D/!^f`0+CVrALYKZX#*.,b%ANAN]P$UcN7[o4-/65$H+rMsHdLJpqf]>hq6W<bAfQ<OXBk,V+<;R4],Yg6/K>TGtI%*OGA@.4><.7\6EQ$BrZL4Db4Q8oi9e9f4%V:!7F"Y=ol^m-7n@ZAn@pb+/%)P2FXjo-<6e\%l&s)4^Y.>tWgd,YUm)fqsBX/Pp!PpQHf;aGXn9V.>+SpQ;AGT*KC@eq!?6EOkl%rei&ii&&Q#Wj!bZRbY;o1sd+J/atl1GHB$SpjW?>4K>[1Btd&nJj<<>S`U*HiC!j:NPJL>?jj9]EGCc:WsZ%1TuX1jlRHZa%K@:'%U+eL(;D]LP9Ll85ZpNe(BEA)__fp3YK8.>6MTQ3^@V%2IP(FTPPuUhAP>jXuL]9Ht'%phc0K0?"2T0ZnnRQj&756>Rqj?`S6l[Q+%,dMZR(%*bKllu^q3i#;("I9FRZAC@GajImNQ@tffj&nD&V^+NZ9uqP&;K%C<5r!&;8U2H(KBLH*OecsUF=#L#cdf$ha/VC]*5dPe%]V73B1m'!qag*0cmMf<n;o%[2(/d"iQ$"-mYqF+Va9$6o)Goq<=,EME1^0:6rrhWEs*pI5V^kN_SE:BnLIX?pLcs%+JO,CM@qQL&%m/MakqcB:f6I(Ugd2C:$TWhkdQ]YRl#t:8HJ(a4$^9A`)g-e']N>*%/D;Gp@7@5+=eGs;;i>\-oesCE^%fI*A5^P=^9,(Z!-]nPQ%YOGrOlPp$,<))@e3\PIK8>$QYFb*i8Ig(P$6j:]7`m?3SW!]KQ._nLgGtP1?10=KR;+>_hK[3em!Pu_lf=R,m1E-MK8/oK\%QV%P%a(%P/K"d$f&C6h_k,Gj7k2MRc446ZO8^PK)jJEU7]-l^Zpg_,g+<taC$&gQq6n0;"Pp@WQK1lLBGLFJL&df9f"j'.V=Z/nTf`0^_%RI!D/AEimriZ5O#5ar&34=ml/;%Sfp$%aFq=+p^@C'j+j(94r=d+dl6s"PTd3a$8SZQbd-"gH'-H-Q:o]4Q6Ks0o0LVe'Q-:;pj*%F$egE!P9OU:ETH4k#B!#ZQ4BTp:T:,40?!FQ<ZJJ&#e01V%*Fs\$X!/Uog)&o]NU3N:TJ\'iT@^K`4?;X)A$9,0i7B.?b'%!@h>O%01@[\F*UTZ[gTXEK&'!XejHTPIN?3aTKBQ7f.>Cb$+g5<dOoG(B/cS;f3P\3VeXCu6UF,l#>^Y"U27i.XqZo]?QF-([UuUXik^p1%b;F3]Amk".[O%<sFi#@$Gl#Kfc#?ViHSqZ7\pQ$W-rf#i:mD//T`lP\QUm>RJ7hm&7H%6Z\N,;rJ@:+U;kl6!:bMa9a.N]W#kof%%O]T:rohb6`%8HdqSIBa-I6P>;/UOIY6kS\kMWtt6KPkW>l[tuX0=47U(V+GuCS6,n4d0s$,kJXbHI)q/(+:.g&BG`%%j8S*F*)nI%ing;ril"Uf\-!io\*RK<IfI\k;m18c?G510r`6N*S$Z+_p":2A$noMhoK$?<+as^ae8?q>Vdq3j49=#ul8i'Urs$RNs84?@orTYu%8US"XDEZ##'U`S_!#Y9KY%083Onk89pfpI1>t[7oC,nGN4%:%J%:qD-eIhA;CpcOiW.*sRPtaYkomr(@0OoGdg:XhpAC^@<!(DT1%X;-q\llX:e9IXcLP0Rcc&_luDJ5sjnlEQ6u_/V?P_pLJAhVh^gB,S7nefMtMiJnZpO"OrDo>:r5N!dm:AAFe]MrT,H!h69O2R>3`%+^'7e'pA1]Flgg2I@2dH5:5!j^s?J&*KKKl0q=_Fg(6cel1WY;Yng0H+paaJ,$8l\U&^$k",BusU!e!)!0pT%78IjO/+rPjE+sUV%"kcScLN\QcjfPFU(S=A2I-]]SF,KZK6<p9S5A7nYP[qaMNhB#C#frAS`HH9\l\gBICc)c3Y@Oj0[&kq@*Kq22^=_.1+\c%F_&L$I%6Pa8Fi6#g*B<BE8HtWn>e@%Hi0``&5=D\0Mnt-*4SO.gFR9>59#%&YJ*_+uQ=Z.'Irfr-R!n2=TF??0c^)gABe;>\\I<o<8X7,!k%BqSt5#NMQW6.DH0pNMOo'KpQEHPu3CK^DoUhC."-2#uH#?$@'8ZHu!YG;[m'=U+GLl[o!&MQ1.K,DhN$=$j]VJb;1\eTF-GL5(D0%&Rcf/3UN*UNiIbE+;1:EJF@$SM[\He&I#Asc(P$CV$AcB;-;p@LU5+-+d>ar<Nf.a?[PGl(bEcE=ZOTj\65*NXogfAm-!\26_ZmX%q%E&!H!6oBVJjtU&X9oQnY$"=@9(j#[a/!%[%0oK\J2Qd(ql>(26^muR'-D-6WQ#O2QZ,<;ijk<G[VDK_Og"^@*:b$.F5&=X)16n%gs3Tce(-;;+M/;\4:NNj)Dph!"&p)>E`ia.4:<N9m`bH/`9SJ]gUN&7X4Y1oCDe:S4hBrWZD5s6A&!>t#YGu/Oqj=@_`TQF4)L?%%(D0DHaU^n%lEtaIRccQY'kGTVpU_!-X4iCEO$#()+1d,uAEmtj8H@\0!nk>EnCgXLr%+X9*@O.#WQ,*@h^lUnRDlp>oRfBFff7P$%Y"@^oKuBA28/fYr0B`hN:8B"GZC4F'J=mrh(p`^PTVI0Z1=1[cND(<h*\6W#Bj,iq!q,QC*L^><[=knnS_9.Q6(W'2G3CoF[M't!%\f2$Rja<mRbG)Io/[MtuH(6QnQB[pse&1Vtj#LRu+9RM'L]1to]r*pAg3&^4$<L/QnD.a3B]jR\@U.=nb6g]$=;K(mltlon@pbr;%'?k>_Qt9$`V)"BRCj[AC*Y%Mai2kM=F^`F([D0b(\jrq>6<;TkGIEGeqBX&VWuaUBa?W.]8eYNA]W\Tog97:`M5H(%Ud>K`hVGJ,%n)#&jfTs1PRsa#"YcV.$o[CO0n=>9<?Yk5l\*6&hS][LHrT@9ZCMb^brkgSQLG'^[NU64OHheb60`;)5j@Q#=`TKm2hEQM4".L'g%3J"'(mja7.FI0p[2ZR-Nd$'T&\TLVA?!AMb)Pa0TVa@:-3SoVc:%bD$9jM<L,m/r9]h#OCHGmpg@Xr<u$0I3GBG:FRU?9EZLUkL\%Jh9<K#!"@:1X]-l`'e"j,CGM"n8@]L1CXOVQ4(Cma@*"P2/,H;2@VOqF=pF06rc5?ijp[T7=hBu]fBO-'?"LiLfHOR:n?D>TS,ai%,*Z].U!rGlMTJeL3Mn6s,g<hW?%X]prMP>AT<$:P!U2IUDS&\QZh_2=CQa;<84"#d(b/IDoQ68?Tmf>diNdYF3%fIh$&@DaXWCGs%UX/mY8o0`=k*ZsYB=?#pX1hH@AY2tD][>BU=-77u.X%!nN"%$q$T#9I\cT+;fCfO[:F8$Xg-eYJn$448SSb;4Xk9nlW/;IX0$g+b%96qh>"uCb1lH'*+/j[bS4F1GdiplZi>)f4ar/*D[l^-;JAh?>L?G`/N8V9]HfejRV9ZPs:@+oX'gY<eAHC%'m]A<d[X1ZKE28<ac%0>El0[$jcGiW^`DfaeMJ^R<GEGN-5/O]fre1K3A=mDiQ)d9\4)c/2T#iWW9A"!$iL[Mm@=I(&Z^f(id`i8nLcLThY6UXf;-R/n.<%U;qCBljmf1*SNj.R=2MO5D,J/g2`!A;)jCZ4B)fT!G14DIho&_+LR%M2/ksP18BGJVI#K@!QRipo88>_W0N_=h@sQYXk,@h]H*+-%JATV:Fq[1/c,%<&GC*OJ&pE'UZ1sr,ORjqo,U#Si,u0I8DNB>S&&#E_#+r+mcLZ!dQDZ&^n*0i!'OuilO"QU[;lT.>VNYb3bqY6b%Y0,E#IDt*GKVFA2Kqi3iQ_Pb%_LjeD.dJ?GmRB;m0!ZFLTGeP]-@4u3Xcp*HVYr0ZG0o%k2-T+Jl\6ai$^ph3VYgF$H*S"L5DI"o%SPSm3h75ZWiJX<C5HR'u!s48d.uMi"P(fT+$qj`.mr`p0WI&GX,f%UB+-Xc*!KuTpoC`Wn#6SI2/<Idh;Y0*mJaQS?6sCY9E39ht%;5LX?(MYV*S7cDAT9!;@H&q!^Lnaa+'T<u[1aD5l>,.mWdf+!(FacnAL?F`=_BL;]gO*eY-FCPSU+e]P`9em!=s<Ma8G`]nTj'cj%GRT><"b@he&D>`aM^NdXp@S"\FV$4*?T`3?H0*6k%W3p-=?dM/qQeq,oE.H]M>`.U-<jMirXL.iE(@6QjA8pD@sWto=f(%Maf67q%r]\T`c$gc]cTSDgk.Tc@;a.Ng[_f-H,7/QRYp]ScrTneI^6Cl-EEAm:SIiJNfESLLU;THcA`22G0AW#?2Pg7P89c;[3)sDM$&rVe%iluo%bD2qp'@>"H]`B"9W5eC[\-6'SUo?("o>3I?Pb(_^#sFm.3arf^1:tbo.6K7'>AX[VY?hHCG4qs9mfJSs+GqbY209.=3>5fm%721!SV-Ji]8N%+!?Y"]c2?-E5(Q,+L:>u3uTW+.9?C_TU?AV'8=&)m18[(-CL_#5[SCd]&W]?q`eV,W(Oam]$fu^Qo:Eus(Mhi4F%0W6Y!7'n5\SEDCm>=(Eg]WK%4*=tYjJt-bF^5W/?.^;'!fc;Ve==buCVABhc-PNn\YHnI$=gQ4[b9.s??T\<:O1:pJp&WA/5KP,B%ZuRJq#M2)WLkjCtaU\8%QmK8E;jAG=$a07+_?Z;E<CI@=#4W,]>tQ,0!_lS_iXHPYdZ3qe`W=:W'7KUbPT6Fe^$n7>#u-Xh-ndKc%\V_\5;;4)s;V[qQYAI"J<[2^W:,p^F6s"YTGnuss3<Opn:["J#Wm;[AKi4D23aL]o8f_Y1m#aYAJSgXcO@%WZ+oC"/`5)"h<F+Dn%\M(+;m3o#N[`orZ8j8tYK*&3apQPBUGkZBFU_SP!YhEn_>\J*jZE$pm9lgDF9)j.&NHWT9<8`&kj7k1d3*%$r+p%jqVJFRnfC&:%%Bs'9C1pjj%VDPGI\dHI&2bRh3"jq[$KI\Dfqq/QUIO."H9ip@K<ZDroOB1tR7LoF%<IR(++B9/H[]S_T>fPfKkNt\@K8<G((D55#%Q=&sSD5ndl0DC`=X=?>&e?g1@8!DZ*bU-.!8nM<"cSK@hZ"e;_aRr]OZY+m7#cAFrZgp.*dc?>1]6=O=GV<g@&+bj9aFn.Vi>Ub\%a2])K3dO^/@;Sb(9VPQ17U-L`&lZ&sC@+L.Wa[&\15>Li(i-FY#*24=HEg<[I*&NN9CdYBePFo,@'?4be:jt\M4:q!Y&nJRHBnD?%^Nb]&fRYNO"M[MC!J0U%GXg@.b2ET4Xk,[/fIbndb3UDRr)3.W'#KkSf29/mKL++?>GWB-ba<3n9h&"'F)q/t%,.2jd`u^Ai\lk"%L)QC'd[Y4#%LL_I;e'Mn_5oaL?B#S(Gq>\DCfXFF,oTNVNT*FF**6W.G#kS[iW,5l`JjmBo+W3sDBs-[<uk(R`@4fp3V3ehG<knT%W$i;m$`=BJjQ7<elVZil72R8mM1\@?]Mqe-dG`ZmrQY\,rSE<mO4/7r:fc'E=*>Z5_Xb<+r4>>oP!f00n<RqZB>[qc_n:d4Bd_&Y%V`U:)p6N=\2ZIfX-PVHcWu;2Rg!++Dn7U2_-JCu5!3l]Z#6`f]_nWYa7b9mrkP2mBT]j]<))W1Ab6*lhM(L5cScCDh3:GV$>qN@s%I(BSZlgZ&\Xd,AobLRm#4.bkppiP[U^?*o]Hb:$`m6,f3Dr3MTcHic@$4hELEA*;@VJ;25Y';<d'5'Wig2`c3:02)dWeGKX3I/gN%H^Zs$VjSVQUm#E`@HJKl=0j#=QToRjW"+N!Wp1Zi<T'R`lA!fF)7c;O[1__WX3o"<q*ZJnc$[XGrW2e7;7-n[_(02B`u&NZVBiGb%f@iWt<^*8D*3&_%A`8N#c8eZlV+_Y0r4'TgKf2=Fb(cimk?[tJ>P(l+YGU/>?(J-DTBN%SbP4\U[?,n5_^h(Z1rGNrHp3AXF4.)m%IHuE5Ak>4cDtmBeC,$%.F]kKJhn60Hoc4R0p8*N'Y:]1?Kc,neHujjGMm&HA%tAi[,6-U4Dd;F_chC-AS[!*;lL3)pk-$o%<K\dd%IOS&,kDQ\O+/,`G`a;#7?KdiW3K+Y+r[_E^#aC[un1[!$8atH7dYB'(4=D;'$dM*I2i<KAFM/6mg*l%TYjCJ`WU6PXm(_GhTc\1p%O>h(u9CX#]J%Ok/>X.nM#Io%h5AK07HC;P'X3BR6B@BX!1MnmHgujeUHjt/L."n2[7)F(^S%1k7HZD;:<\t1V4q[0ogVVLo"4\SK%OU[-/_#>?4$e^/].L)cKNJ"E\&c)U_ojLBWg,ej%1W"8GP0\U50h<Iof/hRC;bcFOF48-6@DbBbc/T,ah-O/YkL%T72pUIpIsC'[%8m+?G9iiU$kOY[!=XAO+k4Di)263o^05m?5gWTO34L`W2U!1:-KUSeOcChb@kb2"mAOAPZ-E%RrjRLGCS0"\E<7tk`fts;Z";jLi%,"8G-"iLW<>kJtqq0=bB5;cC1%I76<_]pZXhlp"]X%aZWZZKLRqo:F\-jPcPV&bg0Ujf9m'1q^'joBshXtX)*1tS\:JRFlQqD7Y8%g36ME26/rrQqErD3l^JaoC;!V]V[&7.1QGs/o%r.-(JMj7)a<EQ<UZ<\,9#`<2ir>e13\\693!X>$kk7B'iut-mGR=gC!Ii?seMI%<65C0Q1!:8N?U(92r5!uUtQbfA5SbPU>"J`j6UR5B3!B=8?ukE$CDS<8TP)/,Z4)AA3o>T-7do\*@4o^*CrL9$;oWj4t(clVNF&'%?'L3*,"\[OcSV,\,Y9GA+4[uI)EHZg`[RtEkh&I"&rS?6VO[Xsc.+`/W/-@ImK2eG9ahj7F>9l,,kuJ=E2WNA\u$e&]:r(S-ed)\%"%Wf+@HJ1P(H!`mTIh3c!'+bZYDS#YJc:We77G(Te>f#K9f=`0EJ5Z&_:CNq<>c:79%lXlKgc%/ioB>"dh=$bQ$/V$DEQ=cJjdjP%P(^B[cW;m`!#Q2g3(pe-SVA_mp;L596XA,VP([jXC"t"\KfGQWe(c8'#mQR?AVHUA'6K:IoLs[a.D>$k&#Vd;Qi(o&n\pqlgY?>U%M_`98Ap_%NiDsfi8I"?j`OVs@d_!AaO9Ko0RE6@]A#P+)qOkt_WJ/_AKW)0e,Nka'W6*6iY]iq>aRqir65#IDS:?6q6=DpMEEcbT%!#m"*E*eW_ha0U4l:2/+,i+q6WNT[$c2pBegV+OL*B$KaRS`A`@u[NdN=o6ea"GO,9&fTP]Hdes5)MY==/(5>1,YQpnqU-2-8S`5%F&c%kbd<r`*oInn<<Jm8ZgKTNp00oobTrD)fihZZa\S\l6X:>t!80><a'9]]5)P;"$0rdh5=m0E'1W]&*;<lMa[g+!qBJKPFo#[,%$g_9=BO/Q8'Kmu$DGHeX#fnLO74'J/d@A<rg8cu#n<@Ns*K-btOIf0^>[T@REI(VUk\M]D)8f(K:-_p*T.Vl5%VtFO:[0EK:Qpuc%NjeE\Q!A*8eQ(c6M3]Jtd,O?d(TMk[KC$GoXSsjcgPSNI$?d-h\!+A'_M$ERor]5?<U:m&qR7$XmZC$dcY/>`^8`XHc^p,A<RdHU%Nq06'is;9M3rV#,UNZ4-^"iOJ;n]dTh>C,"E3sbLO(*kFP'U#`,K[Sc<oVP+C5G7i7m*crl&phEo_F<n'<NeL^L$B_YW$<'NI6rX%e]>45?O_CHrmf(KBj_nU7NJRmDpcE?pa/.?cGge\YsuH!(Mi)9[':'fUHXu>o`gDWEGs:I2Y(]g=WZt"oWnA2Dpccenr:4`,N#5d%D;a1@ZOM;WL:34_e'T*/-8#26+5X#qD<)Wn[73@-eZ/rED;(GOrL<Jf_AmLEfS$TgWjA<.L&X$4I4L`Wj&2Y%?$#mcDpdCM6Snc0%'=HO^A^[RKq@RnuhkE?o61+Dh]>F$iYhucq^Vt$A#ACGWZDlEn,jIC>^<"gW#u&Z6!r)h@H]^kl#Z0GO"u1ueI%d.AV-r$bg]c]u%TeD>MQGNtKH/MRY$sEfg"1?WNN=Tj-`+car*&Qg?LJhaK>k74rH\%Dd8(Vt79:@o>>^&4Q!t5tIF\5'c<ME2REc2;=lM,H\UeqNL%/@L%M9lh9QrY(Z^DV`^i=E/M3@Jc`!gN05Ri`)1(MJNKW"ncf4/9RmQc^l8Ob>M?k<5AC'lO5;cUVPq:Wg=`=].`Wf3*g0d*TR/l%5jPHjXD9!,D3jf_"DX,[Q`ieVIsZ1p=X_G<#9s8K;1[k4En)UXOe"Q;kWe#(>WN%)25p0DWoP6kB/M?6YKC^I_S4Z2:h;Xo?_fI9%HIXH`O^'pNcEbJ:a.`ul=E;%m45O%ZgfFD_Uf0WN'oEji[nTU2p`YY5'J`+.g)NgKr)>T3234!6TBp$Ej])OX7:PVa>GVYo-NSmk%^$=6NaV5b%;fB;"D'u_DV+tA2qi7!9;7l.n;^JVf;oo[u68l_;nVg%B/Pk',AhONhDIi4B@];C=+&*D;]bj_p2_UCQh,[K:D!kX&%NZjeAoSrc=Q3->G2INGR<H)T%8j5s5DM^WV@ANU$9lrk$Q"bdU5rY9g=(9mlO@N6+:cR`6`?%,V<k%M9afpTeA.$t`b4#Ud`ibZ(%["KL.dA*t(V#'RPdcm1f:67#B;PmZ7=#*(Vgg.-gMRQJ0&SYUoW(g'*oq,ea\:4+uBHZYBO_!Lk0Fqo8F)N;,RXWUkqHQZ#Qddag%<*.cO4:-GpBap,I_uLKQ=ip@W]LRa+'\D918sghO"hbPQWnQ_NG^rdoDI?J0VcZs\.99HZKiQZq?r^Kn>YnFL9O*6;>al4'e^><E%XZT$Hdj.3i(*%>ZFBtCE8adi)djV7rrHbEel.Rnjlb"OJT)mR',7trCXQ6^HZU!n8B+Yu'^%^iT.TS5Ja((RCpU[H4>kE3+U=4J:%gGn"@Y94B$gO3NMaarQk16BNVVFCO[i,OFE*jO[LmPmYtb@*5]-AZrm!="^)oI>5Bc>;[mcQp\rZM"knHU_q4RK.jMZ_J'b=h47=%PTbHMM?P>QdA+1c!F=pA9-cf]g,=d7LiuL;KuI7=](8FD_W[OXoQ4\*Kkt`X#+H`R0k?T8gnoGIh23X'6CSB>VUgG6;3^8l7$5VY%M$RC.U1Q/H3"40&Zik'tX59&dX=DddK0`bo"^tQmpWL_@dn6'<0I=Z4mLX>'3)^*7/.<!!S4^<mol*^6f4tt[%Di6B@DV(!-J$12%?kNqaQ,(;S)/P_6bGm@@ikLtBc=u;$+I1["iC*b(E"GTk)qF<X-:j9iUHMZ]iOfeGeM.Z9o(#kfPa8\=I%-"5dJU7R?(ra+AuF1#%"@_:A\L"FceuF+A;'ZP!M)lVp%h2fl1.$q+dlP0lcIPWX[rG?T!`)[I5tE:g?_(5a:97'>P==)NYX0^GOWoH>ehutlYk&.b-1Bmq%N)%NlbCWou^C_:LbF6fJ%\/8Mf!L7KoF>p#1Nap':*BqL"-=7k?ngeph:mraX"+T)1eq9Hb66!T;9A+39JRFOe[f5o(l\BtMeEB/%:*WOiH6cKSE>AlWZ+/J2&tKNbS\DH_N@QPFIAp?glJ!$h@#.nYl^3.,V\7^[?UP^Jmjr_e,'Yl\Cf97!$.'V&F<3CO@"!W<3S(D>%:mV&/P\#+IAJpi6q#JTY5/jh/cX9o(\Pq:;/fsnAO`J#H/HdclBS'r,'r?n/Wk_@h!Xi&Qbh(q0glB3o\+ihU71qE<FKOH;4I[\S%\VG98o@fI4IL`-b$>1=rDI$<&)/$H,*t,lEHW6p/kU70thNb$akLog3.j5InWBL"`41WCV3&C\,e&TA"J?#V/k:BLm^?:9sU20Bc%=ZNMYTtsTc2[XA_@<(qSkZuf-Y3HR"F&.dn52N$&-Q;ohpN!9Y./=mp0*':]e!^8SK>R5U?>Olj?ek&,#"@#GL2kf8a"6V+os'L<%f*`qfF1+T6>V.acMlOu6'49SIEZ6Q/lCZX&n(#7M"td;F,OM!7n80*/DNhp+V0ERk#p!q6V5KCgh5pX:j+VVN3b,+dbgp4L8tf%n%CRu6GT*lF%<'X^/?>gnX<ps6u+^AFrkS4]#o$Bul@25Nn?,a)OSLq"n="TZY$p9cU:==2]+r,o.Vku7g1os4Lkr;h:RMpU3/;X5"%EW4Jc?F)S8rsF2Gf:o;U>Tns#FObqHC"'0JWWVur-gfUN4SRT^+R<lDk769#npdh>Ds=iml)Ocl1"E<ff_]U7pR!hirO6FmV/?2U%3k*@@7&RKhqs0qh153FBb"ZBb8%Q>p%VR#TW?XHGQD!Um:Ij-N0<@'NF+jUP#<R4+8d[X<H7/]\<n2cF'LG+ep3*`+!^BUmMY!$T%Yu"N%0Qo+hOKGtn::<Hd&rNfnltrR^=#j3]bYfJ9>1HQj5l_6@Z*&cPi]%VTfT7A(?r5lm>)6D-P?tcqV-RFc4\Ts[#Yj8WX`]e,%r9\cX'cjmY>12&3jl&2R%sb#,QXiAKR/3)$@l25L4UrDj9i$Nt#nY[\Ea22?h8Y(US9L>Q<tRi.=7Y1rOQ*n,:M\b:c,bZ6fC1+/%GFLr^Hm$Ggh\.!E-THR5$')L(c!j.)8'&f7og68d#5%be\':dg`>N_L%\L6IBlWiTnI%DD,lO59Cf.>\MRNq4?qG`mSYSk_1uAIp%+>#oXCKoIegOjdKFrD)*[(U0\L`03eroR4^lJ!17Es#oMfpU/.D_nDSYhPUb^H&1*%;ER;PdVH@]4pA7^Q4k4m@-i+DG78P^Ao/*%[fo=_:%n6Dlr6?MJ6ao.XlWQ^Ku^-rcr?Wiir4,ln-9Tpm/O0:'F4GuK;m=R&""s]W"1j/=Y#:&VMB[-\$s"<:/4N7gU_t&fs38_%p!Ke-eK$87r;<9-:D_DMO.BVuHjabe]F=0^QY-XgBKE]O:5P_!0)5tDMhA(%-,>Hb#8ao`<[t$B/"ElZ5VS@A]SOe!RNAQA#U>,:%&q2+.<*pA">5^++9C"TR4cOQbgdsMn+R'2>(FSft.T4(K3G=P"#[$-p<K\]:`STr60\%onn/Cl8-?p3?*Dq0b4I8alO0IHajl"D/%j#pO"pGZ.#].)b5p*SN@+#[PO/B<.>EC;V>Fs"\*qqE*Q?[iGRjI:7@^u9_P8,gX`\>B($qY6G^1Og?;=;i!@$Bl.UqI2NG8[4&7%n:N?fW)QF$((#gYHi<&(o4]0;-4;,dUD^rG%#t45c'mII=LPK#NNMf_H+[1=.;h)`(A=ebiP0SZ9se*BB0mA.c3IEBRnoZ(Rm7.j%aSY*Wq&]+,-\T6&JZ&gl5dg.qeeEtM.sbY(eT&QYSeUl@FmQ,XiOo]`K*"p"=j-RIYB.]43A#j3LLghhFh@0+0Iom]lRG9)d$;"m%!SGu:5'Y6I)c-HN'k?+E1`^NDg[3B&pG&Nc3/o"M`Vf:Rna#qV(Z2)+@dDA)"jr%;#c3bmKRih/HD,^*]g/bmEIn=%eBJ/VFqKK_%%e!&dgOV<\o[jXf#;^3NA39:sX%S49]-D9GMHJ&m5W>Hf7AAJpgeXODZt]Ko.cF9f<DouDj\=HHNU5?*#pUO$Y1Z#;OClDWM.S0h%n!79k.NLn1e<''qm-R?sf._CpCpl'72i"W,4WNWK#5a83(@u\cbMJh'J)GtSN7dLSA"Vf:RrQ'pa0#;(*,J+dFt"DXMMEFLMY>ND%g+lTG43cc"Bl(5UcU_Obe(fnhg$[:+;ff183-L^WFLN@([<rh"NQ3T*Yq*j4le[)N^-2:NB%OM.NX%"q16.F(/\/f.]6<Q-TlSeH%XZ`'I=.9iGVR#(q]=lmNRuQ6sh66d(j4qJ^ao,hDbN>1]$0O5-^&:-4P8U2e4!ou"3Z`(@T=W:t5,RGDc1j2FG]hgVBH"Tq)ZV)S%]u(M\%7'VU_6kIP!L7V#Z/`K>VRTXO2&,EK)RXGjhoe:]WK82RXb3/?*2qTT<QS/<0KHokGQ0,N8ndZY;GIj^2PQp\%+?7`h((<'%WPg)ZF!/MU]d3Ui=f312;?c-.DGh!CQ6c8YCu1^1R6"bEd[>6?#W1pr-@&as,_[4uf\`iBNIZRP,"D8QUukGCQ)'&(9Bb=YC\1[;%>uVL=+J37a;1ds).-d!:c^'hW7@$1EV.E;aP46]>ktdeD$AJU<TkXbrR$8pu$OVVc'HCNQG@gXd?r[W-k\m<)<C]%MQ4_J_KA+Z-%nlaKee*4]CU'p%)A`ENi>fN`E/[$oI+Q+'o],b2+O4G/B,=gn]W.kDK(55g$FtYt1^CD'CAZ;/o4BGC2V[N1sf'7[mc#l.7GWb,:%X.,N@\b4\dB>_c@!<)?Ygt1HVgi$!7]o=irch)%"">YZI9]8Ofq4jFrp"PkNB5Fc)VbL]+7g.K?Wjt):^HT+rXmGO4`%K#(NO5]_%.;;!Os2:D0;F?gSUP^rWPrIpq7`e?sb2OJu3WOpa`p<ClfELPsWuVJS@I,[D[Kgti>Km8QRsM#cn=c6kqc=dFVJpACViC*$m>Q<t%UTNdFp,S,g-LJ8ukAACR]@1)j%9p^9A]d0`?7?-6S2RaNS""EOr6H&q1h3C+&+^?m)k3^aIG&4N5=aIe3UY,MgtQG"Rscd[1H+Dp%a#9gNT?28G/K6Jdm.YL0K/R>hCdu_D[uIY`R+SLZriJ.lhmDuL:-t?AZeOh`k-fDK9QSnE4578bZi*UoJ5B3[UeMF`W$HaT'O((?%0+C=J-e;GO\lN,Xn>\rh\q8@/'F\k;Yc8EC10_(6,n=BMnUbCgj-ho)1f[[gb0F"t0#WFNb!f_>PeIggZD>/G+%'"jkRA&o6L&tM%@4lH]P,5=q5A#'[1]'f517m-kZE,f=Eg"h@5RfsjPK*I#-:IR<i7(Wciq)ge\.ML>MCnD0@UdW`e2sZe&m>c&?qb.]*Redb!<<nB%^#pU2CH>seR?B<]<W&[k2GOi`euC$;P)Q2/N38Xe4qcFeeI4QgTD,g$o"/bLC5OY2ZMi\.//9rrL@'lc#NG1Mc49-C^E:t_p7QjR%TeY*6cWF<V&<[j2XOc^X\$F^HZ*Mm%4-pI^+;O_JJTLlj".IA8@N.4'.s6tReY6=g8^TFs4=2JAbdFK5Ra1Ko2>_2Ho/QHPe84'?%52%5L`GJ=^o)t(X]5kO\kXGYsrh=beo^g\\aI4%%2#6d2WD[ObjVfRZY*?]Qe)V=Mg*$!er$oFNbU\QW^OZM7Q7A,V29`n(kdPW&%6>tFM@+!kjp%AW%.KHc!&<2j7Uk1C5h9?d?UAQp-pj/*:BcK4sdGs'?GiX'acu![@3qKTs468>T*p=R<3#_E*hLo7N[nZWEL!\kV%ZLG+cLf\E"2];$tEr5&-Tmp:#5jqsW.koT!To_!)T6^K_94n1&#CFZSmi'=="hVD3kQPLo:hcfA[$5r.eSnOeY_m>KQ9erF3j.[P%p@L9,i[8_C*Lkm"C3k_W$Vp#=pnW.4L_1h,Z_G[Y8@EeB46DN>J_ZXr)bC]i*O!W&emRh$9X>B*pA6hCO4p'4<o[WB&NtK0[M?72%R*<(H$(AD!F&tad/:/jb$)s?Z0TOi+j<JL#jp'Q&PT:LbZdcXm1Y.LKS&MrX]=KfO@I2:u[P3a:75p1Fm4QV"$bPdYg,GFF\Vn)e%87B,%`I:V[]eq>5?q,(ep>!)&GMB^HZc9SmSc-%2aUd-65;=6=LQ_#EN5RK\Krn[iS"7E5`I<kbW&sm'[uI<3W!=2pH[\/k63[ll%]ka:V[77hI]n'YeK#2:9GXeD_9X1?iFK`\2_%_tB)JWF#GWXbR#Y(2`fa%SMHN%l'40JT[X)%8(d&Zn%iS^Yp?G`E$6CNV_g*Er%%A5o;gU?7Hn&unoqP5"#PEJOaV%`Ohll9X.fD/!B6Gl+"aD"9]fQ<+MV=E-p'_\Gk\j?nWD:niIbe^+U^JM=c1R#YMDR@8;Qj10&)%c3Dfs,)BZ-A`A5e)_9^9hLPu<9KZUYl;/noniVj,.9HVBfh!UTh:@ImYtCeo9<]-YO^h@P/rK7J/&H=X"`p2%,,O:p;01i%jPA7d%SA2qE)\0,cUAQ<*1-H'5[9e^b<a\KeCj`r,^9QhFZ'=I0JX-$EKchRX6iTis6i79a#TCb-U?F18Y'UqlFY\-4i"Zs3kHh]jIZ_-#%1Q?l0?6hQ`O&O6%A6_Rk'5Tq#oEA=CW&]$`QifpT-?YPE3;bU'+c$R@g]`*.I_D,)Fd3;K9qeB5*Cs7RSSO4OktUt:%`b_CX+;30%JF&'t$/A2:\>:]d/7B>MO?LhP7]<Cd?RV!g!b:0;Jo_4XH]I+1_GSu\O=/RtM*S=,>/c3^aG+M;Xda#B(%R5r`r\(/E0cAKA_PXs%lbjH%8u"S8)+*ekXYnAgpI/1PeO5869-/^JV5B8_aM)mB)4QfI.M/$7T'p4$];0]Vr9<`oJ)a(H\&#aNLNkM$YrBYS2Yjk"LL].f%5_JrD)*)&R2f_*:On0oTB@$_RN5IG3HsUc:b#OJm_`Bp?gZ06'#>RUL!O9q1J+#'fbKI<gZfAdmCJi;N,CPk_B+"BFirlUJOtG"G%nuh)5&,rSLJXpYu>tMI8'k#nd9i9OEjNsutD)lLBeQdE)WREanBjob"h!S@WAC4W7Q,c2Q&FosnFr0k\T83A]a#8]mY^LpV4(6<=%[UWla`i0gep/Br@*W<V[[O/>/CIUsnYe]sJq<0`OY5kE#<1QuWX$T-G4m**+lt<#k3H#IV=%[[nTkF.#1O'!<cufC5dSP_eV4()d%T.,e(*!MIbij(tog!0>Mi7LMs>_t4OFft&187g(>[XmH$0GLC2E]sdqATUdQpX'.nrq'(VDa"-4/VHSgUuhcOCO>!$G%T44O4,BR%bF],KIm4ZsM7Re5j3L0u;gU5KR))u%kXolEUOFM>6+i:f.^`T16Vpr&S['8tZ/X+m[\BZe%*e3rN*kYH,&(Xb]'Yu;MH\Uh<JNob%(<a9C#]:%P_!FJEn-RBO2b0:rMSKpf7#!^=8bK;SE"!l!RqJ(FUF-*a=jhpl.<An@\deOO`cOA`SK3(!ChB.7!]>DV2J03_S%#TF%&(_7BIJ+fGFD_>"@j,^c`a$2BPt0Mpp"K_mn$Z$ghON&,qkQB`G4">WB5[DtDFPTbqlieRq[M?Na4*!lmH63ZN?.n;T.trXgt9q5%%p[Q<Q&K^!o%cFZ2#"E'9so=&o6]6?`]VgHrpXZl2*$=5A4i9Re5RAg+B[^@\bIJf(%AbXYSMr\"RgkM,cBpIQ<G<g:&+'o+%#lN%od6=:(d,*V`!HoV?.E?VLb1dm%O[K4JdC%rBqhtg&<jm9*A1?u'MMAG?]?Q9(0#ac8"_D(\N-.Q,]dHjL[t;c]N.<@1UK&?q1/,`%Q38>2@WkoY0LDht>4fB5\m/%*efF/mE4;q)@h52b&5k>Rl_1Ule`N3oL_Q'(]NAeXQOn6Cn8=8C+.?^&gV!WakdX>S&$`@UC0>-\%Le&"2!i__U`R=Z.TN<`cNe6us[GKegg$^gsbaXOQ1ER+ho@b(&3/"s3iT#SGIS6U0fABBcf:C'&17N*kbHo_Vq;pn1'L$n"eQ9aL%0q/:gd?bW!43BK1O_BT&EDrW17;WK"(6U?8rMmR@@&72PG[S;5/6'KkfMXQ$qbRfGDu1e]>JE&0Ed-/RLki^jeUI50ILWn,O6g/M%r&5=UEF+CeV?M$'@^XbDjtW;amcQL]8l*EL_e/>#XmgG:TAr&*,B.Xdnoj`>T+o9c9:cCC$.X2c/]W.@h68+b=A>L>rS4e9gMakk%d7Ki+jkCa9jU2\H33%4E"EDu]3`9ijhCljKY<to>",.fNb'5c]2TSpo'J0UeYdn`2;:\=;Ukfck!>)#D'*6Jq`U+#&Zn`tY/34[W%Hk8WW%#R\2Qkp`IkL0UWbLmQ-;6"D7\"mc8Vb_YhEt7&6m_d/Yc\LPccJpW$>2"P8qiTD%07PI!rV]]?LOO'DF?QB@b?q54/boI3%nmV4OM43_8CnL_"0AcaR%IP,\U;;2Fc>u!7l6p1t%/aG;-_OJV6%W!!'jAsW4",K((mhG\E+mUo[G(!B4b1f+?A6NU47.1!'m>Y_%_h5'jgLE<$iH?="Ym.#[.=_CGWL7eF#d1=L>!mK5&GRmZQN43Gm:O=Pc2fes'DdRLgmh10EcHQIjO8fA4"r20m1e3ZW^V/bEi%_3%');[kn_h7p)#Vl+64$!r'gT_*m%Fd$45rFe\O%7Toe;@+NKEo-7T!Zk];NttJ)a\hYFa2!r7$+QLR>t6+3i#jLWt#^qS)bSs"9,d%JJuJukA@\tqtkm=q7ljV5Q?j=Y<M<0LAN9@mFUf<f=kmd?3A&IT(UH$SA/=sg-<4O3am",D:K#b8QCMP5h:_.bCRed`2;4]9LsAq%n=GND5SsV0<lOOlc?V8,K>;N`KT-uR^!1Ta[cZ><*ilE?RU<I+A"n)).$Nt:.E'NWKjBL;/,$lUE/EYsYr=oYn!k%F/ZGd94o8h!%B5tsk9mnDb$HKAC@qbo6G\5&J`^s;q7=9%SX"^Yu0Cse$=(mRCS>UU)M7bnuVhEk83b?8%Sud_t/;eTPrc6X`-oIOkMqb)`'!U:p%Qd1GbD=3uZdf#0GI"-=Im'\q:j).V$@E69/`+/a`i?*LX(%[@OgooVicM_m.:$L!5<fEGR9VU7rI!!0e'#"h=,Io("$G[-c9?@!@%WC9i94i4'$1-#4(6Bd6lOVs:/Ro`sf#;XSRX`!u+!tHu7Hhse;ip&`;Nu)L-/Z=n%qn,`A,:&(tHjGi*e^&(>f!?bV7WO;n6,Yad%H54_T&5V;)0I3.ZX@Y(<^N1!7N#XI@MHX\C'U"l'NN%"A?Afd+BFK,qk5ZtU\V@mQ6$Hh^+:OBMLnmVP`["S#faG;f4l6i1Rqg+k%_dY"mh:$#K^[\u*Db"_+VJSN@]U`W&:8s^$dWZX9q_`K=0>(/sIZ'3^lY;MR!:mZUSG?X(/Ad23d1o3_&K:ONVj;!Z'(C,M)ih?2%a"<"><i!3MWfc8cM4:QE4XXK#12J*W8Qh=:KTU%uJ0KBJ4^,`O-+7QDJQY>O>&N^$U$Z%u')&B=n%OWD9#VjpAqV+3jBYH=28)/#%FQKh=@:DuWFGCm1+9gV;cc/?(g8#a&2\JJ[T(S$%"P:/P_g!=JA-_e*c!'&385&<M^O$6lh^huoLu+!$B[F%-R5eVDo0p973d#P0%`O"rbBTkV1Vcku_HM"V.`pe<&kcC#nV,a`O-CS7]!g0?`?#DdrrQUaT5EpTLDqbC"/FVis/noN'+"H[LX6eKBht)kV>;?D+mcW@=%[-S1SA]FZ<h32a[\0gL[X<KPXO\d@-oa,&=?cD>NOe,L,(=fq5l>=DT5$:)r7uH+DUg4W$09sj+1moB7@b@+a9c%1W]5eb/>0!d`%mFXDNkF%abEZM>0>d/ho4<ZBr5ps=MB^M:u#69(m@;?suh:i#1nEnAV$rOuC@M[)1<DJ)=7&R]](fcbI8D!:C]L,5rU>VP]opM4R%l92\s)g6M5`IT`e0ijP^<%MMAKGcElH>h,(eA/I,KOZ9T=91:9AHa"&+eik+DUCcB$N[j$ZHsR='kgd5=;P1\=Yua%Z^e^q!Mqak%ULd/tB%RJ1%IRD&r>N4-B0)R.lLPH)%J/ohG$j9Nk1,/Zd9DJ\/Rn'UB&aSMRPJ,Z70=XVpAN6[n8;f-@`4e]K,rq*]JX85%S?MG%]s(_`mT2DB^4,.\jDET^VS6]M@AiDb-"!^#G]kuL-/V64g@@pD\O=)c-@0%7S/"C!'E#jmd#b]'Ma+h:)_fqJ(4^H_d01R4<:=u$%m>!9dZ)M6?]%8.&7]4"=JX3E!I@j>'*9(D=:]%8Bm'cj>Yhrpj>JOYr./XS?c?$FY?<s$\c'nPIS`79c)l'Din1FkITAXKlRO6F"%93-mn1U:Y>-CGt-5"So[r@rqp.]>AF,$k;0@cS3GHM/kCs03?Y*0-ReRBc&6QQ>7IL($C!.Lp]nkUMaL1up6V[3(1h&Y;2[rQWH/%Ihhmd*_e:-j"1)4bD3`'1EJ`CWqgd\lIYKAVnPlR`;Zk7!!3&;Z@\H.]_:Qm-uAd#qrrm\J#n,Zr8[hPnW3_=Va#V/r98tYrpq63%rhoemVa(1LJ,&8(TDni9J,IJcGCTP2Ij@_ae,Q]QEqf<XqWZ?+r(hh=l0cmtl_"/0&fYl&r.c@(s69=CrrYak@Fb~>%AI9_PrivateDataEnd